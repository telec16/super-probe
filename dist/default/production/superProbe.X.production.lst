

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Feb 22 21:49:15 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	intentry,global,class=CODE,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	dabs	1,0x7E,2
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001C                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  008C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0110                     	;# 
   154  0110                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011C                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011E                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  018E                     	;# 
   193  018F                     	;# 
   194  0190                     	;# 
   195  0191                     	;# 
   196  0192                     	;# 
   197  0196                     	;# 
   198  0197                     	;# 
   199  0198                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019C                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0219                     	;# 
   224  021A                     	;# 
   225  021B                     	;# 
   226  021B                     	;# 
   227  021C                     	;# 
   228  021C                     	;# 
   229  021D                     	;# 
   230  021D                     	;# 
   231  021E                     	;# 
   232  021F                     	;# 
   233  028C                     	;# 
   234  028C                     	;# 
   235  028D                     	;# 
   236  028D                     	;# 
   237  028E                     	;# 
   238  028F                     	;# 
   239  0290                     	;# 
   240  0290                     	;# 
   241  0291                     	;# 
   242  0292                     	;# 
   243  0292                     	;# 
   244  0293                     	;# 
   245  0293                     	;# 
   246  0294                     	;# 
   247  0295                     	;# 
   248  0296                     	;# 
   249  0296                     	;# 
   250  0297                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  0299                     	;# 
   255  029A                     	;# 
   256  029B                     	;# 
   257  029C                     	;# 
   258  029C                     	;# 
   259  029D                     	;# 
   260  030C                     	;# 
   261  030C                     	;# 
   262  030D                     	;# 
   263  030E                     	;# 
   264  030F                     	;# 
   265  0310                     	;# 
   266  0310                     	;# 
   267  0311                     	;# 
   268  0312                     	;# 
   269  0313                     	;# 
   270  0314                     	;# 
   271  0314                     	;# 
   272  0315                     	;# 
   273  0316                     	;# 
   274  0317                     	;# 
   275  0318                     	;# 
   276  0318                     	;# 
   277  0319                     	;# 
   278  031A                     	;# 
   279  031B                     	;# 
   280  031C                     	;# 
   281  031C                     	;# 
   282  031D                     	;# 
   283  031E                     	;# 
   284  031F                     	;# 
   285  038C                     	;# 
   286  038D                     	;# 
   287  038E                     	;# 
   288  0390                     	;# 
   289  0391                     	;# 
   290  0392                     	;# 
   291  040C                     	;# 
   292  040D                     	;# 
   293  040E                     	;# 
   294  040F                     	;# 
   295  0410                     	;# 
   296  0411                     	;# 
   297  0416                     	;# 
   298  0416                     	;# 
   299  0417                     	;# 
   300  0418                     	;# 
   301  0418                     	;# 
   302  0419                     	;# 
   303  041A                     	;# 
   304  041A                     	;# 
   305  041B                     	;# 
   306  041C                     	;# 
   307  041C                     	;# 
   308  041D                     	;# 
   309  041E                     	;# 
   310  041F                     	;# 
   311  048C                     	;# 
   312  048C                     	;# 
   313  048D                     	;# 
   314  048E                     	;# 
   315  048F                     	;# 
   316  048F                     	;# 
   317  0490                     	;# 
   318  0491                     	;# 
   319  0492                     	;# 
   320  0492                     	;# 
   321  0493                     	;# 
   322  0494                     	;# 
   323  0495                     	;# 
   324  0495                     	;# 
   325  0496                     	;# 
   326  0497                     	;# 
   327  0498                     	;# 
   328  0499                     	;# 
   329  049A                     	;# 
   330  049B                     	;# 
   331  049C                     	;# 
   332  049D                     	;# 
   333  050C                     	;# 
   334  050C                     	;# 
   335  050D                     	;# 
   336  050E                     	;# 
   337  050F                     	;# 
   338  050F                     	;# 
   339  0510                     	;# 
   340  0511                     	;# 
   341  0512                     	;# 
   342  0512                     	;# 
   343  0513                     	;# 
   344  0514                     	;# 
   345  0515                     	;# 
   346  0515                     	;# 
   347  0516                     	;# 
   348  0517                     	;# 
   349  0518                     	;# 
   350  0519                     	;# 
   351  051A                     	;# 
   352  051B                     	;# 
   353  051C                     	;# 
   354  051D                     	;# 
   355  058C                     	;# 
   356  058C                     	;# 
   357  058D                     	;# 
   358  058E                     	;# 
   359  058F                     	;# 
   360  058F                     	;# 
   361  0590                     	;# 
   362  0591                     	;# 
   363  0592                     	;# 
   364  0593                     	;# 
   365  060C                     	;# 
   366  060D                     	;# 
   367  060E                     	;# 
   368  060F                     	;# 
   369  0610                     	;# 
   370  0611                     	;# 
   371  0612                     	;# 
   372  0613                     	;# 
   373  0614                     	;# 
   374  0616                     	;# 
   375  0617                     	;# 
   376  0618                     	;# 
   377  0619                     	;# 
   378  061A                     	;# 
   379  061B                     	;# 
   380  061C                     	;# 
   381  061D                     	;# 
   382  061E                     	;# 
   383  068C                     	;# 
   384  068D                     	;# 
   385  068E                     	;# 
   386  068F                     	;# 
   387  0690                     	;# 
   388  0691                     	;# 
   389  0692                     	;# 
   390  0693                     	;# 
   391  0694                     	;# 
   392  070C                     	;# 
   393  070D                     	;# 
   394  070E                     	;# 
   395  070F                     	;# 
   396  0710                     	;# 
   397  0711                     	;# 
   398  0712                     	;# 
   399  0713                     	;# 
   400  0714                     	;# 
   401  0716                     	;# 
   402  0717                     	;# 
   403  0718                     	;# 
   404  0719                     	;# 
   405  071A                     	;# 
   406  071B                     	;# 
   407  071C                     	;# 
   408  071D                     	;# 
   409  071E                     	;# 
   410  0796                     	;# 
   411  0797                     	;# 
   412  0798                     	;# 
   413  0799                     	;# 
   414  079A                     	;# 
   415  079B                     	;# 
   416  080C                     	;# 
   417  080D                     	;# 
   418  080E                     	;# 
   419  080F                     	;# 
   420  0810                     	;# 
   421  0811                     	;# 
   422  0812                     	;# 
   423  0813                     	;# 
   424  0814                     	;# 
   425  081A                     	;# 
   426  081B                     	;# 
   427  081C                     	;# 
   428  081D                     	;# 
   429  081E                     	;# 
   430  081F                     	;# 
   431  088C                     	;# 
   432  088D                     	;# 
   433  088E                     	;# 
   434  088F                     	;# 
   435  0890                     	;# 
   436  0891                     	;# 
   437  0892                     	;# 
   438  0893                     	;# 
   439  0895                     	;# 
   440  0896                     	;# 
   441  0897                     	;# 
   442  0898                     	;# 
   443  0899                     	;# 
   444  089A                     	;# 
   445  089B                     	;# 
   446  090C                     	;# 
   447  090E                     	;# 
   448  090F                     	;# 
   449  091F                     	;# 
   450  098F                     	;# 
   451  098F                     	;# 
   452  0990                     	;# 
   453  0991                     	;# 
   454  0992                     	;# 
   455  0993                     	;# 
   456  0994                     	;# 
   457  0995                     	;# 
   458  0996                     	;# 
   459  0997                     	;# 
   460  1E0F                     	;# 
   461  1E10                     	;# 
   462  1E11                     	;# 
   463  1E12                     	;# 
   464  1E13                     	;# 
   465  1E14                     	;# 
   466  1E15                     	;# 
   467  1E16                     	;# 
   468  1E17                     	;# 
   469  1E18                     	;# 
   470  1E19                     	;# 
   471  1E1A                     	;# 
   472  1E1B                     	;# 
   473  1E1C                     	;# 
   474  1E1D                     	;# 
   475  1E1E                     	;# 
   476  1E1F                     	;# 
   477  1E20                     	;# 
   478  1E21                     	;# 
   479  1E22                     	;# 
   480  1E23                     	;# 
   481  1E24                     	;# 
   482  1E25                     	;# 
   483  1E26                     	;# 
   484  1E27                     	;# 
   485  1E28                     	;# 
   486  1E29                     	;# 
   487  1E2A                     	;# 
   488  1E2B                     	;# 
   489  1E2C                     	;# 
   490  1E2D                     	;# 
   491  1E2E                     	;# 
   492  1E2F                     	;# 
   493  1E30                     	;# 
   494  1E31                     	;# 
   495  1E32                     	;# 
   496  1E33                     	;# 
   497  1E34                     	;# 
   498  1E35                     	;# 
   499  1E36                     	;# 
   500  1E37                     	;# 
   501  1E8F                     	;# 
   502  1E90                     	;# 
   503  1E91                     	;# 
   504  1E92                     	;# 
   505  1E93                     	;# 
   506  1E94                     	;# 
   507  1E95                     	;# 
   508  1E96                     	;# 
   509  1E97                     	;# 
   510  1E9C                     	;# 
   511  1E9D                     	;# 
   512  1E9E                     	;# 
   513  1EA1                     	;# 
   514  1EA2                     	;# 
   515  1EA3                     	;# 
   516  1EA4                     	;# 
   517  1EA5                     	;# 
   518  1EA9                     	;# 
   519  1EAA                     	;# 
   520  1EAB                     	;# 
   521  1EAC                     	;# 
   522  1EB1                     	;# 
   523  1EB2                     	;# 
   524  1EB3                     	;# 
   525  1EB8                     	;# 
   526  1EB9                     	;# 
   527  1EBA                     	;# 
   528  1EBB                     	;# 
   529  1EBC                     	;# 
   530  1EBD                     	;# 
   531  1EBE                     	;# 
   532  1EC3                     	;# 
   533  1EC5                     	;# 
   534  1EC6                     	;# 
   535  1EC7                     	;# 
   536  1EC8                     	;# 
   537  1EC9                     	;# 
   538  1ECA                     	;# 
   539  1ECB                     	;# 
   540  1ECC                     	;# 
   541  1F10                     	;# 
   542  1F11                     	;# 
   543  1F12                     	;# 
   544  1F13                     	;# 
   545  1F14                     	;# 
   546  1F15                     	;# 
   547  1F16                     	;# 
   548  1F17                     	;# 
   549  1F18                     	;# 
   550  1F19                     	;# 
   551  1F1A                     	;# 
   552  1F1B                     	;# 
   553  1F1C                     	;# 
   554  1F1D                     	;# 
   555  1F1E                     	;# 
   556  1F1F                     	;# 
   557  1F20                     	;# 
   558  1F21                     	;# 
   559  1F22                     	;# 
   560  1F23                     	;# 
   561  1F24                     	;# 
   562  1F25                     	;# 
   563  1F26                     	;# 
   564  1F27                     	;# 
   565  1F28                     	;# 
   566  1F29                     	;# 
   567  1F2A                     	;# 
   568  1F2B                     	;# 
   569  1F2C                     	;# 
   570  1F2D                     	;# 
   571  1F2E                     	;# 
   572  1F2F                     	;# 
   573  1F30                     	;# 
   574  1F31                     	;# 
   575  1F32                     	;# 
   576  1F38                     	;# 
   577  1F39                     	;# 
   578  1F3A                     	;# 
   579  1F3B                     	;# 
   580  1F3C                     	;# 
   581  1F3D                     	;# 
   582  1F3E                     	;# 
   583  1F3F                     	;# 
   584  1F40                     	;# 
   585  1F41                     	;# 
   586  1F43                     	;# 
   587  1F44                     	;# 
   588  1F45                     	;# 
   589  1F46                     	;# 
   590  1F47                     	;# 
   591  1F48                     	;# 
   592  1F49                     	;# 
   593  1F4A                     	;# 
   594  1F4B                     	;# 
   595  1F4C                     	;# 
   596  1F4E                     	;# 
   597  1F4F                     	;# 
   598  1F50                     	;# 
   599  1F51                     	;# 
   600  1F52                     	;# 
   601  1F53                     	;# 
   602  1F54                     	;# 
   603  1F55                     	;# 
   604  1F56                     	;# 
   605  1F57                     	;# 
   606  1F59                     	;# 
   607  1F5A                     	;# 
   608  1F5B                     	;# 
   609  1F5C                     	;# 
   610  1F5D                     	;# 
   611  1F61                     	;# 
   612  1F62                     	;# 
   613  1F64                     	;# 
   614  1F65                     	;# 
   615  1F66                     	;# 
   616  1F67                     	;# 
   617  1F68                     	;# 
   618  1F69                     	;# 
   619  1F6A                     	;# 
   620  1F6B                     	;# 
   621  1F6C                     	;# 
   622  1F6D                     	;# 
   623  1FE4                     	;# 
   624  1FE5                     	;# 
   625  1FE6                     	;# 
   626  1FE7                     	;# 
   627  1FE8                     	;# 
   628  1FE9                     	;# 
   629  1FEA                     	;# 
   630  1FEB                     	;# 
   631  1FED                     	;# 
   632  1FEE                     	;# 
   633  1FEF                     	;# 
   634  0000                     	;# 
   635  0001                     	;# 
   636  0002                     	;# 
   637  0003                     	;# 
   638  0004                     	;# 
   639  0005                     	;# 
   640  0006                     	;# 
   641  0007                     	;# 
   642  0008                     	;# 
   643  0009                     	;# 
   644  000A                     	;# 
   645  000B                     	;# 
   646  000C                     	;# 
   647  000D                     	;# 
   648  000E                     	;# 
   649  000F                     	;# 
   650  0010                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0014                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001C                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001D                     	;# 
   665  001E                     	;# 
   666  001F                     	;# 
   667  008C                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  008E                     	;# 
   672  008F                     	;# 
   673  0090                     	;# 
   674  0090                     	;# 
   675  0091                     	;# 
   676  0093                     	;# 
   677  0094                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0097                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009A                     	;# 
   684  009B                     	;# 
   685  009C                     	;# 
   686  009D                     	;# 
   687  009E                     	;# 
   688  010C                     	;# 
   689  010D                     	;# 
   690  010E                     	;# 
   691  010E                     	;# 
   692  010F                     	;# 
   693  0110                     	;# 
   694  0110                     	;# 
   695  0111                     	;# 
   696  0112                     	;# 
   697  0112                     	;# 
   698  0113                     	;# 
   699  0114                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0116                     	;# 
   704  0117                     	;# 
   705  0119                     	;# 
   706  0119                     	;# 
   707  0119                     	;# 
   708  011A                     	;# 
   709  011A                     	;# 
   710  011A                     	;# 
   711  011B                     	;# 
   712  011B                     	;# 
   713  011B                     	;# 
   714  011B                     	;# 
   715  011B                     	;# 
   716  011C                     	;# 
   717  011C                     	;# 
   718  011C                     	;# 
   719  011D                     	;# 
   720  011D                     	;# 
   721  011D                     	;# 
   722  011E                     	;# 
   723  011E                     	;# 
   724  011E                     	;# 
   725  011F                     	;# 
   726  011F                     	;# 
   727  011F                     	;# 
   728  011F                     	;# 
   729  011F                     	;# 
   730  018C                     	;# 
   731  018D                     	;# 
   732  018E                     	;# 
   733  018F                     	;# 
   734  0190                     	;# 
   735  0191                     	;# 
   736  0192                     	;# 
   737  0196                     	;# 
   738  0197                     	;# 
   739  0198                     	;# 
   740  0199                     	;# 
   741  019A                     	;# 
   742  019B                     	;# 
   743  019C                     	;# 
   744  020C                     	;# 
   745  020D                     	;# 
   746  020E                     	;# 
   747  020F                     	;# 
   748  020F                     	;# 
   749  0210                     	;# 
   750  0210                     	;# 
   751  0211                     	;# 
   752  0211                     	;# 
   753  0212                     	;# 
   754  0213                     	;# 
   755  0214                     	;# 
   756  0215                     	;# 
   757  0215                     	;# 
   758  0216                     	;# 
   759  0216                     	;# 
   760  0217                     	;# 
   761  0217                     	;# 
   762  0218                     	;# 
   763  0219                     	;# 
   764  021A                     	;# 
   765  021B                     	;# 
   766  021B                     	;# 
   767  021C                     	;# 
   768  021C                     	;# 
   769  021D                     	;# 
   770  021D                     	;# 
   771  021E                     	;# 
   772  021F                     	;# 
   773  028C                     	;# 
   774  028C                     	;# 
   775  028D                     	;# 
   776  028D                     	;# 
   777  028E                     	;# 
   778  028F                     	;# 
   779  0290                     	;# 
   780  0290                     	;# 
   781  0291                     	;# 
   782  0292                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0293                     	;# 
   786  0294                     	;# 
   787  0295                     	;# 
   788  0296                     	;# 
   789  0296                     	;# 
   790  0297                     	;# 
   791  0298                     	;# 
   792  0298                     	;# 
   793  0299                     	;# 
   794  0299                     	;# 
   795  029A                     	;# 
   796  029B                     	;# 
   797  029C                     	;# 
   798  029C                     	;# 
   799  029D                     	;# 
   800  030C                     	;# 
   801  030C                     	;# 
   802  030D                     	;# 
   803  030E                     	;# 
   804  030F                     	;# 
   805  0310                     	;# 
   806  0310                     	;# 
   807  0311                     	;# 
   808  0312                     	;# 
   809  0313                     	;# 
   810  0314                     	;# 
   811  0314                     	;# 
   812  0315                     	;# 
   813  0316                     	;# 
   814  0317                     	;# 
   815  0318                     	;# 
   816  0318                     	;# 
   817  0319                     	;# 
   818  031A                     	;# 
   819  031B                     	;# 
   820  031C                     	;# 
   821  031C                     	;# 
   822  031D                     	;# 
   823  031E                     	;# 
   824  031F                     	;# 
   825  038C                     	;# 
   826  038D                     	;# 
   827  038E                     	;# 
   828  0390                     	;# 
   829  0391                     	;# 
   830  0392                     	;# 
   831  040C                     	;# 
   832  040D                     	;# 
   833  040E                     	;# 
   834  040F                     	;# 
   835  0410                     	;# 
   836  0411                     	;# 
   837  0416                     	;# 
   838  0416                     	;# 
   839  0417                     	;# 
   840  0418                     	;# 
   841  0418                     	;# 
   842  0419                     	;# 
   843  041A                     	;# 
   844  041A                     	;# 
   845  041B                     	;# 
   846  041C                     	;# 
   847  041C                     	;# 
   848  041D                     	;# 
   849  041E                     	;# 
   850  041F                     	;# 
   851  048C                     	;# 
   852  048C                     	;# 
   853  048D                     	;# 
   854  048E                     	;# 
   855  048F                     	;# 
   856  048F                     	;# 
   857  0490                     	;# 
   858  0491                     	;# 
   859  0492                     	;# 
   860  0492                     	;# 
   861  0493                     	;# 
   862  0494                     	;# 
   863  0495                     	;# 
   864  0495                     	;# 
   865  0496                     	;# 
   866  0497                     	;# 
   867  0498                     	;# 
   868  0499                     	;# 
   869  049A                     	;# 
   870  049B                     	;# 
   871  049C                     	;# 
   872  049D                     	;# 
   873  050C                     	;# 
   874  050C                     	;# 
   875  050D                     	;# 
   876  050E                     	;# 
   877  050F                     	;# 
   878  050F                     	;# 
   879  0510                     	;# 
   880  0511                     	;# 
   881  0512                     	;# 
   882  0512                     	;# 
   883  0513                     	;# 
   884  0514                     	;# 
   885  0515                     	;# 
   886  0515                     	;# 
   887  0516                     	;# 
   888  0517                     	;# 
   889  0518                     	;# 
   890  0519                     	;# 
   891  051A                     	;# 
   892  051B                     	;# 
   893  051C                     	;# 
   894  051D                     	;# 
   895  058C                     	;# 
   896  058C                     	;# 
   897  058D                     	;# 
   898  058E                     	;# 
   899  058F                     	;# 
   900  058F                     	;# 
   901  0590                     	;# 
   902  0591                     	;# 
   903  0592                     	;# 
   904  0593                     	;# 
   905  060C                     	;# 
   906  060D                     	;# 
   907  060E                     	;# 
   908  060F                     	;# 
   909  0610                     	;# 
   910  0611                     	;# 
   911  0612                     	;# 
   912  0613                     	;# 
   913  0614                     	;# 
   914  0616                     	;# 
   915  0617                     	;# 
   916  0618                     	;# 
   917  0619                     	;# 
   918  061A                     	;# 
   919  061B                     	;# 
   920  061C                     	;# 
   921  061D                     	;# 
   922  061E                     	;# 
   923  068C                     	;# 
   924  068D                     	;# 
   925  068E                     	;# 
   926  068F                     	;# 
   927  0690                     	;# 
   928  0691                     	;# 
   929  0692                     	;# 
   930  0693                     	;# 
   931  0694                     	;# 
   932  070C                     	;# 
   933  070D                     	;# 
   934  070E                     	;# 
   935  070F                     	;# 
   936  0710                     	;# 
   937  0711                     	;# 
   938  0712                     	;# 
   939  0713                     	;# 
   940  0714                     	;# 
   941  0716                     	;# 
   942  0717                     	;# 
   943  0718                     	;# 
   944  0719                     	;# 
   945  071A                     	;# 
   946  071B                     	;# 
   947  071C                     	;# 
   948  071D                     	;# 
   949  071E                     	;# 
   950  0796                     	;# 
   951  0797                     	;# 
   952  0798                     	;# 
   953  0799                     	;# 
   954  079A                     	;# 
   955  079B                     	;# 
   956  080C                     	;# 
   957  080D                     	;# 
   958  080E                     	;# 
   959  080F                     	;# 
   960  0810                     	;# 
   961  0811                     	;# 
   962  0812                     	;# 
   963  0813                     	;# 
   964  0814                     	;# 
   965  081A                     	;# 
   966  081B                     	;# 
   967  081C                     	;# 
   968  081D                     	;# 
   969  081E                     	;# 
   970  081F                     	;# 
   971  088C                     	;# 
   972  088D                     	;# 
   973  088E                     	;# 
   974  088F                     	;# 
   975  0890                     	;# 
   976  0891                     	;# 
   977  0892                     	;# 
   978  0893                     	;# 
   979  0895                     	;# 
   980  0896                     	;# 
   981  0897                     	;# 
   982  0898                     	;# 
   983  0899                     	;# 
   984  089A                     	;# 
   985  089B                     	;# 
   986  090C                     	;# 
   987  090E                     	;# 
   988  090F                     	;# 
   989  091F                     	;# 
   990  098F                     	;# 
   991  098F                     	;# 
   992  0990                     	;# 
   993  0991                     	;# 
   994  0992                     	;# 
   995  0993                     	;# 
   996  0994                     	;# 
   997  0995                     	;# 
   998  0996                     	;# 
   999  0997                     	;# 
  1000  1E0F                     	;# 
  1001  1E10                     	;# 
  1002  1E11                     	;# 
  1003  1E12                     	;# 
  1004  1E13                     	;# 
  1005  1E14                     	;# 
  1006  1E15                     	;# 
  1007  1E16                     	;# 
  1008  1E17                     	;# 
  1009  1E18                     	;# 
  1010  1E19                     	;# 
  1011  1E1A                     	;# 
  1012  1E1B                     	;# 
  1013  1E1C                     	;# 
  1014  1E1D                     	;# 
  1015  1E1E                     	;# 
  1016  1E1F                     	;# 
  1017  1E20                     	;# 
  1018  1E21                     	;# 
  1019  1E22                     	;# 
  1020  1E23                     	;# 
  1021  1E24                     	;# 
  1022  1E25                     	;# 
  1023  1E26                     	;# 
  1024  1E27                     	;# 
  1025  1E28                     	;# 
  1026  1E29                     	;# 
  1027  1E2A                     	;# 
  1028  1E2B                     	;# 
  1029  1E2C                     	;# 
  1030  1E2D                     	;# 
  1031  1E2E                     	;# 
  1032  1E2F                     	;# 
  1033  1E30                     	;# 
  1034  1E31                     	;# 
  1035  1E32                     	;# 
  1036  1E33                     	;# 
  1037  1E34                     	;# 
  1038  1E35                     	;# 
  1039  1E36                     	;# 
  1040  1E37                     	;# 
  1041  1E8F                     	;# 
  1042  1E90                     	;# 
  1043  1E91                     	;# 
  1044  1E92                     	;# 
  1045  1E93                     	;# 
  1046  1E94                     	;# 
  1047  1E95                     	;# 
  1048  1E96                     	;# 
  1049  1E97                     	;# 
  1050  1E9C                     	;# 
  1051  1E9D                     	;# 
  1052  1E9E                     	;# 
  1053  1EA1                     	;# 
  1054  1EA2                     	;# 
  1055  1EA3                     	;# 
  1056  1EA4                     	;# 
  1057  1EA5                     	;# 
  1058  1EA9                     	;# 
  1059  1EAA                     	;# 
  1060  1EAB                     	;# 
  1061  1EAC                     	;# 
  1062  1EB1                     	;# 
  1063  1EB2                     	;# 
  1064  1EB3                     	;# 
  1065  1EB8                     	;# 
  1066  1EB9                     	;# 
  1067  1EBA                     	;# 
  1068  1EBB                     	;# 
  1069  1EBC                     	;# 
  1070  1EBD                     	;# 
  1071  1EBE                     	;# 
  1072  1EC3                     	;# 
  1073  1EC5                     	;# 
  1074  1EC6                     	;# 
  1075  1EC7                     	;# 
  1076  1EC8                     	;# 
  1077  1EC9                     	;# 
  1078  1ECA                     	;# 
  1079  1ECB                     	;# 
  1080  1ECC                     	;# 
  1081  1F10                     	;# 
  1082  1F11                     	;# 
  1083  1F12                     	;# 
  1084  1F13                     	;# 
  1085  1F14                     	;# 
  1086  1F15                     	;# 
  1087  1F16                     	;# 
  1088  1F17                     	;# 
  1089  1F18                     	;# 
  1090  1F19                     	;# 
  1091  1F1A                     	;# 
  1092  1F1B                     	;# 
  1093  1F1C                     	;# 
  1094  1F1D                     	;# 
  1095  1F1E                     	;# 
  1096  1F1F                     	;# 
  1097  1F20                     	;# 
  1098  1F21                     	;# 
  1099  1F22                     	;# 
  1100  1F23                     	;# 
  1101  1F24                     	;# 
  1102  1F25                     	;# 
  1103  1F26                     	;# 
  1104  1F27                     	;# 
  1105  1F28                     	;# 
  1106  1F29                     	;# 
  1107  1F2A                     	;# 
  1108  1F2B                     	;# 
  1109  1F2C                     	;# 
  1110  1F2D                     	;# 
  1111  1F2E                     	;# 
  1112  1F2F                     	;# 
  1113  1F30                     	;# 
  1114  1F31                     	;# 
  1115  1F32                     	;# 
  1116  1F38                     	;# 
  1117  1F39                     	;# 
  1118  1F3A                     	;# 
  1119  1F3B                     	;# 
  1120  1F3C                     	;# 
  1121  1F3D                     	;# 
  1122  1F3E                     	;# 
  1123  1F3F                     	;# 
  1124  1F40                     	;# 
  1125  1F41                     	;# 
  1126  1F43                     	;# 
  1127  1F44                     	;# 
  1128  1F45                     	;# 
  1129  1F46                     	;# 
  1130  1F47                     	;# 
  1131  1F48                     	;# 
  1132  1F49                     	;# 
  1133  1F4A                     	;# 
  1134  1F4B                     	;# 
  1135  1F4C                     	;# 
  1136  1F4E                     	;# 
  1137  1F4F                     	;# 
  1138  1F50                     	;# 
  1139  1F51                     	;# 
  1140  1F52                     	;# 
  1141  1F53                     	;# 
  1142  1F54                     	;# 
  1143  1F55                     	;# 
  1144  1F56                     	;# 
  1145  1F57                     	;# 
  1146  1F59                     	;# 
  1147  1F5A                     	;# 
  1148  1F5B                     	;# 
  1149  1F5C                     	;# 
  1150  1F5D                     	;# 
  1151  1F61                     	;# 
  1152  1F62                     	;# 
  1153  1F64                     	;# 
  1154  1F65                     	;# 
  1155  1F66                     	;# 
  1156  1F67                     	;# 
  1157  1F68                     	;# 
  1158  1F69                     	;# 
  1159  1F6A                     	;# 
  1160  1F6B                     	;# 
  1161  1F6C                     	;# 
  1162  1F6D                     	;# 
  1163  1FE4                     	;# 
  1164  1FE5                     	;# 
  1165  1FE6                     	;# 
  1166  1FE7                     	;# 
  1167  1FE8                     	;# 
  1168  1FE9                     	;# 
  1169  1FEA                     	;# 
  1170  1FEB                     	;# 
  1171  1FED                     	;# 
  1172  1FEE                     	;# 
  1173  1FEF                     	;# 
  1174  0000                     	;# 
  1175  0001                     	;# 
  1176  0002                     	;# 
  1177  0003                     	;# 
  1178  0004                     	;# 
  1179  0005                     	;# 
  1180  0006                     	;# 
  1181  0007                     	;# 
  1182  0008                     	;# 
  1183  0009                     	;# 
  1184  000A                     	;# 
  1185  000B                     	;# 
  1186  000C                     	;# 
  1187  000D                     	;# 
  1188  000E                     	;# 
  1189  000F                     	;# 
  1190  0010                     	;# 
  1191  0011                     	;# 
  1192  0012                     	;# 
  1193  0013                     	;# 
  1194  0014                     	;# 
  1195  0015                     	;# 
  1196  0016                     	;# 
  1197  0017                     	;# 
  1198  0018                     	;# 
  1199  0019                     	;# 
  1200  001A                     	;# 
  1201  001C                     	;# 
  1202  001C                     	;# 
  1203  001D                     	;# 
  1204  001D                     	;# 
  1205  001E                     	;# 
  1206  001F                     	;# 
  1207  008C                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  008E                     	;# 
  1211  008E                     	;# 
  1212  008F                     	;# 
  1213  0090                     	;# 
  1214  0090                     	;# 
  1215  0091                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0097                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009A                     	;# 
  1224  009B                     	;# 
  1225  009C                     	;# 
  1226  009D                     	;# 
  1227  009E                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010E                     	;# 
  1231  010E                     	;# 
  1232  010F                     	;# 
  1233  0110                     	;# 
  1234  0110                     	;# 
  1235  0111                     	;# 
  1236  0112                     	;# 
  1237  0112                     	;# 
  1238  0113                     	;# 
  1239  0114                     	;# 
  1240  0114                     	;# 
  1241  0115                     	;# 
  1242  0116                     	;# 
  1243  0116                     	;# 
  1244  0117                     	;# 
  1245  0119                     	;# 
  1246  0119                     	;# 
  1247  0119                     	;# 
  1248  011A                     	;# 
  1249  011A                     	;# 
  1250  011A                     	;# 
  1251  011B                     	;# 
  1252  011B                     	;# 
  1253  011B                     	;# 
  1254  011B                     	;# 
  1255  011B                     	;# 
  1256  011C                     	;# 
  1257  011C                     	;# 
  1258  011C                     	;# 
  1259  011D                     	;# 
  1260  011D                     	;# 
  1261  011D                     	;# 
  1262  011E                     	;# 
  1263  011E                     	;# 
  1264  011E                     	;# 
  1265  011F                     	;# 
  1266  011F                     	;# 
  1267  011F                     	;# 
  1268  011F                     	;# 
  1269  011F                     	;# 
  1270  018C                     	;# 
  1271  018D                     	;# 
  1272  018E                     	;# 
  1273  018F                     	;# 
  1274  0190                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0196                     	;# 
  1278  0197                     	;# 
  1279  0198                     	;# 
  1280  0199                     	;# 
  1281  019A                     	;# 
  1282  019B                     	;# 
  1283  019C                     	;# 
  1284  020C                     	;# 
  1285  020D                     	;# 
  1286  020E                     	;# 
  1287  020F                     	;# 
  1288  020F                     	;# 
  1289  0210                     	;# 
  1290  0210                     	;# 
  1291  0211                     	;# 
  1292  0211                     	;# 
  1293  0212                     	;# 
  1294  0213                     	;# 
  1295  0214                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0216                     	;# 
  1299  0216                     	;# 
  1300  0217                     	;# 
  1301  0217                     	;# 
  1302  0218                     	;# 
  1303  0219                     	;# 
  1304  021A                     	;# 
  1305  021B                     	;# 
  1306  021B                     	;# 
  1307  021C                     	;# 
  1308  021C                     	;# 
  1309  021D                     	;# 
  1310  021D                     	;# 
  1311  021E                     	;# 
  1312  021F                     	;# 
  1313  028C                     	;# 
  1314  028C                     	;# 
  1315  028D                     	;# 
  1316  028D                     	;# 
  1317  028E                     	;# 
  1318  028F                     	;# 
  1319  0290                     	;# 
  1320  0290                     	;# 
  1321  0291                     	;# 
  1322  0292                     	;# 
  1323  0292                     	;# 
  1324  0293                     	;# 
  1325  0293                     	;# 
  1326  0294                     	;# 
  1327  0295                     	;# 
  1328  0296                     	;# 
  1329  0296                     	;# 
  1330  0297                     	;# 
  1331  0298                     	;# 
  1332  0298                     	;# 
  1333  0299                     	;# 
  1334  0299                     	;# 
  1335  029A                     	;# 
  1336  029B                     	;# 
  1337  029C                     	;# 
  1338  029C                     	;# 
  1339  029D                     	;# 
  1340  030C                     	;# 
  1341  030C                     	;# 
  1342  030D                     	;# 
  1343  030E                     	;# 
  1344  030F                     	;# 
  1345  0310                     	;# 
  1346  0310                     	;# 
  1347  0311                     	;# 
  1348  0312                     	;# 
  1349  0313                     	;# 
  1350  0314                     	;# 
  1351  0314                     	;# 
  1352  0315                     	;# 
  1353  0316                     	;# 
  1354  0317                     	;# 
  1355  0318                     	;# 
  1356  0318                     	;# 
  1357  0319                     	;# 
  1358  031A                     	;# 
  1359  031B                     	;# 
  1360  031C                     	;# 
  1361  031C                     	;# 
  1362  031D                     	;# 
  1363  031E                     	;# 
  1364  031F                     	;# 
  1365  038C                     	;# 
  1366  038D                     	;# 
  1367  038E                     	;# 
  1368  0390                     	;# 
  1369  0391                     	;# 
  1370  0392                     	;# 
  1371  040C                     	;# 
  1372  040D                     	;# 
  1373  040E                     	;# 
  1374  040F                     	;# 
  1375  0410                     	;# 
  1376  0411                     	;# 
  1377  0416                     	;# 
  1378  0416                     	;# 
  1379  0417                     	;# 
  1380  0418                     	;# 
  1381  0418                     	;# 
  1382  0419                     	;# 
  1383  041A                     	;# 
  1384  041A                     	;# 
  1385  041B                     	;# 
  1386  041C                     	;# 
  1387  041C                     	;# 
  1388  041D                     	;# 
  1389  041E                     	;# 
  1390  041F                     	;# 
  1391  048C                     	;# 
  1392  048C                     	;# 
  1393  048D                     	;# 
  1394  048E                     	;# 
  1395  048F                     	;# 
  1396  048F                     	;# 
  1397  0490                     	;# 
  1398  0491                     	;# 
  1399  0492                     	;# 
  1400  0492                     	;# 
  1401  0493                     	;# 
  1402  0494                     	;# 
  1403  0495                     	;# 
  1404  0495                     	;# 
  1405  0496                     	;# 
  1406  0497                     	;# 
  1407  0498                     	;# 
  1408  0499                     	;# 
  1409  049A                     	;# 
  1410  049B                     	;# 
  1411  049C                     	;# 
  1412  049D                     	;# 
  1413  050C                     	;# 
  1414  050C                     	;# 
  1415  050D                     	;# 
  1416  050E                     	;# 
  1417  050F                     	;# 
  1418  050F                     	;# 
  1419  0510                     	;# 
  1420  0511                     	;# 
  1421  0512                     	;# 
  1422  0512                     	;# 
  1423  0513                     	;# 
  1424  0514                     	;# 
  1425  0515                     	;# 
  1426  0515                     	;# 
  1427  0516                     	;# 
  1428  0517                     	;# 
  1429  0518                     	;# 
  1430  0519                     	;# 
  1431  051A                     	;# 
  1432  051B                     	;# 
  1433  051C                     	;# 
  1434  051D                     	;# 
  1435  058C                     	;# 
  1436  058C                     	;# 
  1437  058D                     	;# 
  1438  058E                     	;# 
  1439  058F                     	;# 
  1440  058F                     	;# 
  1441  0590                     	;# 
  1442  0591                     	;# 
  1443  0592                     	;# 
  1444  0593                     	;# 
  1445  060C                     	;# 
  1446  060D                     	;# 
  1447  060E                     	;# 
  1448  060F                     	;# 
  1449  0610                     	;# 
  1450  0611                     	;# 
  1451  0612                     	;# 
  1452  0613                     	;# 
  1453  0614                     	;# 
  1454  0616                     	;# 
  1455  0617                     	;# 
  1456  0618                     	;# 
  1457  0619                     	;# 
  1458  061A                     	;# 
  1459  061B                     	;# 
  1460  061C                     	;# 
  1461  061D                     	;# 
  1462  061E                     	;# 
  1463  068C                     	;# 
  1464  068D                     	;# 
  1465  068E                     	;# 
  1466  068F                     	;# 
  1467  0690                     	;# 
  1468  0691                     	;# 
  1469  0692                     	;# 
  1470  0693                     	;# 
  1471  0694                     	;# 
  1472  070C                     	;# 
  1473  070D                     	;# 
  1474  070E                     	;# 
  1475  070F                     	;# 
  1476  0710                     	;# 
  1477  0711                     	;# 
  1478  0712                     	;# 
  1479  0713                     	;# 
  1480  0714                     	;# 
  1481  0716                     	;# 
  1482  0717                     	;# 
  1483  0718                     	;# 
  1484  0719                     	;# 
  1485  071A                     	;# 
  1486  071B                     	;# 
  1487  071C                     	;# 
  1488  071D                     	;# 
  1489  071E                     	;# 
  1490  0796                     	;# 
  1491  0797                     	;# 
  1492  0798                     	;# 
  1493  0799                     	;# 
  1494  079A                     	;# 
  1495  079B                     	;# 
  1496  080C                     	;# 
  1497  080D                     	;# 
  1498  080E                     	;# 
  1499  080F                     	;# 
  1500  0810                     	;# 
  1501  0811                     	;# 
  1502  0812                     	;# 
  1503  0813                     	;# 
  1504  0814                     	;# 
  1505  081A                     	;# 
  1506  081B                     	;# 
  1507  081C                     	;# 
  1508  081D                     	;# 
  1509  081E                     	;# 
  1510  081F                     	;# 
  1511  088C                     	;# 
  1512  088D                     	;# 
  1513  088E                     	;# 
  1514  088F                     	;# 
  1515  0890                     	;# 
  1516  0891                     	;# 
  1517  0892                     	;# 
  1518  0893                     	;# 
  1519  0895                     	;# 
  1520  0896                     	;# 
  1521  0897                     	;# 
  1522  0898                     	;# 
  1523  0899                     	;# 
  1524  089A                     	;# 
  1525  089B                     	;# 
  1526  090C                     	;# 
  1527  090E                     	;# 
  1528  090F                     	;# 
  1529  091F                     	;# 
  1530  098F                     	;# 
  1531  098F                     	;# 
  1532  0990                     	;# 
  1533  0991                     	;# 
  1534  0992                     	;# 
  1535  0993                     	;# 
  1536  0994                     	;# 
  1537  0995                     	;# 
  1538  0996                     	;# 
  1539  0997                     	;# 
  1540  1E0F                     	;# 
  1541  1E10                     	;# 
  1542  1E11                     	;# 
  1543  1E12                     	;# 
  1544  1E13                     	;# 
  1545  1E14                     	;# 
  1546  1E15                     	;# 
  1547  1E16                     	;# 
  1548  1E17                     	;# 
  1549  1E18                     	;# 
  1550  1E19                     	;# 
  1551  1E1A                     	;# 
  1552  1E1B                     	;# 
  1553  1E1C                     	;# 
  1554  1E1D                     	;# 
  1555  1E1E                     	;# 
  1556  1E1F                     	;# 
  1557  1E20                     	;# 
  1558  1E21                     	;# 
  1559  1E22                     	;# 
  1560  1E23                     	;# 
  1561  1E24                     	;# 
  1562  1E25                     	;# 
  1563  1E26                     	;# 
  1564  1E27                     	;# 
  1565  1E28                     	;# 
  1566  1E29                     	;# 
  1567  1E2A                     	;# 
  1568  1E2B                     	;# 
  1569  1E2C                     	;# 
  1570  1E2D                     	;# 
  1571  1E2E                     	;# 
  1572  1E2F                     	;# 
  1573  1E30                     	;# 
  1574  1E31                     	;# 
  1575  1E32                     	;# 
  1576  1E33                     	;# 
  1577  1E34                     	;# 
  1578  1E35                     	;# 
  1579  1E36                     	;# 
  1580  1E37                     	;# 
  1581  1E8F                     	;# 
  1582  1E90                     	;# 
  1583  1E91                     	;# 
  1584  1E92                     	;# 
  1585  1E93                     	;# 
  1586  1E94                     	;# 
  1587  1E95                     	;# 
  1588  1E96                     	;# 
  1589  1E97                     	;# 
  1590  1E9C                     	;# 
  1591  1E9D                     	;# 
  1592  1E9E                     	;# 
  1593  1EA1                     	;# 
  1594  1EA2                     	;# 
  1595  1EA3                     	;# 
  1596  1EA4                     	;# 
  1597  1EA5                     	;# 
  1598  1EA9                     	;# 
  1599  1EAA                     	;# 
  1600  1EAB                     	;# 
  1601  1EAC                     	;# 
  1602  1EB1                     	;# 
  1603  1EB2                     	;# 
  1604  1EB3                     	;# 
  1605  1EB8                     	;# 
  1606  1EB9                     	;# 
  1607  1EBA                     	;# 
  1608  1EBB                     	;# 
  1609  1EBC                     	;# 
  1610  1EBD                     	;# 
  1611  1EBE                     	;# 
  1612  1EC3                     	;# 
  1613  1EC5                     	;# 
  1614  1EC6                     	;# 
  1615  1EC7                     	;# 
  1616  1EC8                     	;# 
  1617  1EC9                     	;# 
  1618  1ECA                     	;# 
  1619  1ECB                     	;# 
  1620  1ECC                     	;# 
  1621  1F10                     	;# 
  1622  1F11                     	;# 
  1623  1F12                     	;# 
  1624  1F13                     	;# 
  1625  1F14                     	;# 
  1626  1F15                     	;# 
  1627  1F16                     	;# 
  1628  1F17                     	;# 
  1629  1F18                     	;# 
  1630  1F19                     	;# 
  1631  1F1A                     	;# 
  1632  1F1B                     	;# 
  1633  1F1C                     	;# 
  1634  1F1D                     	;# 
  1635  1F1E                     	;# 
  1636  1F1F                     	;# 
  1637  1F20                     	;# 
  1638  1F21                     	;# 
  1639  1F22                     	;# 
  1640  1F23                     	;# 
  1641  1F24                     	;# 
  1642  1F25                     	;# 
  1643  1F26                     	;# 
  1644  1F27                     	;# 
  1645  1F28                     	;# 
  1646  1F29                     	;# 
  1647  1F2A                     	;# 
  1648  1F2B                     	;# 
  1649  1F2C                     	;# 
  1650  1F2D                     	;# 
  1651  1F2E                     	;# 
  1652  1F2F                     	;# 
  1653  1F30                     	;# 
  1654  1F31                     	;# 
  1655  1F32                     	;# 
  1656  1F38                     	;# 
  1657  1F39                     	;# 
  1658  1F3A                     	;# 
  1659  1F3B                     	;# 
  1660  1F3C                     	;# 
  1661  1F3D                     	;# 
  1662  1F3E                     	;# 
  1663  1F3F                     	;# 
  1664  1F40                     	;# 
  1665  1F41                     	;# 
  1666  1F43                     	;# 
  1667  1F44                     	;# 
  1668  1F45                     	;# 
  1669  1F46                     	;# 
  1670  1F47                     	;# 
  1671  1F48                     	;# 
  1672  1F49                     	;# 
  1673  1F4A                     	;# 
  1674  1F4B                     	;# 
  1675  1F4C                     	;# 
  1676  1F4E                     	;# 
  1677  1F4F                     	;# 
  1678  1F50                     	;# 
  1679  1F51                     	;# 
  1680  1F52                     	;# 
  1681  1F53                     	;# 
  1682  1F54                     	;# 
  1683  1F55                     	;# 
  1684  1F56                     	;# 
  1685  1F57                     	;# 
  1686  1F59                     	;# 
  1687  1F5A                     	;# 
  1688  1F5B                     	;# 
  1689  1F5C                     	;# 
  1690  1F5D                     	;# 
  1691  1F61                     	;# 
  1692  1F62                     	;# 
  1693  1F64                     	;# 
  1694  1F65                     	;# 
  1695  1F66                     	;# 
  1696  1F67                     	;# 
  1697  1F68                     	;# 
  1698  1F69                     	;# 
  1699  1F6A                     	;# 
  1700  1F6B                     	;# 
  1701  1F6C                     	;# 
  1702  1F6D                     	;# 
  1703  1FE4                     	;# 
  1704  1FE5                     	;# 
  1705  1FE6                     	;# 
  1706  1FE7                     	;# 
  1707  1FE8                     	;# 
  1708  1FE9                     	;# 
  1709  1FEA                     	;# 
  1710  1FEB                     	;# 
  1711  1FED                     	;# 
  1712  1FEE                     	;# 
  1713  1FEF                     	;# 
  1714  0000                     	;# 
  1715  0001                     	;# 
  1716  0002                     	;# 
  1717  0003                     	;# 
  1718  0004                     	;# 
  1719  0005                     	;# 
  1720  0006                     	;# 
  1721  0007                     	;# 
  1722  0008                     	;# 
  1723  0009                     	;# 
  1724  000A                     	;# 
  1725  000B                     	;# 
  1726  000C                     	;# 
  1727  000D                     	;# 
  1728  000E                     	;# 
  1729  000F                     	;# 
  1730  0010                     	;# 
  1731  0011                     	;# 
  1732  0012                     	;# 
  1733  0013                     	;# 
  1734  0014                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0017                     	;# 
  1738  0018                     	;# 
  1739  0019                     	;# 
  1740  001A                     	;# 
  1741  001C                     	;# 
  1742  001C                     	;# 
  1743  001D                     	;# 
  1744  001D                     	;# 
  1745  001E                     	;# 
  1746  001F                     	;# 
  1747  008C                     	;# 
  1748  008C                     	;# 
  1749  008D                     	;# 
  1750  008E                     	;# 
  1751  008E                     	;# 
  1752  008F                     	;# 
  1753  0090                     	;# 
  1754  0090                     	;# 
  1755  0091                     	;# 
  1756  0093                     	;# 
  1757  0094                     	;# 
  1758  0095                     	;# 
  1759  0096                     	;# 
  1760  0097                     	;# 
  1761  0098                     	;# 
  1762  0099                     	;# 
  1763  009A                     	;# 
  1764  009B                     	;# 
  1765  009C                     	;# 
  1766  009D                     	;# 
  1767  009E                     	;# 
  1768  010C                     	;# 
  1769  010D                     	;# 
  1770  010E                     	;# 
  1771  010E                     	;# 
  1772  010F                     	;# 
  1773  0110                     	;# 
  1774  0110                     	;# 
  1775  0111                     	;# 
  1776  0112                     	;# 
  1777  0112                     	;# 
  1778  0113                     	;# 
  1779  0114                     	;# 
  1780  0114                     	;# 
  1781  0115                     	;# 
  1782  0116                     	;# 
  1783  0116                     	;# 
  1784  0117                     	;# 
  1785  0119                     	;# 
  1786  0119                     	;# 
  1787  0119                     	;# 
  1788  011A                     	;# 
  1789  011A                     	;# 
  1790  011A                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011B                     	;# 
  1794  011B                     	;# 
  1795  011B                     	;# 
  1796  011C                     	;# 
  1797  011C                     	;# 
  1798  011C                     	;# 
  1799  011D                     	;# 
  1800  011D                     	;# 
  1801  011D                     	;# 
  1802  011E                     	;# 
  1803  011E                     	;# 
  1804  011E                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  011F                     	;# 
  1808  011F                     	;# 
  1809  011F                     	;# 
  1810  018C                     	;# 
  1811  018D                     	;# 
  1812  018E                     	;# 
  1813  018F                     	;# 
  1814  0190                     	;# 
  1815  0191                     	;# 
  1816  0192                     	;# 
  1817  0196                     	;# 
  1818  0197                     	;# 
  1819  0198                     	;# 
  1820  0199                     	;# 
  1821  019A                     	;# 
  1822  019B                     	;# 
  1823  019C                     	;# 
  1824  020C                     	;# 
  1825  020D                     	;# 
  1826  020E                     	;# 
  1827  020F                     	;# 
  1828  020F                     	;# 
  1829  0210                     	;# 
  1830  0210                     	;# 
  1831  0211                     	;# 
  1832  0211                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0215                     	;# 
  1837  0215                     	;# 
  1838  0216                     	;# 
  1839  0216                     	;# 
  1840  0217                     	;# 
  1841  0217                     	;# 
  1842  0218                     	;# 
  1843  0219                     	;# 
  1844  021A                     	;# 
  1845  021B                     	;# 
  1846  021B                     	;# 
  1847  021C                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021D                     	;# 
  1851  021E                     	;# 
  1852  021F                     	;# 
  1853  028C                     	;# 
  1854  028C                     	;# 
  1855  028D                     	;# 
  1856  028D                     	;# 
  1857  028E                     	;# 
  1858  028F                     	;# 
  1859  0290                     	;# 
  1860  0290                     	;# 
  1861  0291                     	;# 
  1862  0292                     	;# 
  1863  0292                     	;# 
  1864  0293                     	;# 
  1865  0293                     	;# 
  1866  0294                     	;# 
  1867  0295                     	;# 
  1868  0296                     	;# 
  1869  0296                     	;# 
  1870  0297                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  0299                     	;# 
  1875  029A                     	;# 
  1876  029B                     	;# 
  1877  029C                     	;# 
  1878  029C                     	;# 
  1879  029D                     	;# 
  1880  030C                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  030F                     	;# 
  1885  0310                     	;# 
  1886  0310                     	;# 
  1887  0311                     	;# 
  1888  0312                     	;# 
  1889  0313                     	;# 
  1890  0314                     	;# 
  1891  0314                     	;# 
  1892  0315                     	;# 
  1893  0316                     	;# 
  1894  0317                     	;# 
  1895  0318                     	;# 
  1896  0318                     	;# 
  1897  0319                     	;# 
  1898  031A                     	;# 
  1899  031B                     	;# 
  1900  031C                     	;# 
  1901  031C                     	;# 
  1902  031D                     	;# 
  1903  031E                     	;# 
  1904  031F                     	;# 
  1905  038C                     	;# 
  1906  038D                     	;# 
  1907  038E                     	;# 
  1908  0390                     	;# 
  1909  0391                     	;# 
  1910  0392                     	;# 
  1911  040C                     	;# 
  1912  040D                     	;# 
  1913  040E                     	;# 
  1914  040F                     	;# 
  1915  0410                     	;# 
  1916  0411                     	;# 
  1917  0416                     	;# 
  1918  0416                     	;# 
  1919  0417                     	;# 
  1920  0418                     	;# 
  1921  0418                     	;# 
  1922  0419                     	;# 
  1923  041A                     	;# 
  1924  041A                     	;# 
  1925  041B                     	;# 
  1926  041C                     	;# 
  1927  041C                     	;# 
  1928  041D                     	;# 
  1929  041E                     	;# 
  1930  041F                     	;# 
  1931  048C                     	;# 
  1932  048C                     	;# 
  1933  048D                     	;# 
  1934  048E                     	;# 
  1935  048F                     	;# 
  1936  048F                     	;# 
  1937  0490                     	;# 
  1938  0491                     	;# 
  1939  0492                     	;# 
  1940  0492                     	;# 
  1941  0493                     	;# 
  1942  0494                     	;# 
  1943  0495                     	;# 
  1944  0495                     	;# 
  1945  0496                     	;# 
  1946  0497                     	;# 
  1947  0498                     	;# 
  1948  0499                     	;# 
  1949  049A                     	;# 
  1950  049B                     	;# 
  1951  049C                     	;# 
  1952  049D                     	;# 
  1953  050C                     	;# 
  1954  050C                     	;# 
  1955  050D                     	;# 
  1956  050E                     	;# 
  1957  050F                     	;# 
  1958  050F                     	;# 
  1959  0510                     	;# 
  1960  0511                     	;# 
  1961  0512                     	;# 
  1962  0512                     	;# 
  1963  0513                     	;# 
  1964  0514                     	;# 
  1965  0515                     	;# 
  1966  0515                     	;# 
  1967  0516                     	;# 
  1968  0517                     	;# 
  1969  0518                     	;# 
  1970  0519                     	;# 
  1971  051A                     	;# 
  1972  051B                     	;# 
  1973  051C                     	;# 
  1974  051D                     	;# 
  1975  058C                     	;# 
  1976  058C                     	;# 
  1977  058D                     	;# 
  1978  058E                     	;# 
  1979  058F                     	;# 
  1980  058F                     	;# 
  1981  0590                     	;# 
  1982  0591                     	;# 
  1983  0592                     	;# 
  1984  0593                     	;# 
  1985  060C                     	;# 
  1986  060D                     	;# 
  1987  060E                     	;# 
  1988  060F                     	;# 
  1989  0610                     	;# 
  1990  0611                     	;# 
  1991  0612                     	;# 
  1992  0613                     	;# 
  1993  0614                     	;# 
  1994  0616                     	;# 
  1995  0617                     	;# 
  1996  0618                     	;# 
  1997  0619                     	;# 
  1998  061A                     	;# 
  1999  061B                     	;# 
  2000  061C                     	;# 
  2001  061D                     	;# 
  2002  061E                     	;# 
  2003  068C                     	;# 
  2004  068D                     	;# 
  2005  068E                     	;# 
  2006  068F                     	;# 
  2007  0690                     	;# 
  2008  0691                     	;# 
  2009  0692                     	;# 
  2010  0693                     	;# 
  2011  0694                     	;# 
  2012  070C                     	;# 
  2013  070D                     	;# 
  2014  070E                     	;# 
  2015  070F                     	;# 
  2016  0710                     	;# 
  2017  0711                     	;# 
  2018  0712                     	;# 
  2019  0713                     	;# 
  2020  0714                     	;# 
  2021  0716                     	;# 
  2022  0717                     	;# 
  2023  0718                     	;# 
  2024  0719                     	;# 
  2025  071A                     	;# 
  2026  071B                     	;# 
  2027  071C                     	;# 
  2028  071D                     	;# 
  2029  071E                     	;# 
  2030  0796                     	;# 
  2031  0797                     	;# 
  2032  0798                     	;# 
  2033  0799                     	;# 
  2034  079A                     	;# 
  2035  079B                     	;# 
  2036  080C                     	;# 
  2037  080D                     	;# 
  2038  080E                     	;# 
  2039  080F                     	;# 
  2040  0810                     	;# 
  2041  0811                     	;# 
  2042  0812                     	;# 
  2043  0813                     	;# 
  2044  0814                     	;# 
  2045  081A                     	;# 
  2046  081B                     	;# 
  2047  081C                     	;# 
  2048  081D                     	;# 
  2049  081E                     	;# 
  2050  081F                     	;# 
  2051  088C                     	;# 
  2052  088D                     	;# 
  2053  088E                     	;# 
  2054  088F                     	;# 
  2055  0890                     	;# 
  2056  0891                     	;# 
  2057  0892                     	;# 
  2058  0893                     	;# 
  2059  0895                     	;# 
  2060  0896                     	;# 
  2061  0897                     	;# 
  2062  0898                     	;# 
  2063  0899                     	;# 
  2064  089A                     	;# 
  2065  089B                     	;# 
  2066  090C                     	;# 
  2067  090E                     	;# 
  2068  090F                     	;# 
  2069  091F                     	;# 
  2070  098F                     	;# 
  2071  098F                     	;# 
  2072  0990                     	;# 
  2073  0991                     	;# 
  2074  0992                     	;# 
  2075  0993                     	;# 
  2076  0994                     	;# 
  2077  0995                     	;# 
  2078  0996                     	;# 
  2079  0997                     	;# 
  2080  1E0F                     	;# 
  2081  1E10                     	;# 
  2082  1E11                     	;# 
  2083  1E12                     	;# 
  2084  1E13                     	;# 
  2085  1E14                     	;# 
  2086  1E15                     	;# 
  2087  1E16                     	;# 
  2088  1E17                     	;# 
  2089  1E18                     	;# 
  2090  1E19                     	;# 
  2091  1E1A                     	;# 
  2092  1E1B                     	;# 
  2093  1E1C                     	;# 
  2094  1E1D                     	;# 
  2095  1E1E                     	;# 
  2096  1E1F                     	;# 
  2097  1E20                     	;# 
  2098  1E21                     	;# 
  2099  1E22                     	;# 
  2100  1E23                     	;# 
  2101  1E24                     	;# 
  2102  1E25                     	;# 
  2103  1E26                     	;# 
  2104  1E27                     	;# 
  2105  1E28                     	;# 
  2106  1E29                     	;# 
  2107  1E2A                     	;# 
  2108  1E2B                     	;# 
  2109  1E2C                     	;# 
  2110  1E2D                     	;# 
  2111  1E2E                     	;# 
  2112  1E2F                     	;# 
  2113  1E30                     	;# 
  2114  1E31                     	;# 
  2115  1E32                     	;# 
  2116  1E33                     	;# 
  2117  1E34                     	;# 
  2118  1E35                     	;# 
  2119  1E36                     	;# 
  2120  1E37                     	;# 
  2121  1E8F                     	;# 
  2122  1E90                     	;# 
  2123  1E91                     	;# 
  2124  1E92                     	;# 
  2125  1E93                     	;# 
  2126  1E94                     	;# 
  2127  1E95                     	;# 
  2128  1E96                     	;# 
  2129  1E97                     	;# 
  2130  1E9C                     	;# 
  2131  1E9D                     	;# 
  2132  1E9E                     	;# 
  2133  1EA1                     	;# 
  2134  1EA2                     	;# 
  2135  1EA3                     	;# 
  2136  1EA4                     	;# 
  2137  1EA5                     	;# 
  2138  1EA9                     	;# 
  2139  1EAA                     	;# 
  2140  1EAB                     	;# 
  2141  1EAC                     	;# 
  2142  1EB1                     	;# 
  2143  1EB2                     	;# 
  2144  1EB3                     	;# 
  2145  1EB8                     	;# 
  2146  1EB9                     	;# 
  2147  1EBA                     	;# 
  2148  1EBB                     	;# 
  2149  1EBC                     	;# 
  2150  1EBD                     	;# 
  2151  1EBE                     	;# 
  2152  1EC3                     	;# 
  2153  1EC5                     	;# 
  2154  1EC6                     	;# 
  2155  1EC7                     	;# 
  2156  1EC8                     	;# 
  2157  1EC9                     	;# 
  2158  1ECA                     	;# 
  2159  1ECB                     	;# 
  2160  1ECC                     	;# 
  2161  1F10                     	;# 
  2162  1F11                     	;# 
  2163  1F12                     	;# 
  2164  1F13                     	;# 
  2165  1F14                     	;# 
  2166  1F15                     	;# 
  2167  1F16                     	;# 
  2168  1F17                     	;# 
  2169  1F18                     	;# 
  2170  1F19                     	;# 
  2171  1F1A                     	;# 
  2172  1F1B                     	;# 
  2173  1F1C                     	;# 
  2174  1F1D                     	;# 
  2175  1F1E                     	;# 
  2176  1F1F                     	;# 
  2177  1F20                     	;# 
  2178  1F21                     	;# 
  2179  1F22                     	;# 
  2180  1F23                     	;# 
  2181  1F24                     	;# 
  2182  1F25                     	;# 
  2183  1F26                     	;# 
  2184  1F27                     	;# 
  2185  1F28                     	;# 
  2186  1F29                     	;# 
  2187  1F2A                     	;# 
  2188  1F2B                     	;# 
  2189  1F2C                     	;# 
  2190  1F2D                     	;# 
  2191  1F2E                     	;# 
  2192  1F2F                     	;# 
  2193  1F30                     	;# 
  2194  1F31                     	;# 
  2195  1F32                     	;# 
  2196  1F38                     	;# 
  2197  1F39                     	;# 
  2198  1F3A                     	;# 
  2199  1F3B                     	;# 
  2200  1F3C                     	;# 
  2201  1F3D                     	;# 
  2202  1F3E                     	;# 
  2203  1F3F                     	;# 
  2204  1F40                     	;# 
  2205  1F41                     	;# 
  2206  1F43                     	;# 
  2207  1F44                     	;# 
  2208  1F45                     	;# 
  2209  1F46                     	;# 
  2210  1F47                     	;# 
  2211  1F48                     	;# 
  2212  1F49                     	;# 
  2213  1F4A                     	;# 
  2214  1F4B                     	;# 
  2215  1F4C                     	;# 
  2216  1F4E                     	;# 
  2217  1F4F                     	;# 
  2218  1F50                     	;# 
  2219  1F51                     	;# 
  2220  1F52                     	;# 
  2221  1F53                     	;# 
  2222  1F54                     	;# 
  2223  1F55                     	;# 
  2224  1F56                     	;# 
  2225  1F57                     	;# 
  2226  1F59                     	;# 
  2227  1F5A                     	;# 
  2228  1F5B                     	;# 
  2229  1F5C                     	;# 
  2230  1F5D                     	;# 
  2231  1F61                     	;# 
  2232  1F62                     	;# 
  2233  1F64                     	;# 
  2234  1F65                     	;# 
  2235  1F66                     	;# 
  2236  1F67                     	;# 
  2237  1F68                     	;# 
  2238  1F69                     	;# 
  2239  1F6A                     	;# 
  2240  1F6B                     	;# 
  2241  1F6C                     	;# 
  2242  1F6D                     	;# 
  2243  1FE4                     	;# 
  2244  1FE5                     	;# 
  2245  1FE6                     	;# 
  2246  1FE7                     	;# 
  2247  1FE8                     	;# 
  2248  1FE9                     	;# 
  2249  1FEA                     	;# 
  2250  1FEB                     	;# 
  2251  1FED                     	;# 
  2252  1FEE                     	;# 
  2253  1FEF                     	;# 
  2254  0000                     	;# 
  2255  0001                     	;# 
  2256  0002                     	;# 
  2257  0003                     	;# 
  2258  0004                     	;# 
  2259  0005                     	;# 
  2260  0006                     	;# 
  2261  0007                     	;# 
  2262  0008                     	;# 
  2263  0009                     	;# 
  2264  000A                     	;# 
  2265  000B                     	;# 
  2266  000C                     	;# 
  2267  000D                     	;# 
  2268  000E                     	;# 
  2269  000F                     	;# 
  2270  0010                     	;# 
  2271  0011                     	;# 
  2272  0012                     	;# 
  2273  0013                     	;# 
  2274  0014                     	;# 
  2275  0015                     	;# 
  2276  0016                     	;# 
  2277  0017                     	;# 
  2278  0018                     	;# 
  2279  0019                     	;# 
  2280  001A                     	;# 
  2281  001C                     	;# 
  2282  001C                     	;# 
  2283  001D                     	;# 
  2284  001D                     	;# 
  2285  001E                     	;# 
  2286  001F                     	;# 
  2287  008C                     	;# 
  2288  008C                     	;# 
  2289  008D                     	;# 
  2290  008E                     	;# 
  2291  008E                     	;# 
  2292  008F                     	;# 
  2293  0090                     	;# 
  2294  0090                     	;# 
  2295  0091                     	;# 
  2296  0093                     	;# 
  2297  0094                     	;# 
  2298  0095                     	;# 
  2299  0096                     	;# 
  2300  0097                     	;# 
  2301  0098                     	;# 
  2302  0099                     	;# 
  2303  009A                     	;# 
  2304  009B                     	;# 
  2305  009C                     	;# 
  2306  009D                     	;# 
  2307  009E                     	;# 
  2308  010C                     	;# 
  2309  010D                     	;# 
  2310  010E                     	;# 
  2311  010E                     	;# 
  2312  010F                     	;# 
  2313  0110                     	;# 
  2314  0110                     	;# 
  2315  0111                     	;# 
  2316  0112                     	;# 
  2317  0112                     	;# 
  2318  0113                     	;# 
  2319  0114                     	;# 
  2320  0114                     	;# 
  2321  0115                     	;# 
  2322  0116                     	;# 
  2323  0116                     	;# 
  2324  0117                     	;# 
  2325  0119                     	;# 
  2326  0119                     	;# 
  2327  0119                     	;# 
  2328  011A                     	;# 
  2329  011A                     	;# 
  2330  011A                     	;# 
  2331  011B                     	;# 
  2332  011B                     	;# 
  2333  011B                     	;# 
  2334  011B                     	;# 
  2335  011B                     	;# 
  2336  011C                     	;# 
  2337  011C                     	;# 
  2338  011C                     	;# 
  2339  011D                     	;# 
  2340  011D                     	;# 
  2341  011D                     	;# 
  2342  011E                     	;# 
  2343  011E                     	;# 
  2344  011E                     	;# 
  2345  011F                     	;# 
  2346  011F                     	;# 
  2347  011F                     	;# 
  2348  011F                     	;# 
  2349  011F                     	;# 
  2350  018C                     	;# 
  2351  018D                     	;# 
  2352  018E                     	;# 
  2353  018F                     	;# 
  2354  0190                     	;# 
  2355  0191                     	;# 
  2356  0192                     	;# 
  2357  0196                     	;# 
  2358  0197                     	;# 
  2359  0198                     	;# 
  2360  0199                     	;# 
  2361  019A                     	;# 
  2362  019B                     	;# 
  2363  019C                     	;# 
  2364  020C                     	;# 
  2365  020D                     	;# 
  2366  020E                     	;# 
  2367  020F                     	;# 
  2368  020F                     	;# 
  2369  0210                     	;# 
  2370  0210                     	;# 
  2371  0211                     	;# 
  2372  0211                     	;# 
  2373  0212                     	;# 
  2374  0213                     	;# 
  2375  0214                     	;# 
  2376  0215                     	;# 
  2377  0215                     	;# 
  2378  0216                     	;# 
  2379  0216                     	;# 
  2380  0217                     	;# 
  2381  0217                     	;# 
  2382  0218                     	;# 
  2383  0219                     	;# 
  2384  021A                     	;# 
  2385  021B                     	;# 
  2386  021B                     	;# 
  2387  021C                     	;# 
  2388  021C                     	;# 
  2389  021D                     	;# 
  2390  021D                     	;# 
  2391  021E                     	;# 
  2392  021F                     	;# 
  2393  028C                     	;# 
  2394  028C                     	;# 
  2395  028D                     	;# 
  2396  028D                     	;# 
  2397  028E                     	;# 
  2398  028F                     	;# 
  2399  0290                     	;# 
  2400  0290                     	;# 
  2401  0291                     	;# 
  2402  0292                     	;# 
  2403  0292                     	;# 
  2404  0293                     	;# 
  2405  0293                     	;# 
  2406  0294                     	;# 
  2407  0295                     	;# 
  2408  0296                     	;# 
  2409  0296                     	;# 
  2410  0297                     	;# 
  2411  0298                     	;# 
  2412  0298                     	;# 
  2413  0299                     	;# 
  2414  0299                     	;# 
  2415  029A                     	;# 
  2416  029B                     	;# 
  2417  029C                     	;# 
  2418  029C                     	;# 
  2419  029D                     	;# 
  2420  030C                     	;# 
  2421  030C                     	;# 
  2422  030D                     	;# 
  2423  030E                     	;# 
  2424  030F                     	;# 
  2425  0310                     	;# 
  2426  0310                     	;# 
  2427  0311                     	;# 
  2428  0312                     	;# 
  2429  0313                     	;# 
  2430  0314                     	;# 
  2431  0314                     	;# 
  2432  0315                     	;# 
  2433  0316                     	;# 
  2434  0317                     	;# 
  2435  0318                     	;# 
  2436  0318                     	;# 
  2437  0319                     	;# 
  2438  031A                     	;# 
  2439  031B                     	;# 
  2440  031C                     	;# 
  2441  031C                     	;# 
  2442  031D                     	;# 
  2443  031E                     	;# 
  2444  031F                     	;# 
  2445  038C                     	;# 
  2446  038D                     	;# 
  2447  038E                     	;# 
  2448  0390                     	;# 
  2449  0391                     	;# 
  2450  0392                     	;# 
  2451  040C                     	;# 
  2452  040D                     	;# 
  2453  040E                     	;# 
  2454  040F                     	;# 
  2455  0410                     	;# 
  2456  0411                     	;# 
  2457  0416                     	;# 
  2458  0416                     	;# 
  2459  0417                     	;# 
  2460  0418                     	;# 
  2461  0418                     	;# 
  2462  0419                     	;# 
  2463  041A                     	;# 
  2464  041A                     	;# 
  2465  041B                     	;# 
  2466  041C                     	;# 
  2467  041C                     	;# 
  2468  041D                     	;# 
  2469  041E                     	;# 
  2470  041F                     	;# 
  2471  048C                     	;# 
  2472  048C                     	;# 
  2473  048D                     	;# 
  2474  048E                     	;# 
  2475  048F                     	;# 
  2476  048F                     	;# 
  2477  0490                     	;# 
  2478  0491                     	;# 
  2479  0492                     	;# 
  2480  0492                     	;# 
  2481  0493                     	;# 
  2482  0494                     	;# 
  2483  0495                     	;# 
  2484  0495                     	;# 
  2485  0496                     	;# 
  2486  0497                     	;# 
  2487  0498                     	;# 
  2488  0499                     	;# 
  2489  049A                     	;# 
  2490  049B                     	;# 
  2491  049C                     	;# 
  2492  049D                     	;# 
  2493  050C                     	;# 
  2494  050C                     	;# 
  2495  050D                     	;# 
  2496  050E                     	;# 
  2497  050F                     	;# 
  2498  050F                     	;# 
  2499  0510                     	;# 
  2500  0511                     	;# 
  2501  0512                     	;# 
  2502  0512                     	;# 
  2503  0513                     	;# 
  2504  0514                     	;# 
  2505  0515                     	;# 
  2506  0515                     	;# 
  2507  0516                     	;# 
  2508  0517                     	;# 
  2509  0518                     	;# 
  2510  0519                     	;# 
  2511  051A                     	;# 
  2512  051B                     	;# 
  2513  051C                     	;# 
  2514  051D                     	;# 
  2515  058C                     	;# 
  2516  058C                     	;# 
  2517  058D                     	;# 
  2518  058E                     	;# 
  2519  058F                     	;# 
  2520  058F                     	;# 
  2521  0590                     	;# 
  2522  0591                     	;# 
  2523  0592                     	;# 
  2524  0593                     	;# 
  2525  060C                     	;# 
  2526  060D                     	;# 
  2527  060E                     	;# 
  2528  060F                     	;# 
  2529  0610                     	;# 
  2530  0611                     	;# 
  2531  0612                     	;# 
  2532  0613                     	;# 
  2533  0614                     	;# 
  2534  0616                     	;# 
  2535  0617                     	;# 
  2536  0618                     	;# 
  2537  0619                     	;# 
  2538  061A                     	;# 
  2539  061B                     	;# 
  2540  061C                     	;# 
  2541  061D                     	;# 
  2542  061E                     	;# 
  2543  068C                     	;# 
  2544  068D                     	;# 
  2545  068E                     	;# 
  2546  068F                     	;# 
  2547  0690                     	;# 
  2548  0691                     	;# 
  2549  0692                     	;# 
  2550  0693                     	;# 
  2551  0694                     	;# 
  2552  070C                     	;# 
  2553  070D                     	;# 
  2554  070E                     	;# 
  2555  070F                     	;# 
  2556  0710                     	;# 
  2557  0711                     	;# 
  2558  0712                     	;# 
  2559  0713                     	;# 
  2560  0714                     	;# 
  2561  0716                     	;# 
  2562  0717                     	;# 
  2563  0718                     	;# 
  2564  0719                     	;# 
  2565  071A                     	;# 
  2566  071B                     	;# 
  2567  071C                     	;# 
  2568  071D                     	;# 
  2569  071E                     	;# 
  2570  0796                     	;# 
  2571  0797                     	;# 
  2572  0798                     	;# 
  2573  0799                     	;# 
  2574  079A                     	;# 
  2575  079B                     	;# 
  2576  080C                     	;# 
  2577  080D                     	;# 
  2578  080E                     	;# 
  2579  080F                     	;# 
  2580  0810                     	;# 
  2581  0811                     	;# 
  2582  0812                     	;# 
  2583  0813                     	;# 
  2584  0814                     	;# 
  2585  081A                     	;# 
  2586  081B                     	;# 
  2587  081C                     	;# 
  2588  081D                     	;# 
  2589  081E                     	;# 
  2590  081F                     	;# 
  2591  088C                     	;# 
  2592  088D                     	;# 
  2593  088E                     	;# 
  2594  088F                     	;# 
  2595  0890                     	;# 
  2596  0891                     	;# 
  2597  0892                     	;# 
  2598  0893                     	;# 
  2599  0895                     	;# 
  2600  0896                     	;# 
  2601  0897                     	;# 
  2602  0898                     	;# 
  2603  0899                     	;# 
  2604  089A                     	;# 
  2605  089B                     	;# 
  2606  090C                     	;# 
  2607  090E                     	;# 
  2608  090F                     	;# 
  2609  091F                     	;# 
  2610  098F                     	;# 
  2611  098F                     	;# 
  2612  0990                     	;# 
  2613  0991                     	;# 
  2614  0992                     	;# 
  2615  0993                     	;# 
  2616  0994                     	;# 
  2617  0995                     	;# 
  2618  0996                     	;# 
  2619  0997                     	;# 
  2620  1E0F                     	;# 
  2621  1E10                     	;# 
  2622  1E11                     	;# 
  2623  1E12                     	;# 
  2624  1E13                     	;# 
  2625  1E14                     	;# 
  2626  1E15                     	;# 
  2627  1E16                     	;# 
  2628  1E17                     	;# 
  2629  1E18                     	;# 
  2630  1E19                     	;# 
  2631  1E1A                     	;# 
  2632  1E1B                     	;# 
  2633  1E1C                     	;# 
  2634  1E1D                     	;# 
  2635  1E1E                     	;# 
  2636  1E1F                     	;# 
  2637  1E20                     	;# 
  2638  1E21                     	;# 
  2639  1E22                     	;# 
  2640  1E23                     	;# 
  2641  1E24                     	;# 
  2642  1E25                     	;# 
  2643  1E26                     	;# 
  2644  1E27                     	;# 
  2645  1E28                     	;# 
  2646  1E29                     	;# 
  2647  1E2A                     	;# 
  2648  1E2B                     	;# 
  2649  1E2C                     	;# 
  2650  1E2D                     	;# 
  2651  1E2E                     	;# 
  2652  1E2F                     	;# 
  2653  1E30                     	;# 
  2654  1E31                     	;# 
  2655  1E32                     	;# 
  2656  1E33                     	;# 
  2657  1E34                     	;# 
  2658  1E35                     	;# 
  2659  1E36                     	;# 
  2660  1E37                     	;# 
  2661  1E8F                     	;# 
  2662  1E90                     	;# 
  2663  1E91                     	;# 
  2664  1E92                     	;# 
  2665  1E93                     	;# 
  2666  1E94                     	;# 
  2667  1E95                     	;# 
  2668  1E96                     	;# 
  2669  1E97                     	;# 
  2670  1E9C                     	;# 
  2671  1E9D                     	;# 
  2672  1E9E                     	;# 
  2673  1EA1                     	;# 
  2674  1EA2                     	;# 
  2675  1EA3                     	;# 
  2676  1EA4                     	;# 
  2677  1EA5                     	;# 
  2678  1EA9                     	;# 
  2679  1EAA                     	;# 
  2680  1EAB                     	;# 
  2681  1EAC                     	;# 
  2682  1EB1                     	;# 
  2683  1EB2                     	;# 
  2684  1EB3                     	;# 
  2685  1EB8                     	;# 
  2686  1EB9                     	;# 
  2687  1EBA                     	;# 
  2688  1EBB                     	;# 
  2689  1EBC                     	;# 
  2690  1EBD                     	;# 
  2691  1EBE                     	;# 
  2692  1EC3                     	;# 
  2693  1EC5                     	;# 
  2694  1EC6                     	;# 
  2695  1EC7                     	;# 
  2696  1EC8                     	;# 
  2697  1EC9                     	;# 
  2698  1ECA                     	;# 
  2699  1ECB                     	;# 
  2700  1ECC                     	;# 
  2701  1F10                     	;# 
  2702  1F11                     	;# 
  2703  1F12                     	;# 
  2704  1F13                     	;# 
  2705  1F14                     	;# 
  2706  1F15                     	;# 
  2707  1F16                     	;# 
  2708  1F17                     	;# 
  2709  1F18                     	;# 
  2710  1F19                     	;# 
  2711  1F1A                     	;# 
  2712  1F1B                     	;# 
  2713  1F1C                     	;# 
  2714  1F1D                     	;# 
  2715  1F1E                     	;# 
  2716  1F1F                     	;# 
  2717  1F20                     	;# 
  2718  1F21                     	;# 
  2719  1F22                     	;# 
  2720  1F23                     	;# 
  2721  1F24                     	;# 
  2722  1F25                     	;# 
  2723  1F26                     	;# 
  2724  1F27                     	;# 
  2725  1F28                     	;# 
  2726  1F29                     	;# 
  2727  1F2A                     	;# 
  2728  1F2B                     	;# 
  2729  1F2C                     	;# 
  2730  1F2D                     	;# 
  2731  1F2E                     	;# 
  2732  1F2F                     	;# 
  2733  1F30                     	;# 
  2734  1F31                     	;# 
  2735  1F32                     	;# 
  2736  1F38                     	;# 
  2737  1F39                     	;# 
  2738  1F3A                     	;# 
  2739  1F3B                     	;# 
  2740  1F3C                     	;# 
  2741  1F3D                     	;# 
  2742  1F3E                     	;# 
  2743  1F3F                     	;# 
  2744  1F40                     	;# 
  2745  1F41                     	;# 
  2746  1F43                     	;# 
  2747  1F44                     	;# 
  2748  1F45                     	;# 
  2749  1F46                     	;# 
  2750  1F47                     	;# 
  2751  1F48                     	;# 
  2752  1F49                     	;# 
  2753  1F4A                     	;# 
  2754  1F4B                     	;# 
  2755  1F4C                     	;# 
  2756  1F4E                     	;# 
  2757  1F4F                     	;# 
  2758  1F50                     	;# 
  2759  1F51                     	;# 
  2760  1F52                     	;# 
  2761  1F53                     	;# 
  2762  1F54                     	;# 
  2763  1F55                     	;# 
  2764  1F56                     	;# 
  2765  1F57                     	;# 
  2766  1F59                     	;# 
  2767  1F5A                     	;# 
  2768  1F5B                     	;# 
  2769  1F5C                     	;# 
  2770  1F5D                     	;# 
  2771  1F61                     	;# 
  2772  1F62                     	;# 
  2773  1F64                     	;# 
  2774  1F65                     	;# 
  2775  1F66                     	;# 
  2776  1F67                     	;# 
  2777  1F68                     	;# 
  2778  1F69                     	;# 
  2779  1F6A                     	;# 
  2780  1F6B                     	;# 
  2781  1F6C                     	;# 
  2782  1F6D                     	;# 
  2783  1FE4                     	;# 
  2784  1FE5                     	;# 
  2785  1FE6                     	;# 
  2786  1FE7                     	;# 
  2787  1FE8                     	;# 
  2788  1FE9                     	;# 
  2789  1FEA                     	;# 
  2790  1FEB                     	;# 
  2791  1FED                     	;# 
  2792  1FEE                     	;# 
  2793  1FEF                     	;# 
  2794  0000                     	;# 
  2795  0001                     	;# 
  2796  0002                     	;# 
  2797  0003                     	;# 
  2798  0004                     	;# 
  2799  0005                     	;# 
  2800  0006                     	;# 
  2801  0007                     	;# 
  2802  0008                     	;# 
  2803  0009                     	;# 
  2804  000A                     	;# 
  2805  000B                     	;# 
  2806  000C                     	;# 
  2807  000D                     	;# 
  2808  000E                     	;# 
  2809  000F                     	;# 
  2810  0010                     	;# 
  2811  0011                     	;# 
  2812  0012                     	;# 
  2813  0013                     	;# 
  2814  0014                     	;# 
  2815  0015                     	;# 
  2816  0016                     	;# 
  2817  0017                     	;# 
  2818  0018                     	;# 
  2819  0019                     	;# 
  2820  001A                     	;# 
  2821  001C                     	;# 
  2822  001C                     	;# 
  2823  001D                     	;# 
  2824  001D                     	;# 
  2825  001E                     	;# 
  2826  001F                     	;# 
  2827  008C                     	;# 
  2828  008C                     	;# 
  2829  008D                     	;# 
  2830  008E                     	;# 
  2831  008E                     	;# 
  2832  008F                     	;# 
  2833  0090                     	;# 
  2834  0090                     	;# 
  2835  0091                     	;# 
  2836  0093                     	;# 
  2837  0094                     	;# 
  2838  0095                     	;# 
  2839  0096                     	;# 
  2840  0097                     	;# 
  2841  0098                     	;# 
  2842  0099                     	;# 
  2843  009A                     	;# 
  2844  009B                     	;# 
  2845  009C                     	;# 
  2846  009D                     	;# 
  2847  009E                     	;# 
  2848  010C                     	;# 
  2849  010D                     	;# 
  2850  010E                     	;# 
  2851  010E                     	;# 
  2852  010F                     	;# 
  2853  0110                     	;# 
  2854  0110                     	;# 
  2855  0111                     	;# 
  2856  0112                     	;# 
  2857  0112                     	;# 
  2858  0113                     	;# 
  2859  0114                     	;# 
  2860  0114                     	;# 
  2861  0115                     	;# 
  2862  0116                     	;# 
  2863  0116                     	;# 
  2864  0117                     	;# 
  2865  0119                     	;# 
  2866  0119                     	;# 
  2867  0119                     	;# 
  2868  011A                     	;# 
  2869  011A                     	;# 
  2870  011A                     	;# 
  2871  011B                     	;# 
  2872  011B                     	;# 
  2873  011B                     	;# 
  2874  011B                     	;# 
  2875  011B                     	;# 
  2876  011C                     	;# 
  2877  011C                     	;# 
  2878  011C                     	;# 
  2879  011D                     	;# 
  2880  011D                     	;# 
  2881  011D                     	;# 
  2882  011E                     	;# 
  2883  011E                     	;# 
  2884  011E                     	;# 
  2885  011F                     	;# 
  2886  011F                     	;# 
  2887  011F                     	;# 
  2888  011F                     	;# 
  2889  011F                     	;# 
  2890  018C                     	;# 
  2891  018D                     	;# 
  2892  018E                     	;# 
  2893  018F                     	;# 
  2894  0190                     	;# 
  2895  0191                     	;# 
  2896  0192                     	;# 
  2897  0196                     	;# 
  2898  0197                     	;# 
  2899  0198                     	;# 
  2900  0199                     	;# 
  2901  019A                     	;# 
  2902  019B                     	;# 
  2903  019C                     	;# 
  2904  020C                     	;# 
  2905  020D                     	;# 
  2906  020E                     	;# 
  2907  020F                     	;# 
  2908  020F                     	;# 
  2909  0210                     	;# 
  2910  0210                     	;# 
  2911  0211                     	;# 
  2912  0211                     	;# 
  2913  0212                     	;# 
  2914  0213                     	;# 
  2915  0214                     	;# 
  2916  0215                     	;# 
  2917  0215                     	;# 
  2918  0216                     	;# 
  2919  0216                     	;# 
  2920  0217                     	;# 
  2921  0217                     	;# 
  2922  0218                     	;# 
  2923  0219                     	;# 
  2924  021A                     	;# 
  2925  021B                     	;# 
  2926  021B                     	;# 
  2927  021C                     	;# 
  2928  021C                     	;# 
  2929  021D                     	;# 
  2930  021D                     	;# 
  2931  021E                     	;# 
  2932  021F                     	;# 
  2933  028C                     	;# 
  2934  028C                     	;# 
  2935  028D                     	;# 
  2936  028D                     	;# 
  2937  028E                     	;# 
  2938  028F                     	;# 
  2939  0290                     	;# 
  2940  0290                     	;# 
  2941  0291                     	;# 
  2942  0292                     	;# 
  2943  0292                     	;# 
  2944  0293                     	;# 
  2945  0293                     	;# 
  2946  0294                     	;# 
  2947  0295                     	;# 
  2948  0296                     	;# 
  2949  0296                     	;# 
  2950  0297                     	;# 
  2951  0298                     	;# 
  2952  0298                     	;# 
  2953  0299                     	;# 
  2954  0299                     	;# 
  2955  029A                     	;# 
  2956  029B                     	;# 
  2957  029C                     	;# 
  2958  029C                     	;# 
  2959  029D                     	;# 
  2960  030C                     	;# 
  2961  030C                     	;# 
  2962  030D                     	;# 
  2963  030E                     	;# 
  2964  030F                     	;# 
  2965  0310                     	;# 
  2966  0310                     	;# 
  2967  0311                     	;# 
  2968  0312                     	;# 
  2969  0313                     	;# 
  2970  0314                     	;# 
  2971  0314                     	;# 
  2972  0315                     	;# 
  2973  0316                     	;# 
  2974  0317                     	;# 
  2975  0318                     	;# 
  2976  0318                     	;# 
  2977  0319                     	;# 
  2978  031A                     	;# 
  2979  031B                     	;# 
  2980  031C                     	;# 
  2981  031C                     	;# 
  2982  031D                     	;# 
  2983  031E                     	;# 
  2984  031F                     	;# 
  2985  038C                     	;# 
  2986  038D                     	;# 
  2987  038E                     	;# 
  2988  0390                     	;# 
  2989  0391                     	;# 
  2990  0392                     	;# 
  2991  040C                     	;# 
  2992  040D                     	;# 
  2993  040E                     	;# 
  2994  040F                     	;# 
  2995  0410                     	;# 
  2996  0411                     	;# 
  2997  0416                     	;# 
  2998  0416                     	;# 
  2999  0417                     	;# 
  3000  0418                     	;# 
  3001  0418                     	;# 
  3002  0419                     	;# 
  3003  041A                     	;# 
  3004  041A                     	;# 
  3005  041B                     	;# 
  3006  041C                     	;# 
  3007  041C                     	;# 
  3008  041D                     	;# 
  3009  041E                     	;# 
  3010  041F                     	;# 
  3011  048C                     	;# 
  3012  048C                     	;# 
  3013  048D                     	;# 
  3014  048E                     	;# 
  3015  048F                     	;# 
  3016  048F                     	;# 
  3017  0490                     	;# 
  3018  0491                     	;# 
  3019  0492                     	;# 
  3020  0492                     	;# 
  3021  0493                     	;# 
  3022  0494                     	;# 
  3023  0495                     	;# 
  3024  0495                     	;# 
  3025  0496                     	;# 
  3026  0497                     	;# 
  3027  0498                     	;# 
  3028  0499                     	;# 
  3029  049A                     	;# 
  3030  049B                     	;# 
  3031  049C                     	;# 
  3032  049D                     	;# 
  3033  050C                     	;# 
  3034  050C                     	;# 
  3035  050D                     	;# 
  3036  050E                     	;# 
  3037  050F                     	;# 
  3038  050F                     	;# 
  3039  0510                     	;# 
  3040  0511                     	;# 
  3041  0512                     	;# 
  3042  0512                     	;# 
  3043  0513                     	;# 
  3044  0514                     	;# 
  3045  0515                     	;# 
  3046  0515                     	;# 
  3047  0516                     	;# 
  3048  0517                     	;# 
  3049  0518                     	;# 
  3050  0519                     	;# 
  3051  051A                     	;# 
  3052  051B                     	;# 
  3053  051C                     	;# 
  3054  051D                     	;# 
  3055  058C                     	;# 
  3056  058C                     	;# 
  3057  058D                     	;# 
  3058  058E                     	;# 
  3059  058F                     	;# 
  3060  058F                     	;# 
  3061  0590                     	;# 
  3062  0591                     	;# 
  3063  0592                     	;# 
  3064  0593                     	;# 
  3065  060C                     	;# 
  3066  060D                     	;# 
  3067  060E                     	;# 
  3068  060F                     	;# 
  3069  0610                     	;# 
  3070  0611                     	;# 
  3071  0612                     	;# 
  3072  0613                     	;# 
  3073  0614                     	;# 
  3074  0616                     	;# 
  3075  0617                     	;# 
  3076  0618                     	;# 
  3077  0619                     	;# 
  3078  061A                     	;# 
  3079  061B                     	;# 
  3080  061C                     	;# 
  3081  061D                     	;# 
  3082  061E                     	;# 
  3083  068C                     	;# 
  3084  068D                     	;# 
  3085  068E                     	;# 
  3086  068F                     	;# 
  3087  0690                     	;# 
  3088  0691                     	;# 
  3089  0692                     	;# 
  3090  0693                     	;# 
  3091  0694                     	;# 
  3092  070C                     	;# 
  3093  070D                     	;# 
  3094  070E                     	;# 
  3095  070F                     	;# 
  3096  0710                     	;# 
  3097  0711                     	;# 
  3098  0712                     	;# 
  3099  0713                     	;# 
  3100  0714                     	;# 
  3101  0716                     	;# 
  3102  0717                     	;# 
  3103  0718                     	;# 
  3104  0719                     	;# 
  3105  071A                     	;# 
  3106  071B                     	;# 
  3107  071C                     	;# 
  3108  071D                     	;# 
  3109  071E                     	;# 
  3110  0796                     	;# 
  3111  0797                     	;# 
  3112  0798                     	;# 
  3113  0799                     	;# 
  3114  079A                     	;# 
  3115  079B                     	;# 
  3116  080C                     	;# 
  3117  080D                     	;# 
  3118  080E                     	;# 
  3119  080F                     	;# 
  3120  0810                     	;# 
  3121  0811                     	;# 
  3122  0812                     	;# 
  3123  0813                     	;# 
  3124  0814                     	;# 
  3125  081A                     	;# 
  3126  081B                     	;# 
  3127  081C                     	;# 
  3128  081D                     	;# 
  3129  081E                     	;# 
  3130  081F                     	;# 
  3131  088C                     	;# 
  3132  088D                     	;# 
  3133  088E                     	;# 
  3134  088F                     	;# 
  3135  0890                     	;# 
  3136  0891                     	;# 
  3137  0892                     	;# 
  3138  0893                     	;# 
  3139  0895                     	;# 
  3140  0896                     	;# 
  3141  0897                     	;# 
  3142  0898                     	;# 
  3143  0899                     	;# 
  3144  089A                     	;# 
  3145  089B                     	;# 
  3146  090C                     	;# 
  3147  090E                     	;# 
  3148  090F                     	;# 
  3149  091F                     	;# 
  3150  098F                     	;# 
  3151  098F                     	;# 
  3152  0990                     	;# 
  3153  0991                     	;# 
  3154  0992                     	;# 
  3155  0993                     	;# 
  3156  0994                     	;# 
  3157  0995                     	;# 
  3158  0996                     	;# 
  3159  0997                     	;# 
  3160  1E0F                     	;# 
  3161  1E10                     	;# 
  3162  1E11                     	;# 
  3163  1E12                     	;# 
  3164  1E13                     	;# 
  3165  1E14                     	;# 
  3166  1E15                     	;# 
  3167  1E16                     	;# 
  3168  1E17                     	;# 
  3169  1E18                     	;# 
  3170  1E19                     	;# 
  3171  1E1A                     	;# 
  3172  1E1B                     	;# 
  3173  1E1C                     	;# 
  3174  1E1D                     	;# 
  3175  1E1E                     	;# 
  3176  1E1F                     	;# 
  3177  1E20                     	;# 
  3178  1E21                     	;# 
  3179  1E22                     	;# 
  3180  1E23                     	;# 
  3181  1E24                     	;# 
  3182  1E25                     	;# 
  3183  1E26                     	;# 
  3184  1E27                     	;# 
  3185  1E28                     	;# 
  3186  1E29                     	;# 
  3187  1E2A                     	;# 
  3188  1E2B                     	;# 
  3189  1E2C                     	;# 
  3190  1E2D                     	;# 
  3191  1E2E                     	;# 
  3192  1E2F                     	;# 
  3193  1E30                     	;# 
  3194  1E31                     	;# 
  3195  1E32                     	;# 
  3196  1E33                     	;# 
  3197  1E34                     	;# 
  3198  1E35                     	;# 
  3199  1E36                     	;# 
  3200  1E37                     	;# 
  3201  1E8F                     	;# 
  3202  1E90                     	;# 
  3203  1E91                     	;# 
  3204  1E92                     	;# 
  3205  1E93                     	;# 
  3206  1E94                     	;# 
  3207  1E95                     	;# 
  3208  1E96                     	;# 
  3209  1E97                     	;# 
  3210  1E9C                     	;# 
  3211  1E9D                     	;# 
  3212  1E9E                     	;# 
  3213  1EA1                     	;# 
  3214  1EA2                     	;# 
  3215  1EA3                     	;# 
  3216  1EA4                     	;# 
  3217  1EA5                     	;# 
  3218  1EA9                     	;# 
  3219  1EAA                     	;# 
  3220  1EAB                     	;# 
  3221  1EAC                     	;# 
  3222  1EB1                     	;# 
  3223  1EB2                     	;# 
  3224  1EB3                     	;# 
  3225  1EB8                     	;# 
  3226  1EB9                     	;# 
  3227  1EBA                     	;# 
  3228  1EBB                     	;# 
  3229  1EBC                     	;# 
  3230  1EBD                     	;# 
  3231  1EBE                     	;# 
  3232  1EC3                     	;# 
  3233  1EC5                     	;# 
  3234  1EC6                     	;# 
  3235  1EC7                     	;# 
  3236  1EC8                     	;# 
  3237  1EC9                     	;# 
  3238  1ECA                     	;# 
  3239  1ECB                     	;# 
  3240  1ECC                     	;# 
  3241  1F10                     	;# 
  3242  1F11                     	;# 
  3243  1F12                     	;# 
  3244  1F13                     	;# 
  3245  1F14                     	;# 
  3246  1F15                     	;# 
  3247  1F16                     	;# 
  3248  1F17                     	;# 
  3249  1F18                     	;# 
  3250  1F19                     	;# 
  3251  1F1A                     	;# 
  3252  1F1B                     	;# 
  3253  1F1C                     	;# 
  3254  1F1D                     	;# 
  3255  1F1E                     	;# 
  3256  1F1F                     	;# 
  3257  1F20                     	;# 
  3258  1F21                     	;# 
  3259  1F22                     	;# 
  3260  1F23                     	;# 
  3261  1F24                     	;# 
  3262  1F25                     	;# 
  3263  1F26                     	;# 
  3264  1F27                     	;# 
  3265  1F28                     	;# 
  3266  1F29                     	;# 
  3267  1F2A                     	;# 
  3268  1F2B                     	;# 
  3269  1F2C                     	;# 
  3270  1F2D                     	;# 
  3271  1F2E                     	;# 
  3272  1F2F                     	;# 
  3273  1F30                     	;# 
  3274  1F31                     	;# 
  3275  1F32                     	;# 
  3276  1F38                     	;# 
  3277  1F39                     	;# 
  3278  1F3A                     	;# 
  3279  1F3B                     	;# 
  3280  1F3C                     	;# 
  3281  1F3D                     	;# 
  3282  1F3E                     	;# 
  3283  1F3F                     	;# 
  3284  1F40                     	;# 
  3285  1F41                     	;# 
  3286  1F43                     	;# 
  3287  1F44                     	;# 
  3288  1F45                     	;# 
  3289  1F46                     	;# 
  3290  1F47                     	;# 
  3291  1F48                     	;# 
  3292  1F49                     	;# 
  3293  1F4A                     	;# 
  3294  1F4B                     	;# 
  3295  1F4C                     	;# 
  3296  1F4E                     	;# 
  3297  1F4F                     	;# 
  3298  1F50                     	;# 
  3299  1F51                     	;# 
  3300  1F52                     	;# 
  3301  1F53                     	;# 
  3302  1F54                     	;# 
  3303  1F55                     	;# 
  3304  1F56                     	;# 
  3305  1F57                     	;# 
  3306  1F59                     	;# 
  3307  1F5A                     	;# 
  3308  1F5B                     	;# 
  3309  1F5C                     	;# 
  3310  1F5D                     	;# 
  3311  1F61                     	;# 
  3312  1F62                     	;# 
  3313  1F64                     	;# 
  3314  1F65                     	;# 
  3315  1F66                     	;# 
  3316  1F67                     	;# 
  3317  1F68                     	;# 
  3318  1F69                     	;# 
  3319  1F6A                     	;# 
  3320  1F6B                     	;# 
  3321  1F6C                     	;# 
  3322  1F6D                     	;# 
  3323  1FE4                     	;# 
  3324  1FE5                     	;# 
  3325  1FE6                     	;# 
  3326  1FE7                     	;# 
  3327  1FE8                     	;# 
  3328  1FE9                     	;# 
  3329  1FEA                     	;# 
  3330  1FEB                     	;# 
  3331  1FED                     	;# 
  3332  1FEE                     	;# 
  3333  1FEF                     	;# 
  3334  0000                     	;# 
  3335  0001                     	;# 
  3336  0002                     	;# 
  3337  0003                     	;# 
  3338  0004                     	;# 
  3339  0005                     	;# 
  3340  0006                     	;# 
  3341  0007                     	;# 
  3342  0008                     	;# 
  3343  0009                     	;# 
  3344  000A                     	;# 
  3345  000B                     	;# 
  3346  000C                     	;# 
  3347  000D                     	;# 
  3348  000E                     	;# 
  3349  000F                     	;# 
  3350  0010                     	;# 
  3351  0011                     	;# 
  3352  0012                     	;# 
  3353  0013                     	;# 
  3354  0014                     	;# 
  3355  0015                     	;# 
  3356  0016                     	;# 
  3357  0017                     	;# 
  3358  0018                     	;# 
  3359  0019                     	;# 
  3360  001A                     	;# 
  3361  001C                     	;# 
  3362  001C                     	;# 
  3363  001D                     	;# 
  3364  001D                     	;# 
  3365  001E                     	;# 
  3366  001F                     	;# 
  3367  008C                     	;# 
  3368  008C                     	;# 
  3369  008D                     	;# 
  3370  008E                     	;# 
  3371  008E                     	;# 
  3372  008F                     	;# 
  3373  0090                     	;# 
  3374  0090                     	;# 
  3375  0091                     	;# 
  3376  0093                     	;# 
  3377  0094                     	;# 
  3378  0095                     	;# 
  3379  0096                     	;# 
  3380  0097                     	;# 
  3381  0098                     	;# 
  3382  0099                     	;# 
  3383  009A                     	;# 
  3384  009B                     	;# 
  3385  009C                     	;# 
  3386  009D                     	;# 
  3387  009E                     	;# 
  3388  010C                     	;# 
  3389  010D                     	;# 
  3390  010E                     	;# 
  3391  010E                     	;# 
  3392  010F                     	;# 
  3393  0110                     	;# 
  3394  0110                     	;# 
  3395  0111                     	;# 
  3396  0112                     	;# 
  3397  0112                     	;# 
  3398  0113                     	;# 
  3399  0114                     	;# 
  3400  0114                     	;# 
  3401  0115                     	;# 
  3402  0116                     	;# 
  3403  0116                     	;# 
  3404  0117                     	;# 
  3405  0119                     	;# 
  3406  0119                     	;# 
  3407  0119                     	;# 
  3408  011A                     	;# 
  3409  011A                     	;# 
  3410  011A                     	;# 
  3411  011B                     	;# 
  3412  011B                     	;# 
  3413  011B                     	;# 
  3414  011B                     	;# 
  3415  011B                     	;# 
  3416  011C                     	;# 
  3417  011C                     	;# 
  3418  011C                     	;# 
  3419  011D                     	;# 
  3420  011D                     	;# 
  3421  011D                     	;# 
  3422  011E                     	;# 
  3423  011E                     	;# 
  3424  011E                     	;# 
  3425  011F                     	;# 
  3426  011F                     	;# 
  3427  011F                     	;# 
  3428  011F                     	;# 
  3429  011F                     	;# 
  3430  018C                     	;# 
  3431  018D                     	;# 
  3432  018E                     	;# 
  3433  018F                     	;# 
  3434  0190                     	;# 
  3435  0191                     	;# 
  3436  0192                     	;# 
  3437  0196                     	;# 
  3438  0197                     	;# 
  3439  0198                     	;# 
  3440  0199                     	;# 
  3441  019A                     	;# 
  3442  019B                     	;# 
  3443  019C                     	;# 
  3444  020C                     	;# 
  3445  020D                     	;# 
  3446  020E                     	;# 
  3447  020F                     	;# 
  3448  020F                     	;# 
  3449  0210                     	;# 
  3450  0210                     	;# 
  3451  0211                     	;# 
  3452  0211                     	;# 
  3453  0212                     	;# 
  3454  0213                     	;# 
  3455  0214                     	;# 
  3456  0215                     	;# 
  3457  0215                     	;# 
  3458  0216                     	;# 
  3459  0216                     	;# 
  3460  0217                     	;# 
  3461  0217                     	;# 
  3462  0218                     	;# 
  3463  0219                     	;# 
  3464  021A                     	;# 
  3465  021B                     	;# 
  3466  021B                     	;# 
  3467  021C                     	;# 
  3468  021C                     	;# 
  3469  021D                     	;# 
  3470  021D                     	;# 
  3471  021E                     	;# 
  3472  021F                     	;# 
  3473  028C                     	;# 
  3474  028C                     	;# 
  3475  028D                     	;# 
  3476  028D                     	;# 
  3477  028E                     	;# 
  3478  028F                     	;# 
  3479  0290                     	;# 
  3480  0290                     	;# 
  3481  0291                     	;# 
  3482  0292                     	;# 
  3483  0292                     	;# 
  3484  0293                     	;# 
  3485  0293                     	;# 
  3486  0294                     	;# 
  3487  0295                     	;# 
  3488  0296                     	;# 
  3489  0296                     	;# 
  3490  0297                     	;# 
  3491  0298                     	;# 
  3492  0298                     	;# 
  3493  0299                     	;# 
  3494  0299                     	;# 
  3495  029A                     	;# 
  3496  029B                     	;# 
  3497  029C                     	;# 
  3498  029C                     	;# 
  3499  029D                     	;# 
  3500  030C                     	;# 
  3501  030C                     	;# 
  3502  030D                     	;# 
  3503  030E                     	;# 
  3504  030F                     	;# 
  3505  0310                     	;# 
  3506  0310                     	;# 
  3507  0311                     	;# 
  3508  0312                     	;# 
  3509  0313                     	;# 
  3510  0314                     	;# 
  3511  0314                     	;# 
  3512  0315                     	;# 
  3513  0316                     	;# 
  3514  0317                     	;# 
  3515  0318                     	;# 
  3516  0318                     	;# 
  3517  0319                     	;# 
  3518  031A                     	;# 
  3519  031B                     	;# 
  3520  031C                     	;# 
  3521  031C                     	;# 
  3522  031D                     	;# 
  3523  031E                     	;# 
  3524  031F                     	;# 
  3525  038C                     	;# 
  3526  038D                     	;# 
  3527  038E                     	;# 
  3528  0390                     	;# 
  3529  0391                     	;# 
  3530  0392                     	;# 
  3531  040C                     	;# 
  3532  040D                     	;# 
  3533  040E                     	;# 
  3534  040F                     	;# 
  3535  0410                     	;# 
  3536  0411                     	;# 
  3537  0416                     	;# 
  3538  0416                     	;# 
  3539  0417                     	;# 
  3540  0418                     	;# 
  3541  0418                     	;# 
  3542  0419                     	;# 
  3543  041A                     	;# 
  3544  041A                     	;# 
  3545  041B                     	;# 
  3546  041C                     	;# 
  3547  041C                     	;# 
  3548  041D                     	;# 
  3549  041E                     	;# 
  3550  041F                     	;# 
  3551  048C                     	;# 
  3552  048C                     	;# 
  3553  048D                     	;# 
  3554  048E                     	;# 
  3555  048F                     	;# 
  3556  048F                     	;# 
  3557  0490                     	;# 
  3558  0491                     	;# 
  3559  0492                     	;# 
  3560  0492                     	;# 
  3561  0493                     	;# 
  3562  0494                     	;# 
  3563  0495                     	;# 
  3564  0495                     	;# 
  3565  0496                     	;# 
  3566  0497                     	;# 
  3567  0498                     	;# 
  3568  0499                     	;# 
  3569  049A                     	;# 
  3570  049B                     	;# 
  3571  049C                     	;# 
  3572  049D                     	;# 
  3573  050C                     	;# 
  3574  050C                     	;# 
  3575  050D                     	;# 
  3576  050E                     	;# 
  3577  050F                     	;# 
  3578  050F                     	;# 
  3579  0510                     	;# 
  3580  0511                     	;# 
  3581  0512                     	;# 
  3582  0512                     	;# 
  3583  0513                     	;# 
  3584  0514                     	;# 
  3585  0515                     	;# 
  3586  0515                     	;# 
  3587  0516                     	;# 
  3588  0517                     	;# 
  3589  0518                     	;# 
  3590  0519                     	;# 
  3591  051A                     	;# 
  3592  051B                     	;# 
  3593  051C                     	;# 
  3594  051D                     	;# 
  3595  058C                     	;# 
  3596  058C                     	;# 
  3597  058D                     	;# 
  3598  058E                     	;# 
  3599  058F                     	;# 
  3600  058F                     	;# 
  3601  0590                     	;# 
  3602  0591                     	;# 
  3603  0592                     	;# 
  3604  0593                     	;# 
  3605  060C                     	;# 
  3606  060D                     	;# 
  3607  060E                     	;# 
  3608  060F                     	;# 
  3609  0610                     	;# 
  3610  0611                     	;# 
  3611  0612                     	;# 
  3612  0613                     	;# 
  3613  0614                     	;# 
  3614  0616                     	;# 
  3615  0617                     	;# 
  3616  0618                     	;# 
  3617  0619                     	;# 
  3618  061A                     	;# 
  3619  061B                     	;# 
  3620  061C                     	;# 
  3621  061D                     	;# 
  3622  061E                     	;# 
  3623  068C                     	;# 
  3624  068D                     	;# 
  3625  068E                     	;# 
  3626  068F                     	;# 
  3627  0690                     	;# 
  3628  0691                     	;# 
  3629  0692                     	;# 
  3630  0693                     	;# 
  3631  0694                     	;# 
  3632  070C                     	;# 
  3633  070D                     	;# 
  3634  070E                     	;# 
  3635  070F                     	;# 
  3636  0710                     	;# 
  3637  0711                     	;# 
  3638  0712                     	;# 
  3639  0713                     	;# 
  3640  0714                     	;# 
  3641  0716                     	;# 
  3642  0717                     	;# 
  3643  0718                     	;# 
  3644  0719                     	;# 
  3645  071A                     	;# 
  3646  071B                     	;# 
  3647  071C                     	;# 
  3648  071D                     	;# 
  3649  071E                     	;# 
  3650  0796                     	;# 
  3651  0797                     	;# 
  3652  0798                     	;# 
  3653  0799                     	;# 
  3654  079A                     	;# 
  3655  079B                     	;# 
  3656  080C                     	;# 
  3657  080D                     	;# 
  3658  080E                     	;# 
  3659  080F                     	;# 
  3660  0810                     	;# 
  3661  0811                     	;# 
  3662  0812                     	;# 
  3663  0813                     	;# 
  3664  0814                     	;# 
  3665  081A                     	;# 
  3666  081B                     	;# 
  3667  081C                     	;# 
  3668  081D                     	;# 
  3669  081E                     	;# 
  3670  081F                     	;# 
  3671  088C                     	;# 
  3672  088D                     	;# 
  3673  088E                     	;# 
  3674  088F                     	;# 
  3675  0890                     	;# 
  3676  0891                     	;# 
  3677  0892                     	;# 
  3678  0893                     	;# 
  3679  0895                     	;# 
  3680  0896                     	;# 
  3681  0897                     	;# 
  3682  0898                     	;# 
  3683  0899                     	;# 
  3684  089A                     	;# 
  3685  089B                     	;# 
  3686  090C                     	;# 
  3687  090E                     	;# 
  3688  090F                     	;# 
  3689  091F                     	;# 
  3690  098F                     	;# 
  3691  098F                     	;# 
  3692  0990                     	;# 
  3693  0991                     	;# 
  3694  0992                     	;# 
  3695  0993                     	;# 
  3696  0994                     	;# 
  3697  0995                     	;# 
  3698  0996                     	;# 
  3699  0997                     	;# 
  3700  1E0F                     	;# 
  3701  1E10                     	;# 
  3702  1E11                     	;# 
  3703  1E12                     	;# 
  3704  1E13                     	;# 
  3705  1E14                     	;# 
  3706  1E15                     	;# 
  3707  1E16                     	;# 
  3708  1E17                     	;# 
  3709  1E18                     	;# 
  3710  1E19                     	;# 
  3711  1E1A                     	;# 
  3712  1E1B                     	;# 
  3713  1E1C                     	;# 
  3714  1E1D                     	;# 
  3715  1E1E                     	;# 
  3716  1E1F                     	;# 
  3717  1E20                     	;# 
  3718  1E21                     	;# 
  3719  1E22                     	;# 
  3720  1E23                     	;# 
  3721  1E24                     	;# 
  3722  1E25                     	;# 
  3723  1E26                     	;# 
  3724  1E27                     	;# 
  3725  1E28                     	;# 
  3726  1E29                     	;# 
  3727  1E2A                     	;# 
  3728  1E2B                     	;# 
  3729  1E2C                     	;# 
  3730  1E2D                     	;# 
  3731  1E2E                     	;# 
  3732  1E2F                     	;# 
  3733  1E30                     	;# 
  3734  1E31                     	;# 
  3735  1E32                     	;# 
  3736  1E33                     	;# 
  3737  1E34                     	;# 
  3738  1E35                     	;# 
  3739  1E36                     	;# 
  3740  1E37                     	;# 
  3741  1E8F                     	;# 
  3742  1E90                     	;# 
  3743  1E91                     	;# 
  3744  1E92                     	;# 
  3745  1E93                     	;# 
  3746  1E94                     	;# 
  3747  1E95                     	;# 
  3748  1E96                     	;# 
  3749  1E97                     	;# 
  3750  1E9C                     	;# 
  3751  1E9D                     	;# 
  3752  1E9E                     	;# 
  3753  1EA1                     	;# 
  3754  1EA2                     	;# 
  3755  1EA3                     	;# 
  3756  1EA4                     	;# 
  3757  1EA5                     	;# 
  3758  1EA9                     	;# 
  3759  1EAA                     	;# 
  3760  1EAB                     	;# 
  3761  1EAC                     	;# 
  3762  1EB1                     	;# 
  3763  1EB2                     	;# 
  3764  1EB3                     	;# 
  3765  1EB8                     	;# 
  3766  1EB9                     	;# 
  3767  1EBA                     	;# 
  3768  1EBB                     	;# 
  3769  1EBC                     	;# 
  3770  1EBD                     	;# 
  3771  1EBE                     	;# 
  3772  1EC3                     	;# 
  3773  1EC5                     	;# 
  3774  1EC6                     	;# 
  3775  1EC7                     	;# 
  3776  1EC8                     	;# 
  3777  1EC9                     	;# 
  3778  1ECA                     	;# 
  3779  1ECB                     	;# 
  3780  1ECC                     	;# 
  3781  1F10                     	;# 
  3782  1F11                     	;# 
  3783  1F12                     	;# 
  3784  1F13                     	;# 
  3785  1F14                     	;# 
  3786  1F15                     	;# 
  3787  1F16                     	;# 
  3788  1F17                     	;# 
  3789  1F18                     	;# 
  3790  1F19                     	;# 
  3791  1F1A                     	;# 
  3792  1F1B                     	;# 
  3793  1F1C                     	;# 
  3794  1F1D                     	;# 
  3795  1F1E                     	;# 
  3796  1F1F                     	;# 
  3797  1F20                     	;# 
  3798  1F21                     	;# 
  3799  1F22                     	;# 
  3800  1F23                     	;# 
  3801  1F24                     	;# 
  3802  1F25                     	;# 
  3803  1F26                     	;# 
  3804  1F27                     	;# 
  3805  1F28                     	;# 
  3806  1F29                     	;# 
  3807  1F2A                     	;# 
  3808  1F2B                     	;# 
  3809  1F2C                     	;# 
  3810  1F2D                     	;# 
  3811  1F2E                     	;# 
  3812  1F2F                     	;# 
  3813  1F30                     	;# 
  3814  1F31                     	;# 
  3815  1F32                     	;# 
  3816  1F38                     	;# 
  3817  1F39                     	;# 
  3818  1F3A                     	;# 
  3819  1F3B                     	;# 
  3820  1F3C                     	;# 
  3821  1F3D                     	;# 
  3822  1F3E                     	;# 
  3823  1F3F                     	;# 
  3824  1F40                     	;# 
  3825  1F41                     	;# 
  3826  1F43                     	;# 
  3827  1F44                     	;# 
  3828  1F45                     	;# 
  3829  1F46                     	;# 
  3830  1F47                     	;# 
  3831  1F48                     	;# 
  3832  1F49                     	;# 
  3833  1F4A                     	;# 
  3834  1F4B                     	;# 
  3835  1F4C                     	;# 
  3836  1F4E                     	;# 
  3837  1F4F                     	;# 
  3838  1F50                     	;# 
  3839  1F51                     	;# 
  3840  1F52                     	;# 
  3841  1F53                     	;# 
  3842  1F54                     	;# 
  3843  1F55                     	;# 
  3844  1F56                     	;# 
  3845  1F57                     	;# 
  3846  1F59                     	;# 
  3847  1F5A                     	;# 
  3848  1F5B                     	;# 
  3849  1F5C                     	;# 
  3850  1F5D                     	;# 
  3851  1F61                     	;# 
  3852  1F62                     	;# 
  3853  1F64                     	;# 
  3854  1F65                     	;# 
  3855  1F66                     	;# 
  3856  1F67                     	;# 
  3857  1F68                     	;# 
  3858  1F69                     	;# 
  3859  1F6A                     	;# 
  3860  1F6B                     	;# 
  3861  1F6C                     	;# 
  3862  1F6D                     	;# 
  3863  1FE4                     	;# 
  3864  1FE5                     	;# 
  3865  1FE6                     	;# 
  3866  1FE7                     	;# 
  3867  1FE8                     	;# 
  3868  1FE9                     	;# 
  3869  1FEA                     	;# 
  3870  1FEB                     	;# 
  3871  1FED                     	;# 
  3872  1FEE                     	;# 
  3873  1FEF                     	;# 
  3874  0000                     	;# 
  3875  0001                     	;# 
  3876  0002                     	;# 
  3877  0003                     	;# 
  3878  0004                     	;# 
  3879  0005                     	;# 
  3880  0006                     	;# 
  3881  0007                     	;# 
  3882  0008                     	;# 
  3883  0009                     	;# 
  3884  000A                     	;# 
  3885  000B                     	;# 
  3886  000C                     	;# 
  3887  000D                     	;# 
  3888  000E                     	;# 
  3889  000F                     	;# 
  3890  0010                     	;# 
  3891  0011                     	;# 
  3892  0012                     	;# 
  3893  0013                     	;# 
  3894  0014                     	;# 
  3895  0015                     	;# 
  3896  0016                     	;# 
  3897  0017                     	;# 
  3898  0018                     	;# 
  3899  0019                     	;# 
  3900  001A                     	;# 
  3901  001C                     	;# 
  3902  001C                     	;# 
  3903  001D                     	;# 
  3904  001D                     	;# 
  3905  001E                     	;# 
  3906  001F                     	;# 
  3907  008C                     	;# 
  3908  008C                     	;# 
  3909  008D                     	;# 
  3910  008E                     	;# 
  3911  008E                     	;# 
  3912  008F                     	;# 
  3913  0090                     	;# 
  3914  0090                     	;# 
  3915  0091                     	;# 
  3916  0093                     	;# 
  3917  0094                     	;# 
  3918  0095                     	;# 
  3919  0096                     	;# 
  3920  0097                     	;# 
  3921  0098                     	;# 
  3922  0099                     	;# 
  3923  009A                     	;# 
  3924  009B                     	;# 
  3925  009C                     	;# 
  3926  009D                     	;# 
  3927  009E                     	;# 
  3928  010C                     	;# 
  3929  010D                     	;# 
  3930  010E                     	;# 
  3931  010E                     	;# 
  3932  010F                     	;# 
  3933  0110                     	;# 
  3934  0110                     	;# 
  3935  0111                     	;# 
  3936  0112                     	;# 
  3937  0112                     	;# 
  3938  0113                     	;# 
  3939  0114                     	;# 
  3940  0114                     	;# 
  3941  0115                     	;# 
  3942  0116                     	;# 
  3943  0116                     	;# 
  3944  0117                     	;# 
  3945  0119                     	;# 
  3946  0119                     	;# 
  3947  0119                     	;# 
  3948  011A                     	;# 
  3949  011A                     	;# 
  3950  011A                     	;# 
  3951  011B                     	;# 
  3952  011B                     	;# 
  3953  011B                     	;# 
  3954  011B                     	;# 
  3955  011B                     	;# 
  3956  011C                     	;# 
  3957  011C                     	;# 
  3958  011C                     	;# 
  3959  011D                     	;# 
  3960  011D                     	;# 
  3961  011D                     	;# 
  3962  011E                     	;# 
  3963  011E                     	;# 
  3964  011E                     	;# 
  3965  011F                     	;# 
  3966  011F                     	;# 
  3967  011F                     	;# 
  3968  011F                     	;# 
  3969  011F                     	;# 
  3970  018C                     	;# 
  3971  018D                     	;# 
  3972  018E                     	;# 
  3973  018F                     	;# 
  3974  0190                     	;# 
  3975  0191                     	;# 
  3976  0192                     	;# 
  3977  0196                     	;# 
  3978  0197                     	;# 
  3979  0198                     	;# 
  3980  0199                     	;# 
  3981  019A                     	;# 
  3982  019B                     	;# 
  3983  019C                     	;# 
  3984  020C                     	;# 
  3985  020D                     	;# 
  3986  020E                     	;# 
  3987  020F                     	;# 
  3988  020F                     	;# 
  3989  0210                     	;# 
  3990  0210                     	;# 
  3991  0211                     	;# 
  3992  0211                     	;# 
  3993  0212                     	;# 
  3994  0213                     	;# 
  3995  0214                     	;# 
  3996  0215                     	;# 
  3997  0215                     	;# 
  3998  0216                     	;# 
  3999  0216                     	;# 
  4000  0217                     	;# 
  4001  0217                     	;# 
  4002  0218                     	;# 
  4003  0219                     	;# 
  4004  021A                     	;# 
  4005  021B                     	;# 
  4006  021B                     	;# 
  4007  021C                     	;# 
  4008  021C                     	;# 
  4009  021D                     	;# 
  4010  021D                     	;# 
  4011  021E                     	;# 
  4012  021F                     	;# 
  4013  028C                     	;# 
  4014  028C                     	;# 
  4015  028D                     	;# 
  4016  028D                     	;# 
  4017  028E                     	;# 
  4018  028F                     	;# 
  4019  0290                     	;# 
  4020  0290                     	;# 
  4021  0291                     	;# 
  4022  0292                     	;# 
  4023  0292                     	;# 
  4024  0293                     	;# 
  4025  0293                     	;# 
  4026  0294                     	;# 
  4027  0295                     	;# 
  4028  0296                     	;# 
  4029  0296                     	;# 
  4030  0297                     	;# 
  4031  0298                     	;# 
  4032  0298                     	;# 
  4033  0299                     	;# 
  4034  0299                     	;# 
  4035  029A                     	;# 
  4036  029B                     	;# 
  4037  029C                     	;# 
  4038  029C                     	;# 
  4039  029D                     	;# 
  4040  030C                     	;# 
  4041  030C                     	;# 
  4042  030D                     	;# 
  4043  030E                     	;# 
  4044  030F                     	;# 
  4045  0310                     	;# 
  4046  0310                     	;# 
  4047  0311                     	;# 
  4048  0312                     	;# 
  4049  0313                     	;# 
  4050  0314                     	;# 
  4051  0314                     	;# 
  4052  0315                     	;# 
  4053  0316                     	;# 
  4054  0317                     	;# 
  4055  0318                     	;# 
  4056  0318                     	;# 
  4057  0319                     	;# 
  4058  031A                     	;# 
  4059  031B                     	;# 
  4060  031C                     	;# 
  4061  031C                     	;# 
  4062  031D                     	;# 
  4063  031E                     	;# 
  4064  031F                     	;# 
  4065  038C                     	;# 
  4066  038D                     	;# 
  4067  038E                     	;# 
  4068  0390                     	;# 
  4069  0391                     	;# 
  4070  0392                     	;# 
  4071  040C                     	;# 
  4072  040D                     	;# 
  4073  040E                     	;# 
  4074  040F                     	;# 
  4075  0410                     	;# 
  4076  0411                     	;# 
  4077  0416                     	;# 
  4078  0416                     	;# 
  4079  0417                     	;# 
  4080  0418                     	;# 
  4081  0418                     	;# 
  4082  0419                     	;# 
  4083  041A                     	;# 
  4084  041A                     	;# 
  4085  041B                     	;# 
  4086  041C                     	;# 
  4087  041C                     	;# 
  4088  041D                     	;# 
  4089  041E                     	;# 
  4090  041F                     	;# 
  4091  048C                     	;# 
  4092  048C                     	;# 
  4093  048D                     	;# 
  4094  048E                     	;# 
  4095  048F                     	;# 
  4096  048F                     	;# 
  4097  0490                     	;# 
  4098  0491                     	;# 
  4099  0492                     	;# 
  4100  0492                     	;# 
  4101  0493                     	;# 
  4102  0494                     	;# 
  4103  0495                     	;# 
  4104  0495                     	;# 
  4105  0496                     	;# 
  4106  0497                     	;# 
  4107  0498                     	;# 
  4108  0499                     	;# 
  4109  049A                     	;# 
  4110  049B                     	;# 
  4111  049C                     	;# 
  4112  049D                     	;# 
  4113  050C                     	;# 
  4114  050C                     	;# 
  4115  050D                     	;# 
  4116  050E                     	;# 
  4117  050F                     	;# 
  4118  050F                     	;# 
  4119  0510                     	;# 
  4120  0511                     	;# 
  4121  0512                     	;# 
  4122  0512                     	;# 
  4123  0513                     	;# 
  4124  0514                     	;# 
  4125  0515                     	;# 
  4126  0515                     	;# 
  4127  0516                     	;# 
  4128  0517                     	;# 
  4129  0518                     	;# 
  4130  0519                     	;# 
  4131  051A                     	;# 
  4132  051B                     	;# 
  4133  051C                     	;# 
  4134  051D                     	;# 
  4135  058C                     	;# 
  4136  058C                     	;# 
  4137  058D                     	;# 
  4138  058E                     	;# 
  4139  058F                     	;# 
  4140  058F                     	;# 
  4141  0590                     	;# 
  4142  0591                     	;# 
  4143  0592                     	;# 
  4144  0593                     	;# 
  4145  060C                     	;# 
  4146  060D                     	;# 
  4147  060E                     	;# 
  4148  060F                     	;# 
  4149  0610                     	;# 
  4150  0611                     	;# 
  4151  0612                     	;# 
  4152  0613                     	;# 
  4153  0614                     	;# 
  4154  0616                     	;# 
  4155  0617                     	;# 
  4156  0618                     	;# 
  4157  0619                     	;# 
  4158  061A                     	;# 
  4159  061B                     	;# 
  4160  061C                     	;# 
  4161  061D                     	;# 
  4162  061E                     	;# 
  4163  068C                     	;# 
  4164  068D                     	;# 
  4165  068E                     	;# 
  4166  068F                     	;# 
  4167  0690                     	;# 
  4168  0691                     	;# 
  4169  0692                     	;# 
  4170  0693                     	;# 
  4171  0694                     	;# 
  4172  070C                     	;# 
  4173  070D                     	;# 
  4174  070E                     	;# 
  4175  070F                     	;# 
  4176  0710                     	;# 
  4177  0711                     	;# 
  4178  0712                     	;# 
  4179  0713                     	;# 
  4180  0714                     	;# 
  4181  0716                     	;# 
  4182  0717                     	;# 
  4183  0718                     	;# 
  4184  0719                     	;# 
  4185  071A                     	;# 
  4186  071B                     	;# 
  4187  071C                     	;# 
  4188  071D                     	;# 
  4189  071E                     	;# 
  4190  0796                     	;# 
  4191  0797                     	;# 
  4192  0798                     	;# 
  4193  0799                     	;# 
  4194  079A                     	;# 
  4195  079B                     	;# 
  4196  080C                     	;# 
  4197  080D                     	;# 
  4198  080E                     	;# 
  4199  080F                     	;# 
  4200  0810                     	;# 
  4201  0811                     	;# 
  4202  0812                     	;# 
  4203  0813                     	;# 
  4204  0814                     	;# 
  4205  081A                     	;# 
  4206  081B                     	;# 
  4207  081C                     	;# 
  4208  081D                     	;# 
  4209  081E                     	;# 
  4210  081F                     	;# 
  4211  088C                     	;# 
  4212  088D                     	;# 
  4213  088E                     	;# 
  4214  088F                     	;# 
  4215  0890                     	;# 
  4216  0891                     	;# 
  4217  0892                     	;# 
  4218  0893                     	;# 
  4219  0895                     	;# 
  4220  0896                     	;# 
  4221  0897                     	;# 
  4222  0898                     	;# 
  4223  0899                     	;# 
  4224  089A                     	;# 
  4225  089B                     	;# 
  4226  090C                     	;# 
  4227  090E                     	;# 
  4228  090F                     	;# 
  4229  091F                     	;# 
  4230  098F                     	;# 
  4231  098F                     	;# 
  4232  0990                     	;# 
  4233  0991                     	;# 
  4234  0992                     	;# 
  4235  0993                     	;# 
  4236  0994                     	;# 
  4237  0995                     	;# 
  4238  0996                     	;# 
  4239  0997                     	;# 
  4240  1E0F                     	;# 
  4241  1E10                     	;# 
  4242  1E11                     	;# 
  4243  1E12                     	;# 
  4244  1E13                     	;# 
  4245  1E14                     	;# 
  4246  1E15                     	;# 
  4247  1E16                     	;# 
  4248  1E17                     	;# 
  4249  1E18                     	;# 
  4250  1E19                     	;# 
  4251  1E1A                     	;# 
  4252  1E1B                     	;# 
  4253  1E1C                     	;# 
  4254  1E1D                     	;# 
  4255  1E1E                     	;# 
  4256  1E1F                     	;# 
  4257  1E20                     	;# 
  4258  1E21                     	;# 
  4259  1E22                     	;# 
  4260  1E23                     	;# 
  4261  1E24                     	;# 
  4262  1E25                     	;# 
  4263  1E26                     	;# 
  4264  1E27                     	;# 
  4265  1E28                     	;# 
  4266  1E29                     	;# 
  4267  1E2A                     	;# 
  4268  1E2B                     	;# 
  4269  1E2C                     	;# 
  4270  1E2D                     	;# 
  4271  1E2E                     	;# 
  4272  1E2F                     	;# 
  4273  1E30                     	;# 
  4274  1E31                     	;# 
  4275  1E32                     	;# 
  4276  1E33                     	;# 
  4277  1E34                     	;# 
  4278  1E35                     	;# 
  4279  1E36                     	;# 
  4280  1E37                     	;# 
  4281  1E8F                     	;# 
  4282  1E90                     	;# 
  4283  1E91                     	;# 
  4284  1E92                     	;# 
  4285  1E93                     	;# 
  4286  1E94                     	;# 
  4287  1E95                     	;# 
  4288  1E96                     	;# 
  4289  1E97                     	;# 
  4290  1E9C                     	;# 
  4291  1E9D                     	;# 
  4292  1E9E                     	;# 
  4293  1EA1                     	;# 
  4294  1EA2                     	;# 
  4295  1EA3                     	;# 
  4296  1EA4                     	;# 
  4297  1EA5                     	;# 
  4298  1EA9                     	;# 
  4299  1EAA                     	;# 
  4300  1EAB                     	;# 
  4301  1EAC                     	;# 
  4302  1EB1                     	;# 
  4303  1EB2                     	;# 
  4304  1EB3                     	;# 
  4305  1EB8                     	;# 
  4306  1EB9                     	;# 
  4307  1EBA                     	;# 
  4308  1EBB                     	;# 
  4309  1EBC                     	;# 
  4310  1EBD                     	;# 
  4311  1EBE                     	;# 
  4312  1EC3                     	;# 
  4313  1EC5                     	;# 
  4314  1EC6                     	;# 
  4315  1EC7                     	;# 
  4316  1EC8                     	;# 
  4317  1EC9                     	;# 
  4318  1ECA                     	;# 
  4319  1ECB                     	;# 
  4320  1ECC                     	;# 
  4321  1F10                     	;# 
  4322  1F11                     	;# 
  4323  1F12                     	;# 
  4324  1F13                     	;# 
  4325  1F14                     	;# 
  4326  1F15                     	;# 
  4327  1F16                     	;# 
  4328  1F17                     	;# 
  4329  1F18                     	;# 
  4330  1F19                     	;# 
  4331  1F1A                     	;# 
  4332  1F1B                     	;# 
  4333  1F1C                     	;# 
  4334  1F1D                     	;# 
  4335  1F1E                     	;# 
  4336  1F1F                     	;# 
  4337  1F20                     	;# 
  4338  1F21                     	;# 
  4339  1F22                     	;# 
  4340  1F23                     	;# 
  4341  1F24                     	;# 
  4342  1F25                     	;# 
  4343  1F26                     	;# 
  4344  1F27                     	;# 
  4345  1F28                     	;# 
  4346  1F29                     	;# 
  4347  1F2A                     	;# 
  4348  1F2B                     	;# 
  4349  1F2C                     	;# 
  4350  1F2D                     	;# 
  4351  1F2E                     	;# 
  4352  1F2F                     	;# 
  4353  1F30                     	;# 
  4354  1F31                     	;# 
  4355  1F32                     	;# 
  4356  1F38                     	;# 
  4357  1F39                     	;# 
  4358  1F3A                     	;# 
  4359  1F3B                     	;# 
  4360  1F3C                     	;# 
  4361  1F3D                     	;# 
  4362  1F3E                     	;# 
  4363  1F3F                     	;# 
  4364  1F40                     	;# 
  4365  1F41                     	;# 
  4366  1F43                     	;# 
  4367  1F44                     	;# 
  4368  1F45                     	;# 
  4369  1F46                     	;# 
  4370  1F47                     	;# 
  4371  1F48                     	;# 
  4372  1F49                     	;# 
  4373  1F4A                     	;# 
  4374  1F4B                     	;# 
  4375  1F4C                     	;# 
  4376  1F4E                     	;# 
  4377  1F4F                     	;# 
  4378  1F50                     	;# 
  4379  1F51                     	;# 
  4380  1F52                     	;# 
  4381  1F53                     	;# 
  4382  1F54                     	;# 
  4383  1F55                     	;# 
  4384  1F56                     	;# 
  4385  1F57                     	;# 
  4386  1F59                     	;# 
  4387  1F5A                     	;# 
  4388  1F5B                     	;# 
  4389  1F5C                     	;# 
  4390  1F5D                     	;# 
  4391  1F61                     	;# 
  4392  1F62                     	;# 
  4393  1F64                     	;# 
  4394  1F65                     	;# 
  4395  1F66                     	;# 
  4396  1F67                     	;# 
  4397  1F68                     	;# 
  4398  1F69                     	;# 
  4399  1F6A                     	;# 
  4400  1F6B                     	;# 
  4401  1F6C                     	;# 
  4402  1F6D                     	;# 
  4403  1FE4                     	;# 
  4404  1FE5                     	;# 
  4405  1FE6                     	;# 
  4406  1FE7                     	;# 
  4407  1FE8                     	;# 
  4408  1FE9                     	;# 
  4409  1FEA                     	;# 
  4410  1FEB                     	;# 
  4411  1FED                     	;# 
  4412  1FEE                     	;# 
  4413  1FEF                     	;# 
  4414  0000                     	;# 
  4415  0001                     	;# 
  4416  0002                     	;# 
  4417  0003                     	;# 
  4418  0004                     	;# 
  4419  0005                     	;# 
  4420  0006                     	;# 
  4421  0007                     	;# 
  4422  0008                     	;# 
  4423  0009                     	;# 
  4424  000A                     	;# 
  4425  000B                     	;# 
  4426  000C                     	;# 
  4427  000D                     	;# 
  4428  000E                     	;# 
  4429  000F                     	;# 
  4430  0010                     	;# 
  4431  0011                     	;# 
  4432  0012                     	;# 
  4433  0013                     	;# 
  4434  0014                     	;# 
  4435  0015                     	;# 
  4436  0016                     	;# 
  4437  0017                     	;# 
  4438  0018                     	;# 
  4439  0019                     	;# 
  4440  001A                     	;# 
  4441  001C                     	;# 
  4442  001C                     	;# 
  4443  001D                     	;# 
  4444  001D                     	;# 
  4445  001E                     	;# 
  4446  001F                     	;# 
  4447  008C                     	;# 
  4448  008C                     	;# 
  4449  008D                     	;# 
  4450  008E                     	;# 
  4451  008E                     	;# 
  4452  008F                     	;# 
  4453  0090                     	;# 
  4454  0090                     	;# 
  4455  0091                     	;# 
  4456  0093                     	;# 
  4457  0094                     	;# 
  4458  0095                     	;# 
  4459  0096                     	;# 
  4460  0097                     	;# 
  4461  0098                     	;# 
  4462  0099                     	;# 
  4463  009A                     	;# 
  4464  009B                     	;# 
  4465  009C                     	;# 
  4466  009D                     	;# 
  4467  009E                     	;# 
  4468  010C                     	;# 
  4469  010D                     	;# 
  4470  010E                     	;# 
  4471  010E                     	;# 
  4472  010F                     	;# 
  4473  0110                     	;# 
  4474  0110                     	;# 
  4475  0111                     	;# 
  4476  0112                     	;# 
  4477  0112                     	;# 
  4478  0113                     	;# 
  4479  0114                     	;# 
  4480  0114                     	;# 
  4481  0115                     	;# 
  4482  0116                     	;# 
  4483  0116                     	;# 
  4484  0117                     	;# 
  4485  0119                     	;# 
  4486  0119                     	;# 
  4487  0119                     	;# 
  4488  011A                     	;# 
  4489  011A                     	;# 
  4490  011A                     	;# 
  4491  011B                     	;# 
  4492  011B                     	;# 
  4493  011B                     	;# 
  4494  011B                     	;# 
  4495  011B                     	;# 
  4496  011C                     	;# 
  4497  011C                     	;# 
  4498  011C                     	;# 
  4499  011D                     	;# 
  4500  011D                     	;# 
  4501  011D                     	;# 
  4502  011E                     	;# 
  4503  011E                     	;# 
  4504  011E                     	;# 
  4505  011F                     	;# 
  4506  011F                     	;# 
  4507  011F                     	;# 
  4508  011F                     	;# 
  4509  011F                     	;# 
  4510  018C                     	;# 
  4511  018D                     	;# 
  4512  018E                     	;# 
  4513  018F                     	;# 
  4514  0190                     	;# 
  4515  0191                     	;# 
  4516  0192                     	;# 
  4517  0196                     	;# 
  4518  0197                     	;# 
  4519  0198                     	;# 
  4520  0199                     	;# 
  4521  019A                     	;# 
  4522  019B                     	;# 
  4523  019C                     	;# 
  4524  020C                     	;# 
  4525  020D                     	;# 
  4526  020E                     	;# 
  4527  020F                     	;# 
  4528  020F                     	;# 
  4529  0210                     	;# 
  4530  0210                     	;# 
  4531  0211                     	;# 
  4532  0211                     	;# 
  4533  0212                     	;# 
  4534  0213                     	;# 
  4535  0214                     	;# 
  4536  0215                     	;# 
  4537  0215                     	;# 
  4538  0216                     	;# 
  4539  0216                     	;# 
  4540  0217                     	;# 
  4541  0217                     	;# 
  4542  0218                     	;# 
  4543  0219                     	;# 
  4544  021A                     	;# 
  4545  021B                     	;# 
  4546  021B                     	;# 
  4547  021C                     	;# 
  4548  021C                     	;# 
  4549  021D                     	;# 
  4550  021D                     	;# 
  4551  021E                     	;# 
  4552  021F                     	;# 
  4553  028C                     	;# 
  4554  028C                     	;# 
  4555  028D                     	;# 
  4556  028D                     	;# 
  4557  028E                     	;# 
  4558  028F                     	;# 
  4559  0290                     	;# 
  4560  0290                     	;# 
  4561  0291                     	;# 
  4562  0292                     	;# 
  4563  0292                     	;# 
  4564  0293                     	;# 
  4565  0293                     	;# 
  4566  0294                     	;# 
  4567  0295                     	;# 
  4568  0296                     	;# 
  4569  0296                     	;# 
  4570  0297                     	;# 
  4571  0298                     	;# 
  4572  0298                     	;# 
  4573  0299                     	;# 
  4574  0299                     	;# 
  4575  029A                     	;# 
  4576  029B                     	;# 
  4577  029C                     	;# 
  4578  029C                     	;# 
  4579  029D                     	;# 
  4580  030C                     	;# 
  4581  030C                     	;# 
  4582  030D                     	;# 
  4583  030E                     	;# 
  4584  030F                     	;# 
  4585  0310                     	;# 
  4586  0310                     	;# 
  4587  0311                     	;# 
  4588  0312                     	;# 
  4589  0313                     	;# 
  4590  0314                     	;# 
  4591  0314                     	;# 
  4592  0315                     	;# 
  4593  0316                     	;# 
  4594  0317                     	;# 
  4595  0318                     	;# 
  4596  0318                     	;# 
  4597  0319                     	;# 
  4598  031A                     	;# 
  4599  031B                     	;# 
  4600  031C                     	;# 
  4601  031C                     	;# 
  4602  031D                     	;# 
  4603  031E                     	;# 
  4604  031F                     	;# 
  4605  038C                     	;# 
  4606  038D                     	;# 
  4607  038E                     	;# 
  4608  0390                     	;# 
  4609  0391                     	;# 
  4610  0392                     	;# 
  4611  040C                     	;# 
  4612  040D                     	;# 
  4613  040E                     	;# 
  4614  040F                     	;# 
  4615  0410                     	;# 
  4616  0411                     	;# 
  4617  0416                     	;# 
  4618  0416                     	;# 
  4619  0417                     	;# 
  4620  0418                     	;# 
  4621  0418                     	;# 
  4622  0419                     	;# 
  4623  041A                     	;# 
  4624  041A                     	;# 
  4625  041B                     	;# 
  4626  041C                     	;# 
  4627  041C                     	;# 
  4628  041D                     	;# 
  4629  041E                     	;# 
  4630  041F                     	;# 
  4631  048C                     	;# 
  4632  048C                     	;# 
  4633  048D                     	;# 
  4634  048E                     	;# 
  4635  048F                     	;# 
  4636  048F                     	;# 
  4637  0490                     	;# 
  4638  0491                     	;# 
  4639  0492                     	;# 
  4640  0492                     	;# 
  4641  0493                     	;# 
  4642  0494                     	;# 
  4643  0495                     	;# 
  4644  0495                     	;# 
  4645  0496                     	;# 
  4646  0497                     	;# 
  4647  0498                     	;# 
  4648  0499                     	;# 
  4649  049A                     	;# 
  4650  049B                     	;# 
  4651  049C                     	;# 
  4652  049D                     	;# 
  4653  050C                     	;# 
  4654  050C                     	;# 
  4655  050D                     	;# 
  4656  050E                     	;# 
  4657  050F                     	;# 
  4658  050F                     	;# 
  4659  0510                     	;# 
  4660  0511                     	;# 
  4661  0512                     	;# 
  4662  0512                     	;# 
  4663  0513                     	;# 
  4664  0514                     	;# 
  4665  0515                     	;# 
  4666  0515                     	;# 
  4667  0516                     	;# 
  4668  0517                     	;# 
  4669  0518                     	;# 
  4670  0519                     	;# 
  4671  051A                     	;# 
  4672  051B                     	;# 
  4673  051C                     	;# 
  4674  051D                     	;# 
  4675  058C                     	;# 
  4676  058C                     	;# 
  4677  058D                     	;# 
  4678  058E                     	;# 
  4679  058F                     	;# 
  4680  058F                     	;# 
  4681  0590                     	;# 
  4682  0591                     	;# 
  4683  0592                     	;# 
  4684  0593                     	;# 
  4685  060C                     	;# 
  4686  060D                     	;# 
  4687  060E                     	;# 
  4688  060F                     	;# 
  4689  0610                     	;# 
  4690  0611                     	;# 
  4691  0612                     	;# 
  4692  0613                     	;# 
  4693  0614                     	;# 
  4694  0616                     	;# 
  4695  0617                     	;# 
  4696  0618                     	;# 
  4697  0619                     	;# 
  4698  061A                     	;# 
  4699  061B                     	;# 
  4700  061C                     	;# 
  4701  061D                     	;# 
  4702  061E                     	;# 
  4703  068C                     	;# 
  4704  068D                     	;# 
  4705  068E                     	;# 
  4706  068F                     	;# 
  4707  0690                     	;# 
  4708  0691                     	;# 
  4709  0692                     	;# 
  4710  0693                     	;# 
  4711  0694                     	;# 
  4712  070C                     	;# 
  4713  070D                     	;# 
  4714  070E                     	;# 
  4715  070F                     	;# 
  4716  0710                     	;# 
  4717  0711                     	;# 
  4718  0712                     	;# 
  4719  0713                     	;# 
  4720  0714                     	;# 
  4721  0716                     	;# 
  4722  0717                     	;# 
  4723  0718                     	;# 
  4724  0719                     	;# 
  4725  071A                     	;# 
  4726  071B                     	;# 
  4727  071C                     	;# 
  4728  071D                     	;# 
  4729  071E                     	;# 
  4730  0796                     	;# 
  4731  0797                     	;# 
  4732  0798                     	;# 
  4733  0799                     	;# 
  4734  079A                     	;# 
  4735  079B                     	;# 
  4736  080C                     	;# 
  4737  080D                     	;# 
  4738  080E                     	;# 
  4739  080F                     	;# 
  4740  0810                     	;# 
  4741  0811                     	;# 
  4742  0812                     	;# 
  4743  0813                     	;# 
  4744  0814                     	;# 
  4745  081A                     	;# 
  4746  081B                     	;# 
  4747  081C                     	;# 
  4748  081D                     	;# 
  4749  081E                     	;# 
  4750  081F                     	;# 
  4751  088C                     	;# 
  4752  088D                     	;# 
  4753  088E                     	;# 
  4754  088F                     	;# 
  4755  0890                     	;# 
  4756  0891                     	;# 
  4757  0892                     	;# 
  4758  0893                     	;# 
  4759  0895                     	;# 
  4760  0896                     	;# 
  4761  0897                     	;# 
  4762  0898                     	;# 
  4763  0899                     	;# 
  4764  089A                     	;# 
  4765  089B                     	;# 
  4766  090C                     	;# 
  4767  090E                     	;# 
  4768  090F                     	;# 
  4769  091F                     	;# 
  4770  098F                     	;# 
  4771  098F                     	;# 
  4772  0990                     	;# 
  4773  0991                     	;# 
  4774  0992                     	;# 
  4775  0993                     	;# 
  4776  0994                     	;# 
  4777  0995                     	;# 
  4778  0996                     	;# 
  4779  0997                     	;# 
  4780  1E0F                     	;# 
  4781  1E10                     	;# 
  4782  1E11                     	;# 
  4783  1E12                     	;# 
  4784  1E13                     	;# 
  4785  1E14                     	;# 
  4786  1E15                     	;# 
  4787  1E16                     	;# 
  4788  1E17                     	;# 
  4789  1E18                     	;# 
  4790  1E19                     	;# 
  4791  1E1A                     	;# 
  4792  1E1B                     	;# 
  4793  1E1C                     	;# 
  4794  1E1D                     	;# 
  4795  1E1E                     	;# 
  4796  1E1F                     	;# 
  4797  1E20                     	;# 
  4798  1E21                     	;# 
  4799  1E22                     	;# 
  4800  1E23                     	;# 
  4801  1E24                     	;# 
  4802  1E25                     	;# 
  4803  1E26                     	;# 
  4804  1E27                     	;# 
  4805  1E28                     	;# 
  4806  1E29                     	;# 
  4807  1E2A                     	;# 
  4808  1E2B                     	;# 
  4809  1E2C                     	;# 
  4810  1E2D                     	;# 
  4811  1E2E                     	;# 
  4812  1E2F                     	;# 
  4813  1E30                     	;# 
  4814  1E31                     	;# 
  4815  1E32                     	;# 
  4816  1E33                     	;# 
  4817  1E34                     	;# 
  4818  1E35                     	;# 
  4819  1E36                     	;# 
  4820  1E37                     	;# 
  4821  1E8F                     	;# 
  4822  1E90                     	;# 
  4823  1E91                     	;# 
  4824  1E92                     	;# 
  4825  1E93                     	;# 
  4826  1E94                     	;# 
  4827  1E95                     	;# 
  4828  1E96                     	;# 
  4829  1E97                     	;# 
  4830  1E9C                     	;# 
  4831  1E9D                     	;# 
  4832  1E9E                     	;# 
  4833  1EA1                     	;# 
  4834  1EA2                     	;# 
  4835  1EA3                     	;# 
  4836  1EA4                     	;# 
  4837  1EA5                     	;# 
  4838  1EA9                     	;# 
  4839  1EAA                     	;# 
  4840  1EAB                     	;# 
  4841  1EAC                     	;# 
  4842  1EB1                     	;# 
  4843  1EB2                     	;# 
  4844  1EB3                     	;# 
  4845  1EB8                     	;# 
  4846  1EB9                     	;# 
  4847  1EBA                     	;# 
  4848  1EBB                     	;# 
  4849  1EBC                     	;# 
  4850  1EBD                     	;# 
  4851  1EBE                     	;# 
  4852  1EC3                     	;# 
  4853  1EC5                     	;# 
  4854  1EC6                     	;# 
  4855  1EC7                     	;# 
  4856  1EC8                     	;# 
  4857  1EC9                     	;# 
  4858  1ECA                     	;# 
  4859  1ECB                     	;# 
  4860  1ECC                     	;# 
  4861  1F10                     	;# 
  4862  1F11                     	;# 
  4863  1F12                     	;# 
  4864  1F13                     	;# 
  4865  1F14                     	;# 
  4866  1F15                     	;# 
  4867  1F16                     	;# 
  4868  1F17                     	;# 
  4869  1F18                     	;# 
  4870  1F19                     	;# 
  4871  1F1A                     	;# 
  4872  1F1B                     	;# 
  4873  1F1C                     	;# 
  4874  1F1D                     	;# 
  4875  1F1E                     	;# 
  4876  1F1F                     	;# 
  4877  1F20                     	;# 
  4878  1F21                     	;# 
  4879  1F22                     	;# 
  4880  1F23                     	;# 
  4881  1F24                     	;# 
  4882  1F25                     	;# 
  4883  1F26                     	;# 
  4884  1F27                     	;# 
  4885  1F28                     	;# 
  4886  1F29                     	;# 
  4887  1F2A                     	;# 
  4888  1F2B                     	;# 
  4889  1F2C                     	;# 
  4890  1F2D                     	;# 
  4891  1F2E                     	;# 
  4892  1F2F                     	;# 
  4893  1F30                     	;# 
  4894  1F31                     	;# 
  4895  1F32                     	;# 
  4896  1F38                     	;# 
  4897  1F39                     	;# 
  4898  1F3A                     	;# 
  4899  1F3B                     	;# 
  4900  1F3C                     	;# 
  4901  1F3D                     	;# 
  4902  1F3E                     	;# 
  4903  1F3F                     	;# 
  4904  1F40                     	;# 
  4905  1F41                     	;# 
  4906  1F43                     	;# 
  4907  1F44                     	;# 
  4908  1F45                     	;# 
  4909  1F46                     	;# 
  4910  1F47                     	;# 
  4911  1F48                     	;# 
  4912  1F49                     	;# 
  4913  1F4A                     	;# 
  4914  1F4B                     	;# 
  4915  1F4C                     	;# 
  4916  1F4E                     	;# 
  4917  1F4F                     	;# 
  4918  1F50                     	;# 
  4919  1F51                     	;# 
  4920  1F52                     	;# 
  4921  1F53                     	;# 
  4922  1F54                     	;# 
  4923  1F55                     	;# 
  4924  1F56                     	;# 
  4925  1F57                     	;# 
  4926  1F59                     	;# 
  4927  1F5A                     	;# 
  4928  1F5B                     	;# 
  4929  1F5C                     	;# 
  4930  1F5D                     	;# 
  4931  1F61                     	;# 
  4932  1F62                     	;# 
  4933  1F64                     	;# 
  4934  1F65                     	;# 
  4935  1F66                     	;# 
  4936  1F67                     	;# 
  4937  1F68                     	;# 
  4938  1F69                     	;# 
  4939  1F6A                     	;# 
  4940  1F6B                     	;# 
  4941  1F6C                     	;# 
  4942  1F6D                     	;# 
  4943  1FE4                     	;# 
  4944  1FE5                     	;# 
  4945  1FE6                     	;# 
  4946  1FE7                     	;# 
  4947  1FE8                     	;# 
  4948  1FE9                     	;# 
  4949  1FEA                     	;# 
  4950  1FEB                     	;# 
  4951  1FED                     	;# 
  4952  1FEE                     	;# 
  4953  1FEF                     	;# 
  4954                           
  4955                           	psect	idataBANK1
  4956  07FF                     __pidataBANK1:	
  4957                           
  4958                           ;initializer for _entering
  4959  07FF  3401               	retlw	1
  4960                           
  4961                           	psect	stringtext
  4962  1000                     __pstringtext:	
  4963  1000                     _charset:	
  4964  1000  3400               	retlw	0
  4965  1001  3400               	retlw	0
  4966  1002  3400               	retlw	0
  4967  1003  3400               	retlw	0
  4968  1004  3400               	retlw	0
  4969  1005  3400               	retlw	0
  4970  1006  3400               	retlw	0
  4971  1007  3400               	retlw	0
  4972  1008  3400               	retlw	0
  4973  1009  3400               	retlw	0
  4974  100A  3400               	retlw	0
  4975  100B  3400               	retlw	0
  4976  100C  3400               	retlw	0
  4977  100D  3400               	retlw	0
  4978  100E  3400               	retlw	0
  4979  100F  3400               	retlw	0
  4980  1010  3400               	retlw	0
  4981  1011  3400               	retlw	0
  4982  1012  3400               	retlw	0
  4983  1013  3400               	retlw	0
  4984  1014  3400               	retlw	0
  4985  1015  3400               	retlw	0
  4986  1016  3400               	retlw	0
  4987  1017  3400               	retlw	0
  4988  1018  3400               	retlw	0
  4989  1019  3400               	retlw	0
  4990  101A  3400               	retlw	0
  4991  101B  3400               	retlw	0
  4992  101C  3400               	retlw	0
  4993  101D  3400               	retlw	0
  4994  101E  3400               	retlw	0
  4995  101F  3400               	retlw	0
  4996  1020  3400               	retlw	0
  4997  1021  3486               	retlw	134
  4998  1022  3422               	retlw	34
  4999  1023  3400               	retlw	0
  5000  1024  3400               	retlw	0
  5001  1025  3400               	retlw	0
  5002  1026  3400               	retlw	0
  5003  1027  3420               	retlw	32
  5004  1028  3439               	retlw	57
  5005  1029  340F               	retlw	15
  5006  102A  3463               	retlw	99
  5007  102B  3400               	retlw	0
  5008  102C  3400               	retlw	0
  5009  102D  3440               	retlw	64
  5010  102E  3480               	retlw	128
  5011  102F  3452               	retlw	82
  5012  1030  343F               	retlw	63
  5013  1031  3406               	retlw	6
  5014  1032  345B               	retlw	91
  5015  1033  344F               	retlw	79
  5016  1034  3466               	retlw	102
  5017  1035  346D               	retlw	109
  5018  1036  347D               	retlw	125
  5019  1037  3407               	retlw	7
  5020  1038  347F               	retlw	127
  5021  1039  346F               	retlw	111
  5022  103A  3409               	retlw	9
  5023  103B  3400               	retlw	0
  5024  103C  3458               	retlw	88
  5025  103D  3448               	retlw	72
  5026  103E  344C               	retlw	76
  5027  103F  3487               	retlw	135
  5028  1040  3400               	retlw	0
  5029  1041  3477               	retlw	119
  5030  1042  347C               	retlw	124
  5031  1043  3439               	retlw	57
  5032  1044  345E               	retlw	94
  5033  1045  3479               	retlw	121
  5034  1046  3471               	retlw	113
  5035  1047  343D               	retlw	61
  5036  1048  3474               	retlw	116
  5037  1049  3404               	retlw	4
  5038  104A  340E               	retlw	14
  5039  104B  3475               	retlw	117
  5040  104C  3430               	retlw	48
  5041  104D  3437               	retlw	55
  5042  104E  3454               	retlw	84
  5043  104F  345C               	retlw	92
  5044  1050  3473               	retlw	115
  5045  1051  3467               	retlw	103
  5046  1052  3450               	retlw	80
  5047  1053  346D               	retlw	109
  5048  1054  3478               	retlw	120
  5049  1055  341C               	retlw	28
  5050  1056  342A               	retlw	42
  5051  1057  346A               	retlw	106
  5052  1058  3436               	retlw	54
  5053  1059  3466               	retlw	102
  5054  105A  345B               	retlw	91
  5055  105B  3439               	retlw	57
  5056  105C  3464               	retlw	100
  5057  105D  340F               	retlw	15
  5058  105E  3423               	retlw	35
  5059  105F  3408               	retlw	8
  5060  1060  3402               	retlw	2
  5061  1061  3477               	retlw	119
  5062  1062  347C               	retlw	124
  5063  1063  3439               	retlw	57
  5064  1064  345E               	retlw	94
  5065  1065  3479               	retlw	121
  5066  1066  3471               	retlw	113
  5067  1067  343D               	retlw	61
  5068  1068  3474               	retlw	116
  5069  1069  3404               	retlw	4
  5070  106A  340E               	retlw	14
  5071  106B  3475               	retlw	117
  5072  106C  3430               	retlw	48
  5073  106D  3437               	retlw	55
  5074  106E  3454               	retlw	84
  5075  106F  345C               	retlw	92
  5076  1070  3473               	retlw	115
  5077  1071  3467               	retlw	103
  5078  1072  3450               	retlw	80
  5079  1073  346D               	retlw	109
  5080  1074  3478               	retlw	120
  5081  1075  341C               	retlw	28
  5082  1076  342A               	retlw	42
  5083  1077  346A               	retlw	106
  5084  1078  3436               	retlw	54
  5085  1079  3466               	retlw	102
  5086  107A  345B               	retlw	91
  5087  107B  3439               	retlw	57
  5088  107C  3406               	retlw	6
  5089  107D  340F               	retlw	15
  5090  107E  3401               	retlw	1
  5091  107F  34FF               	retlw	255
  5092  1080                     __end_of_charset:	
  5093  1080                     _dpowers:	
  5094  1080  3401               	retlw	1
  5095  1081  3400               	retlw	0
  5096  1082  3400               	retlw	0
  5097  1083  3400               	retlw	0
  5098  1084  340A               	retlw	10
  5099  1085  3400               	retlw	0
  5100  1086  3400               	retlw	0
  5101  1087  3400               	retlw	0
  5102  1088  3464               	retlw	100
  5103  1089  3400               	retlw	0
  5104  108A  3400               	retlw	0
  5105  108B  3400               	retlw	0
  5106  108C  34E8               	retlw	232
  5107  108D  3403               	retlw	3
  5108  108E  3400               	retlw	0
  5109  108F  3400               	retlw	0
  5110  1090  3410               	retlw	16
  5111  1091  3427               	retlw	39
  5112  1092  3400               	retlw	0
  5113  1093  3400               	retlw	0
  5114  1094  34A0               	retlw	160
  5115  1095  3486               	retlw	134
  5116  1096  3401               	retlw	1
  5117  1097  3400               	retlw	0
  5118  1098  3440               	retlw	64
  5119  1099  3442               	retlw	66
  5120  109A  340F               	retlw	15
  5121  109B  3400               	retlw	0
  5122  109C  3480               	retlw	128
  5123  109D  3496               	retlw	150
  5124  109E  3498               	retlw	152
  5125  109F  3400               	retlw	0
  5126  10A0  3400               	retlw	0
  5127  10A1  34E1               	retlw	225
  5128  10A2  34F5               	retlw	245
  5129  10A3  3405               	retlw	5
  5130  10A4  3400               	retlw	0
  5131  10A5  34CA               	retlw	202
  5132  10A6  349A               	retlw	154
  5133  10A7  343B               	retlw	59
  5134  10A8                     __end_of_dpowers:	
  5135  10A8                     __npowers_:	
  5136  10A8  3400               	retlw	0
  5137  10A9  3480               	retlw	128
  5138  10AA  343F               	retlw	63
  5139  10AB  34CD               	retlw	205
  5140  10AC  34CC               	retlw	204
  5141  10AD  343D               	retlw	61
  5142  10AE  34D7               	retlw	215
  5143  10AF  3423               	retlw	35
  5144  10B0  343C               	retlw	60
  5145  10B1  3412               	retlw	18
  5146  10B2  3483               	retlw	131
  5147  10B3  343A               	retlw	58
  5148  10B4  34B7               	retlw	183
  5149  10B5  34D1               	retlw	209
  5150  10B6  3438               	retlw	56
  5151  10B7  34C6               	retlw	198
  5152  10B8  3427               	retlw	39
  5153  10B9  3437               	retlw	55
  5154  10BA  3438               	retlw	56
  5155  10BB  3486               	retlw	134
  5156  10BC  3435               	retlw	53
  5157  10BD  34C0               	retlw	192
  5158  10BE  34D6               	retlw	214
  5159  10BF  3433               	retlw	51
  5160  10C0  34CC               	retlw	204
  5161  10C1  342B               	retlw	43
  5162  10C2  3432               	retlw	50
  5163  10C3  3470               	retlw	112
  5164  10C4  3489               	retlw	137
  5165  10C5  3430               	retlw	48
  5166  10C6  34E7               	retlw	231
  5167  10C7  34DB               	retlw	219
  5168  10C8  342E               	retlw	46
  5169  10C9  34E5               	retlw	229
  5170  10CA  343C               	retlw	60
  5171  10CB  341E               	retlw	30
  5172  10CC  3442               	retlw	66
  5173  10CD  34A2               	retlw	162
  5174  10CE  340D               	retlw	13
  5175  10CF                     __end_of__npowers_:	
  5176  10CF                     __powers_:	
  5177  10CF  3400               	retlw	0
  5178  10D0  3480               	retlw	128
  5179  10D1  343F               	retlw	63
  5180  10D2  3400               	retlw	0
  5181  10D3  3420               	retlw	32
  5182  10D4  3441               	retlw	65
  5183  10D5  3400               	retlw	0
  5184  10D6  34C8               	retlw	200
  5185  10D7  3442               	retlw	66
  5186  10D8  3400               	retlw	0
  5187  10D9  347A               	retlw	122
  5188  10DA  3444               	retlw	68
  5189  10DB  3440               	retlw	64
  5190  10DC  341C               	retlw	28
  5191  10DD  3446               	retlw	70
  5192  10DE  3450               	retlw	80
  5193  10DF  34C3               	retlw	195
  5194  10E0  3447               	retlw	71
  5195  10E1  3424               	retlw	36
  5196  10E2  3474               	retlw	116
  5197  10E3  3449               	retlw	73
  5198  10E4  3497               	retlw	151
  5199  10E5  3418               	retlw	24
  5200  10E6  344B               	retlw	75
  5201  10E7  34BC               	retlw	188
  5202  10E8  34BE               	retlw	190
  5203  10E9  344C               	retlw	76
  5204  10EA  346B               	retlw	107
  5205  10EB  346E               	retlw	110
  5206  10EC  344E               	retlw	78
  5207  10ED  3403               	retlw	3
  5208  10EE  3415               	retlw	21
  5209  10EF  3450               	retlw	80
  5210  10F0  3479               	retlw	121
  5211  10F1  34AD               	retlw	173
  5212  10F2  3460               	retlw	96
  5213  10F3  34F3               	retlw	243
  5214  10F4  3449               	retlw	73
  5215  10F5  3471               	retlw	113
  5216  10F6                     __end_of__powers_:	
  5217  10F6                     STR_8:	
  5218  10F6  3472               	retlw	114	;'r'
  5219  10F7  3465               	retlw	101	;'e'
  5220  10F8  3473               	retlw	115	;'s'
  5221  10F9  346D               	retlw	109	;'m'
  5222  10FA  3465               	retlw	101	;'e'
  5223  10FB  3474               	retlw	116	;'t'
  5224  10FC  3465               	retlw	101	;'e'
  5225  10FD  3472               	retlw	114	;'r'
  5226  10FE  345F               	retlw	95	;'_'
  5227  10FF  3473               	retlw	115	;'s'
  5228  1100  3474               	retlw	116	;'t'
  5229  1101  3461               	retlw	97	;'a'
  5230  1102  3474               	retlw	116	;'t'
  5231  1103  3465               	retlw	101	;'e'
  5232  1104  3400               	retlw	0
  5233  1105                     STR_6:	
  5234  1105  3425               	retlw	37	;'%'
  5235  1106  342B               	retlw	43	;'+'
  5236  1107  3430               	retlw	48	;'0'
  5237  1108  3436               	retlw	54	;'6'
  5238  1109  342E               	retlw	46	;'.'
  5239  110A  3430               	retlw	48	;'0'
  5240  110B  3432               	retlw	50	;'2'
  5241  110C  3466               	retlw	102	;'f'
  5242  110D  3420               	retlw	32	;' '
  5243  110E  342A               	retlw	42	;'*'
  5244  110F  3463               	retlw	99	;'c'
  5245  1110  3400               	retlw	0
  5246  1111                     STR_10:	
  5247  1111  3469               	retlw	105	;'i'
  5248  1112  3462               	retlw	98	;'b'
  5249  1113  3474               	retlw	116	;'t'
  5250  1114  346E               	retlw	110	;'n'
  5251  1115  345F               	retlw	95	;'_'
  5252  1116  3473               	retlw	115	;'s'
  5253  1117  3474               	retlw	116	;'t'
  5254  1118  3461               	retlw	97	;'a'
  5255  1119  3474               	retlw	116	;'t'
  5256  111A  3465               	retlw	101	;'e'
  5257  111B  3400               	retlw	0
  5258  111C                     STR_7:	
  5259  111C  3425               	retlw	37	;'%'
  5260  111D  3430               	retlw	48	;'0'
  5261  111E  3436               	retlw	54	;'6'
  5262  111F  342E               	retlw	46	;'.'
  5263  1120  3430               	retlw	48	;'0'
  5264  1121  3433               	retlw	51	;'3'
  5265  1122  3466               	retlw	102	;'f'
  5266  1123  3420               	retlw	32	;' '
  5267  1124  3475               	retlw	117	;'u'
  5268  1125  3466               	retlw	102	;'f'
  5269  1126  3400               	retlw	0
  5270  1127                     STR_2:	
  5271  1127  3425               	retlw	37	;'%'
  5272  1128  3430               	retlw	48	;'0'
  5273  1129  3436               	retlw	54	;'6'
  5274  112A  342E               	retlw	46	;'.'
  5275  112B  3430               	retlw	48	;'0'
  5276  112C  3433               	retlw	51	;'3'
  5277  112D  3466               	retlw	102	;'f'
  5278  112E  3420               	retlw	32	;' '
  5279  112F  3420               	retlw	32	;' '
  5280  1130  3476               	retlw	118	;'v'
  5281  1131  3400               	retlw	0
  5282  1132                     STR_3:	
  5283  1132  3425               	retlw	37	;'%'
  5284  1133  3430               	retlw	48	;'0'
  5285  1134  3436               	retlw	54	;'6'
  5286  1135  342E               	retlw	46	;'.'
  5287  1136  3430               	retlw	48	;'0'
  5288  1137  3431               	retlw	49	;'1'
  5289  1138  3466               	retlw	102	;'f'
  5290  1139  346B               	retlw	107	;'k'
  5291  113A  3468               	retlw	104	;'h'
  5292  113B  347A               	retlw	122	;'z'
  5293  113C  3400               	retlw	0
  5294  113D                     STR_9:	
  5295  113D  3470               	retlw	112	;'p'
  5296  113E  3477               	retlw	119	;'w'
  5297  113F  346D               	retlw	109	;'m'
  5298  1140  345F               	retlw	95	;'_'
  5299  1141  3473               	retlw	115	;'s'
  5300  1142  3474               	retlw	116	;'t'
  5301  1143  3461               	retlw	97	;'a'
  5302  1144  3474               	retlw	116	;'t'
  5303  1145  3465               	retlw	101	;'e'
  5304  1146  3400               	retlw	0
  5305  1147                     STR_1:	
  5306  1147  3474               	retlw	116	;'t'
  5307  1148  3465               	retlw	101	;'e'
  5308  1149  346C               	retlw	108	;'l'
  5309  114A  3465               	retlw	101	;'e'
  5310  114B  3463               	retlw	99	;'c'
  5311  114C  3420               	retlw	32	;' '
  5312  114D  3475               	retlw	117	;'u'
  5313  114E  3431               	retlw	49	;'1'
  5314  114F  3400               	retlw	0
  5315  1150                     STR_4:	
  5316  1150  3425               	retlw	37	;'%'
  5317  1151  3430               	retlw	48	;'0'
  5318  1152  3435               	retlw	53	;'5'
  5319  1153  3464               	retlw	100	;'d'
  5320  1154  3420               	retlw	32	;' '
  5321  1155  3468               	retlw	104	;'h'
  5322  1156  347A               	retlw	122	;'z'
  5323  1157  3400               	retlw	0
  5324  1158                     STR_5:	
  5325  1158  3463               	retlw	99	;'c'
  5326  1159  3420               	retlw	32	;' '
  5327  115A  3425               	retlw	37	;'%'
  5328  115B  3430               	retlw	48	;'0'
  5329  115C  3436               	retlw	54	;'6'
  5330  115D  3464               	retlw	100	;'d'
  5331  115E  3400               	retlw	0
  5332                           
  5333                           ; #config settings
  5334  0000                     
  5335                           	psect	nvBANK1
  5336  00ED                     __pnvBANK1:	
  5337  00ED                     _CMP1_InterruptHandler:	
  5338  00ED                     	ds	2
  5339                           
  5340                           	psect	nvBANK2
  5341  012C                     __pnvBANK2:	
  5342  012C                     _TMR1_InterruptHandler:	
  5343  012C                     	ds	2
  5344  000B                     _INTCONbits	set	11
  5345  0016                     _LATA	set	22
  5346  0016                     _LATAbits	set	22
  5347  0018                     _LATC	set	24
  5348  0019                     _LATD	set	25
  5349  001A                     _LATE	set	26
  5350  001A                     _LATEbits	set	26
  5351  000C                     _PORTAbits	set	12
  5352  000D                     _PORTBbits	set	13
  5353  0011                     _TRISA	set	17
  5354  0011                     _TRISAbits	set	17
  5355  0013                     _TRISC	set	19
  5356  0014                     _TRISD	set	20
  5357  0015                     _TRISE	set	21
  5358  0017                     _LATB	set	23
  5359  0012                     _TRISB	set	18
  5360  0091                     _ADACCH	set	145
  5361  0090                     _ADACCL	set	144
  5362  009D                     _ADACQ	set	157
  5363  0099                     _ADACT	set	153
  5364  009B                     _ADCAP	set	155
  5365  0098                     _ADCLK	set	152
  5366  0093                     _ADCON0	set	147
  5367  0093                     _ADCON0bits	set	147
  5368  0094                     _ADCON1	set	148
  5369  0094                     _ADCON1bits	set	148
  5370  0095                     _ADCON2	set	149
  5371  0095                     _ADCON2bits	set	149
  5372  0096                     _ADCON3	set	150
  5373  0096                     _ADCON3bits	set	150
  5374  009E                     _ADPCH	set	158
  5375  009C                     _ADPRE	set	156
  5376  008F                     _ADPREVH	set	143
  5377  008E                     _ADPREVL	set	142
  5378  009A                     _ADREF	set	154
  5379  008D                     _ADRESH	set	141
  5380  008C                     _ADRESL	set	140
  5381  0097                     _ADSTAT	set	151
  5382  0097                     _ADSTATbits	set	151
  5383  010C                     _ADCNT	set	268
  5384  0117                     _ADERRH	set	279
  5385  0116                     _ADERRL	set	278
  5386  0115                     _ADFLTRH	set	277
  5387  0114                     _ADFLTRL	set	276
  5388  010F                     _ADLTHH	set	271
  5389  010E                     _ADLTHL	set	270
  5390  010D                     _ADRPT	set	269
  5391  0113                     _ADSTPTH	set	275
  5392  0112                     _ADSTPTL	set	274
  5393  0111                     _ADUTHH	set	273
  5394  0110                     _ADUTHL	set	272
  5395  0211                     _T1CLK	set	529
  5396  020E                     _T1CON	set	526
  5397  020E                     _T1CONbits	set	526
  5398  0210                     _T1GATE	set	528
  5399  020F                     _T1GCON	set	527
  5400  0217                     _T3CLK	set	535
  5401  0214                     _T3CON	set	532
  5402  0214                     _T3CONbits	set	532
  5403  0216                     _T3GATE	set	534
  5404  0215                     _T3GCON	set	533
  5405  021D                     _T5CLK	set	541
  5406  021A                     _T5CON	set	538
  5407  021A                     _T5CONbits	set	538
  5408  021C                     _T5GATE	set	540
  5409  021B                     _T5GCON	set	539
  5410  020D                     _TMR1H	set	525
  5411  020C                     _TMR1L	set	524
  5412  0213                     _TMR3H	set	531
  5413  0212                     _TMR3L	set	530
  5414  0219                     _TMR5H	set	537
  5415  0218                     _TMR5L	set	536
  5416  0718                     _PIE2bits	set	1816
  5417  071A                     _PIE4bits	set	1818
  5418  071B                     _PIE5bits	set	1819
  5419  070E                     _PIR2bits	set	1806
  5420  0710                     _PIR4bits	set	1808
  5421  0711                     _PIR5bits	set	1809
  5422  088D                     _OSCCON1	set	2189
  5423  088F                     _OSCCON3	set	2191
  5424  0891                     _OSCEN	set	2193
  5425  0893                     _OSCFRQ	set	2195
  5426  0890                     _OSCSTAT	set	2192
  5427  0892                     _OSCTUNE	set	2194
  5428  090E                     _DAC1CON0	set	2318
  5429  090F                     _DAC1CON1	set	2319
  5430  090C                     _FVRCONbits	set	2316
  5431  0990                     _CM1CON0	set	2448
  5432  0991                     _CM1CON1	set	2449
  5433  0992                     _CM1NSEL	set	2450
  5434  0993                     _CM1PSEL	set	2451
  5435  098F                     _CMOUTbits	set	2447
  5436  1E10                     _CLC1CON	set	7696
  5437  1E10                     _CLC1CONbits	set	7696
  5438  1E16                     _CLC1GLS0	set	7702
  5439  1E17                     _CLC1GLS1	set	7703
  5440  1E18                     _CLC1GLS2	set	7704
  5441  1E19                     _CLC1GLS3	set	7705
  5442  1E11                     _CLC1POL	set	7697
  5443  1E12                     _CLC1SEL0	set	7698
  5444  1E13                     _CLC1SEL1	set	7699
  5445  1E14                     _CLC1SEL2	set	7700
  5446  1E15                     _CLC1SEL3	set	7701
  5447  1E1A                     _CLC2CON	set	7706
  5448  1E1A                     _CLC2CONbits	set	7706
  5449  1E20                     _CLC2GLS0	set	7712
  5450  1E21                     _CLC2GLS1	set	7713
  5451  1E22                     _CLC2GLS2	set	7714
  5452  1E23                     _CLC2GLS3	set	7715
  5453  1E1B                     _CLC2POL	set	7707
  5454  1E1C                     _CLC2SEL0	set	7708
  5455  1E1D                     _CLC2SEL1	set	7709
  5456  1E1E                     _CLC2SEL2	set	7710
  5457  1E1F                     _CLC2SEL3	set	7711
  5458  1E24                     _CLC3CON	set	7716
  5459  1E24                     _CLC3CONbits	set	7716
  5460  1E2A                     _CLC3GLS0	set	7722
  5461  1E2B                     _CLC3GLS1	set	7723
  5462  1E2C                     _CLC3GLS2	set	7724
  5463  1E2D                     _CLC3GLS3	set	7725
  5464  1E25                     _CLC3POL	set	7717
  5465  1E26                     _CLC3SEL0	set	7718
  5466  1E27                     _CLC3SEL1	set	7719
  5467  1E28                     _CLC3SEL2	set	7720
  5468  1E29                     _CLC3SEL3	set	7721
  5469  1E2E                     _CLC4CONbits	set	7726
  5470  1EBB                     _CLCIN0PPS	set	7867
  5471  1EBC                     _CLCIN1PPS	set	7868
  5472  1E8F                     _PPSLOCK	set	7823
  5473  1E8F                     _PPSLOCKbits	set	7823
  5474  1E96                     _T5CKIPPSbits	set	7830
  5475  1F38                     _ANSELA	set	7992
  5476  1F43                     _ANSELB	set	8003
  5477  1F4E                     _ANSELC	set	8014
  5478  1F59                     _ANSELD	set	8025
  5479  1F64                     _ANSELE	set	8036
  5480  1F3A                     _ODCONA	set	7994
  5481  1F45                     _ODCONB	set	8005
  5482  1F50                     _ODCONC	set	8016
  5483  1F5B                     _ODCOND	set	8027
  5484  1F66                     _ODCONE	set	8038
  5485  1F13                     _RA3PPS	set	7955
  5486  1F14                     _RA4PPS	set	7956
  5487  1F18                     _RB0PPS	set	7960
  5488  1F39                     _WPUA	set	7993
  5489  1F44                     _WPUB	set	8004
  5490  1F4F                     _WPUC	set	8015
  5491  1F5A                     _WPUD	set	8026
  5492  1F65                     _WPUE	set	8037
  5493                           
  5494                           	psect	cinit
  5495  0035                     start_initialization:	
  5496  0035                     __initialization:	
  5497                           
  5498                           ; Initialize objects allocated to BANK1
  5499  0035  0141               	movlb	1	; select bank1
  5500  0036  3187  27FF  3180   	fcall	__pidataBANK1	;fetch initializer
  5501  0039  00EF               	movwf	__pdataBANK1& (0+127)
  5502                           
  5503                           ; Clear objects allocated to COMMON
  5504  003A  01F7               	clrf	__pbssCOMMON& (0+127)
  5505  003B  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  5506  003C  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  5507                           
  5508                           ; Clear objects allocated to BANK1
  5509  003D  30E2               	movlw	low __pbssBANK1
  5510  003E  0084               	movwf	4
  5511  003F  3000               	movlw	high __pbssBANK1
  5512  0040  0085               	movwf	5
  5513  0041  300B               	movlw	11
  5514  0042  319D  25C9  3180   	fcall	clear_ram0
  5515                           
  5516                           ; Clear objects allocated to BANK2
  5517  0045  3020               	movlw	low __pbssBANK2
  5518  0046  0084               	movwf	4
  5519  0047  3001               	movlw	high __pbssBANK2
  5520  0048  0085               	movwf	5
  5521  0049  3008               	movlw	8
  5522  004A  319D  25C9         	fcall	clear_ram0
  5523  004C                     end_of_initialization:	
  5524                           ;End of C runtime variable initialization code
  5525                           
  5526  004C                     __end_of__initialization:	
  5527  004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5528  004D  0140               	movlb	0
  5529  004E  3188  282D         	ljmp	_main	;jump to C main() function
  5530                           
  5531                           	psect	bssCOMMON
  5532  0077                     __pbssCOMMON:	
  5533  0077                     TMR3_ISR@count:	
  5534  0077                     	ds	1
  5535  0078                     _isTMR3fast:	
  5536  0078                     	ds	1
  5537  0079                     refreshDisplay@d:	
  5538  0079                     	ds	1
  5539                           
  5540                           	psect	bssBANK1
  5541  00E2                     __pbssBANK1:	
  5542  00E2                     _TMR3_InterruptHandler:	
  5543  00E2                     	ds	2
  5544  00E4                     _TMR5_InterruptHandler:	
  5545  00E4                     	ds	2
  5546  00E6                     counter_state@count:	
  5547  00E6                     	ds	2
  5548  00E8                     printCapa@offset:	
  5549  00E8                     	ds	2
  5550  00EA                     _fast:	
  5551  00EA                     	ds	1
  5552  00EB                     _freshNews:	
  5553  00EB                     	ds	1
  5554  00EC                     counter_state@lPin:	
  5555  00EC                     	ds	1
  5556                           
  5557                           	psect	dataBANK1
  5558  00EF                     __pdataBANK1:	
  5559  00EF                     _entering:	
  5560  00EF                     	ds	1
  5561                           
  5562                           	psect	bssBANK2
  5563  0120                     __pbssBANK2:	
  5564  0120                     _display:	
  5565  0120                     	ds	8
  5566                           
  5567                           	psect	clrtext
  5568  1DC9                     clear_ram0:	
  5569                           ;	Called with FSR0 containing the base address, and
  5570                           ;	WREG with the size to clear
  5571                           
  5572  1DC9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5573  1DCA                     clrloop0:	
  5574  1DCA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5575  1DCB  3101               	addfsr 0,1
  5576  1DCC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5577  1DCD  2DCA               	goto	clrloop0	;have we reached the end yet?
  5578  1DCE  3400               	retlw	0	;all done for this memory range, return
  5579                           
  5580                           	psect	cstackBANK2
  5581  0128                     __pcstackBANK2:	
  5582  0128                     ??_main:	
  5583                           
  5584                           ; 1 bytes @ 0x0
  5585  0128                     	ds	3
  5586  012B                     main@state:	
  5587                           
  5588                           ; 1 bytes @ 0x3
  5589  012B                     	ds	1
  5590                           
  5591                           	psect	cstackBANK1
  5592  00A0                     __pcstackBANK1:	
  5593  00A0                     ?_sprintf:	
  5594  00A0                     sprintf@f:	
  5595                           ; 2 bytes @ 0x0
  5596                           
  5597                           
  5598                           ; 2 bytes @ 0x0
  5599  00A0                     	ds	5
  5600  00A5                     ??_sprintf:	
  5601                           
  5602                           ; 1 bytes @ 0x5
  5603  00A5                     	ds	6
  5604  00AB                     _sprintf$2150:	
  5605                           
  5606                           ; 3 bytes @ 0xB
  5607  00AB                     	ds	3
  5608  00AE                     _sprintf$1610:	
  5609                           
  5610                           ; 2 bytes @ 0xE
  5611  00AE                     	ds	2
  5612  00B0                     _sprintf$1611:	
  5613                           
  5614                           ; 2 bytes @ 0x10
  5615  00B0                     	ds	2
  5616  00B2                     _sprintf$1612:	
  5617                           
  5618                           ; 2 bytes @ 0x12
  5619  00B2                     	ds	2
  5620  00B4                     _sprintf$1613:	
  5621                           
  5622                           ; 2 bytes @ 0x14
  5623  00B4                     	ds	2
  5624  00B6                     sprintf@ap:	
  5625                           
  5626                           ; 1 bytes @ 0x16
  5627  00B6                     	ds	1
  5628  00B7                     sprintf@tmpval:	
  5629                           
  5630                           ; 4 bytes @ 0x17
  5631  00B7                     	ds	4
  5632  00BB                     sprintf@val:	
  5633                           
  5634                           ; 4 bytes @ 0x1B
  5635  00BB                     	ds	4
  5636  00BF                     sprintf@exp:	
  5637                           
  5638                           ; 2 bytes @ 0x1F
  5639  00BF                     	ds	2
  5640  00C1                     sprintf@width:	
  5641                           
  5642                           ; 2 bytes @ 0x21
  5643  00C1                     	ds	2
  5644  00C3                     sprintf@fval:	
  5645                           
  5646                           ; 3 bytes @ 0x23
  5647  00C3                     	ds	3
  5648  00C6                     sprintf@prec:	
  5649                           
  5650                           ; 2 bytes @ 0x26
  5651  00C6                     	ds	2
  5652  00C8                     sprintf@flag:	
  5653                           
  5654                           ; 2 bytes @ 0x28
  5655  00C8                     	ds	2
  5656  00CA                     sprintf@c:	
  5657                           
  5658                           ; 1 bytes @ 0x2A
  5659  00CA                     	ds	1
  5660  00CB                     sprintf@sp:	
  5661                           
  5662                           ; 1 bytes @ 0x2B
  5663  00CB                     	ds	1
  5664  00CC                     ??_voltmeter_state:	
  5665  00CC                     ??_tempmeter_state:	
  5666                           ; 1 bytes @ 0x2C
  5667                           
  5668  00CC                     printFreq@buf:	
  5669                           ; 1 bytes @ 0x2C
  5670                           
  5671  00CC                     counter_state@buf:	
  5672                           ; 17 bytes @ 0x2C
  5673                           
  5674  00CC                     printCapa@buf:	
  5675                           ; 17 bytes @ 0x2C
  5676                           
  5677                           
  5678                           ; 17 bytes @ 0x2C
  5679  00CC                     	ds	3
  5680  00CF                     voltmeter_state@buf:	
  5681  00CF                     tempmeter_state@buf:	
  5682                           ; 17 bytes @ 0x2F
  5683                           
  5684                           
  5685                           ; 17 bytes @ 0x2F
  5686  00CF                     	ds	14
  5687  00DD                     counter_state@pin:	
  5688  00DD                     printFreq@count:	
  5689                           ; 1 bytes @ 0x3D
  5690                           
  5691  00DD                     printCapa@tmr:	
  5692                           ; 2 bytes @ 0x3D
  5693                           
  5694                           
  5695                           ; 2 bytes @ 0x3D
  5696  00DD                     	ds	3
  5697  00E0                     voltmeter_state@m:	
  5698  00E0                     tempmeter_state@m:	
  5699                           ; 2 bytes @ 0x40
  5700                           
  5701                           
  5702                           ; 2 bytes @ 0x40
  5703  00E0                     	ds	2
  5704                           
  5705                           	psect	cstackCOMMON
  5706  0070                     __pcstackCOMMON:	
  5707  0070                     ?_isdigit:	
  5708  0070                     ?_refreshDisplay:	
  5709                           ; 1 bit 
  5710                           
  5711  0070                     ??_refreshDisplay:	
  5712                           ; 1 bytes @ 0x0
  5713                           
  5714  0070                     ?_computeCapa:	
  5715                           ; 1 bytes @ 0x0
  5716                           
  5717  0070                     ??_computeCapa:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720  0070                     ?_start:	
  5721                           ; 1 bytes @ 0x0
  5722                           
  5723  0070                     ?_setTMR1Interrupt:	
  5724                           ; 1 bytes @ 0x0
  5725                           
  5726  0070                     ?_voltmeter_state:	
  5727                           ; 1 bytes @ 0x0
  5728                           
  5729  0070                     ?_freqmeter_state:	
  5730                           ; 1 bytes @ 0x0
  5731                           
  5732  0070                     ?_computeFreq:	
  5733                           ; 1 bytes @ 0x0
  5734                           
  5735  0070                     ??_computeFreq:	
  5736                           ; 1 bytes @ 0x0
  5737                           
  5738  0070                     ?_printFreq:	
  5739                           ; 1 bytes @ 0x0
  5740                           
  5741  0070                     ?_counter_state:	
  5742                           ; 1 bytes @ 0x0
  5743                           
  5744  0070                     ?_tempmeter_state:	
  5745                           ; 1 bytes @ 0x0
  5746                           
  5747  0070                     ?_capameter_state:	
  5748                           ; 1 bytes @ 0x0
  5749                           
  5750  0070                     ?_printCapa:	
  5751                           ; 1 bytes @ 0x0
  5752                           
  5753  0070                     ?_resmeter_state:	
  5754                           ; 1 bytes @ 0x0
  5755                           
  5756  0070                     ?_pwm_state:	
  5757                           ; 1 bytes @ 0x0
  5758                           
  5759  0070                     ?_ibtn_state:	
  5760                           ; 1 bytes @ 0x0
  5761                           
  5762  0070                     ?_init_osc:	
  5763                           ; 1 bytes @ 0x0
  5764                           
  5765  0070                     ?_init_global:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     ?_init_PPS:	
  5769                           ; 1 bytes @ 0x0
  5770                           
  5771  0070                     ?_init_CLCs:	
  5772                           ; 1 bytes @ 0x0
  5773                           
  5774  0070                     ?_init_CMP_DAC:	
  5775                           ; 1 bytes @ 0x0
  5776                           
  5777  0070                     ?_init_ADC:	
  5778                           ; 1 bytes @ 0x0
  5779                           
  5780  0070                     ?_init_TMRs:	
  5781                           ; 1 bytes @ 0x0
  5782                           
  5783  0070                     ?_init_interrupt:	
  5784                           ; 1 bytes @ 0x0
  5785                           
  5786  0070                     ?_CMP1_ISR:	
  5787                           ; 1 bytes @ 0x0
  5788                           
  5789  0070                     ?_TMR1_ISR:	
  5790                           ; 1 bytes @ 0x0
  5791                           
  5792  0070                     ?_TMR3_ISR:	
  5793                           ; 1 bytes @ 0x0
  5794                           
  5795  0070                     ?_init_CLC1:	
  5796                           ; 1 bytes @ 0x0
  5797                           
  5798  0070                     ?_init_CLC2:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  0070                     ?_init_CLC3:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  0070                     ?_init_CLC4:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  0070                     ?_setCMP1Interrupt:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  0070                     ?_init_TMR1:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  0070                     ?_init_TMR3:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  0070                     ?_init_TMR5:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  0070                     ?_setTMR3Interrupt:	
  5820                           ; 1 bytes @ 0x0
  5821                           
  5822  0070                     ?_INTERRUPT_InterruptManager:	
  5823                           ; 1 bytes @ 0x0
  5824                           
  5825  0070                     ?_startGatedCount:	
  5826                           ; 1 bytes @ 0x0
  5827                           
  5828  0070                     ?_startTimeMeasurement:	
  5829                           ; 1 bytes @ 0x0
  5830                           
  5831  0070                     ?_setTMR3:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ?i1_setCMP1Interrupt:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ??i1_setCMP1Interrupt:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ?i1_setTMR3Interrupt:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     ??i1_setTMR3Interrupt:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ?_main:	
  5847                           ; 1 bytes @ 0x0
  5848                           
  5849  0070                     i1setCMP1Interrupt@useInt:	
  5850                           ; 2 bytes @ 0x0
  5851                           
  5852  0070                     i1setTMR3Interrupt@useInt:	
  5853                           ; 1 bytes @ 0x0
  5854                           
  5855  0070                     setTMR3@timerVal:	
  5856                           ; 1 bytes @ 0x0
  5857                           
  5858                           
  5859                           ; 2 bytes @ 0x0
  5860  0070                     	ds	1
  5861  0071                     ??_CMP1_ISR:	
  5862  0071                     ??_TMR1_ISR:	
  5863                           ; 1 bytes @ 0x1
  5864                           
  5865                           
  5866                           ; 1 bytes @ 0x1
  5867  0071                     	ds	1
  5868  0072                     ??_TMR3_ISR:	
  5869  0072                     ??_setTMR3:	
  5870                           ; 1 bytes @ 0x2
  5871                           
  5872                           
  5873                           ; 1 bytes @ 0x2
  5874  0072                     	ds	1
  5875  0073                     ??_INTERRUPT_InterruptManager:	
  5876                           
  5877                           ; 1 bytes @ 0x3
  5878  0073                     	ds	1
  5879  0074                     ?_setTMR1InterruptHandler:	
  5880  0074                     ?_setCMP1InterruptHandler:	
  5881                           ; 1 bytes @ 0x4
  5882                           
  5883  0074                     ??_start:	
  5884                           ; 1 bytes @ 0x4
  5885                           
  5886  0074                     ??_setTMR1Interrupt:	
  5887                           ; 1 bytes @ 0x4
  5888                           
  5889  0074                     ?_setTMR3InterruptHandler:	
  5890                           ; 1 bytes @ 0x4
  5891                           
  5892  0074                     ??_init_osc:	
  5893                           ; 1 bytes @ 0x4
  5894                           
  5895  0074                     ??_init_global:	
  5896                           ; 1 bytes @ 0x4
  5897                           
  5898  0074                     ??_init_PPS:	
  5899                           ; 1 bytes @ 0x4
  5900                           
  5901  0074                     ??_init_CLCs:	
  5902                           ; 1 bytes @ 0x4
  5903                           
  5904  0074                     ??_init_CMP_DAC:	
  5905                           ; 1 bytes @ 0x4
  5906                           
  5907  0074                     ??_init_ADC:	
  5908                           ; 1 bytes @ 0x4
  5909                           
  5910  0074                     ??_init_TMRs:	
  5911                           ; 1 bytes @ 0x4
  5912                           
  5913  0074                     ??_init_interrupt:	
  5914                           ; 1 bytes @ 0x4
  5915                           
  5916  0074                     ??_init_CLC1:	
  5917                           ; 1 bytes @ 0x4
  5918                           
  5919  0074                     ??_init_CLC2:	
  5920                           ; 1 bytes @ 0x4
  5921                           
  5922  0074                     ??_init_CLC3:	
  5923                           ; 1 bytes @ 0x4
  5924                           
  5925  0074                     ??_init_CLC4:	
  5926                           ; 1 bytes @ 0x4
  5927                           
  5928  0074                     ??_setCMP1Interrupt:	
  5929                           ; 1 bytes @ 0x4
  5930                           
  5931  0074                     ??_init_TMR1:	
  5932                           ; 1 bytes @ 0x4
  5933                           
  5934  0074                     ??_init_TMR3:	
  5935                           ; 1 bytes @ 0x4
  5936                           
  5937  0074                     ??_init_TMR5:	
  5938                           ; 1 bytes @ 0x4
  5939                           
  5940  0074                     ??_setTMR3Interrupt:	
  5941                           ; 1 bytes @ 0x4
  5942                           
  5943  0074                     ?_getPrintableSize:	
  5944                           ; 1 bytes @ 0x4
  5945                           
  5946  0074                     ??_isdigit:	
  5947                           ; 1 bytes @ 0x4
  5948                           
  5949  0074                     ??___ftpack:	
  5950                           ; 1 bytes @ 0x4
  5951                           
  5952  0074                     ??___awmod:	
  5953                           ; 1 bytes @ 0x4
  5954                           
  5955  0074                     ??___ftge:	
  5956                           ; 1 bytes @ 0x4
  5957                           
  5958  0074                     ??___lldiv:	
  5959                           ; 1 bytes @ 0x4
  5960                           
  5961  0074                     ?_ADC_GetSingleConversion:	
  5962                           ; 1 bytes @ 0x4
  5963                           
  5964  0074                     ?_getTMR3:	
  5965                           ; 2 bytes @ 0x4
  5966                           
  5967  0074                     ?_getTMR5:	
  5968                           ; 2 bytes @ 0x4
  5969                           
  5970  0074                     ?___ftneg:	
  5971                           ; 2 bytes @ 0x4
  5972                           
  5973  0074                     setCMP1Interrupt@useInt:	
  5974                           ; 3 bytes @ 0x4
  5975                           
  5976  0074                     setTMR1Interrupt@useInt:	
  5977                           ; 1 bytes @ 0x4
  5978                           
  5979  0074                     setTMR3Interrupt@useInt:	
  5980                           ; 1 bytes @ 0x4
  5981                           
  5982  0074                     _isdigit$1869:	
  5983                           ; 1 bytes @ 0x4
  5984                           
  5985  0074                     setCMP1InterruptHandler@InterruptHandler:	
  5986                           ; 1 bytes @ 0x4
  5987                           
  5988  0074                     setTMR1InterruptHandler@InterruptHandler:	
  5989                           ; 2 bytes @ 0x4
  5990                           
  5991  0074                     setTMR3InterruptHandler@InterruptHandler:	
  5992                           ; 2 bytes @ 0x4
  5993                           
  5994  0074                     getPrintableSize@a:	
  5995                           ; 2 bytes @ 0x4
  5996                           
  5997  0074                     ___ftneg@f1:	
  5998                           ; 2 bytes @ 0x4
  5999                           
  6000                           
  6001                           ; 3 bytes @ 0x4
  6002  0074                     	ds	1
  6003  0075                     ??_startGatedCount:	
  6004  0075                     ??_startTimeMeasurement:	
  6005                           ; 1 bytes @ 0x5
  6006                           
  6007  0075                     ??___llmod:	
  6008                           ; 1 bytes @ 0x5
  6009                           
  6010  0075                     ___awmod@counter:	
  6011                           ; 1 bytes @ 0x5
  6012                           
  6013  0075                     isdigit@c:	
  6014                           ; 1 bytes @ 0x5
  6015                           
  6016                           
  6017                           ; 1 bytes @ 0x5
  6018  0075                     	ds	1
  6019  0076                     ??_setTMR1InterruptHandler:	
  6020  0076                     ??_setCMP1InterruptHandler:	
  6021                           ; 1 bytes @ 0x6
  6022                           
  6023  0076                     ??_setTMR3InterruptHandler:	
  6024                           ; 1 bytes @ 0x6
  6025                           
  6026  0076                     ??_resmeter_state:	
  6027                           ; 1 bytes @ 0x6
  6028                           
  6029  0076                     ??_pwm_state:	
  6030                           ; 1 bytes @ 0x6
  6031                           
  6032  0076                     ??_ibtn_state:	
  6033                           ; 1 bytes @ 0x6
  6034                           
  6035  0076                     startGatedCount@fast:	
  6036                           ; 1 bytes @ 0x6
  6037                           
  6038  0076                     ___awmod@sign:	
  6039                           ; 1 bytes @ 0x6
  6040                           
  6041  0076                     ___llmod@counter:	
  6042                           ; 1 bytes @ 0x6
  6043                           
  6044                           
  6045                           ; 1 bytes @ 0x6
  6046  0076                     	ds	1
  6047  0077                     ??_printFreq:	
  6048  0077                     ??_measureInput:	
  6049                           ; 1 bytes @ 0x7
  6050                           
  6051  0077                     ??_measureTemp:	
  6052                           ; 1 bytes @ 0x7
  6053                           
  6054  0077                     ??_ADC_GetSingleConversion:	
  6055                           ; 1 bytes @ 0x7
  6056                           
  6057  0077                     ??___wmul:	
  6058                           ; 1 bytes @ 0x7
  6059                           
  6060  0077                     ??___ftneg:	
  6061                           ; 1 bytes @ 0x7
  6062                           
  6063  0077                     ??___ftsub:	
  6064                           ; 1 bytes @ 0x7
  6065                           
  6066                           
  6067                           	psect	cstackBANK0
  6068  0020                     __pcstackBANK0:	
  6069                           ; 1 bytes @ 0x7
  6070                           
  6071  0020                     ?___ftge:	
  6072  0020                     ??_freqmeter_state:	
  6073                           ; 1 bit 
  6074                           
  6075  0020                     ??_capameter_state:	
  6076                           ; 1 bytes @ 0x0
  6077                           
  6078  0020                     ??_getPrintableSize:	
  6079                           ; 1 bytes @ 0x0
  6080                           
  6081  0020                     ??_getTMR3:	
  6082                           ; 1 bytes @ 0x0
  6083                           
  6084  0020                     ??_getTMR5:	
  6085                           ; 1 bytes @ 0x0
  6086                           
  6087  0020                     ?___awmod:	
  6088                           ; 1 bytes @ 0x0
  6089                           
  6090  0020                     ?___ftpack:	
  6091                           ; 2 bytes @ 0x0
  6092                           
  6093  0020                     ?__tdiv_to_l_:	
  6094                           ; 3 bytes @ 0x0
  6095                           
  6096  0020                     ?__div_to_l_:	
  6097                           ; 4 bytes @ 0x0
  6098                           
  6099  0020                     ?___lldiv:	
  6100                           ; 4 bytes @ 0x0
  6101                           
  6102  0020                     ADC_GetSingleConversion@channel:	
  6103                           ; 4 bytes @ 0x0
  6104                           
  6105  0020                     ___awmod@divisor:	
  6106                           ; 1 bytes @ 0x0
  6107                           
  6108  0020                     __div_to_l_@f1:	
  6109                           ; 2 bytes @ 0x0
  6110                           
  6111  0020                     ___ftpack@arg:	
  6112                           ; 3 bytes @ 0x0
  6113                           
  6114  0020                     __tdiv_to_l_@f1:	
  6115                           ; 3 bytes @ 0x0
  6116                           
  6117  0020                     ___ftge@ff1:	
  6118                           ; 3 bytes @ 0x0
  6119                           
  6120  0020                     ___lldiv@divisor:	
  6121                           ; 3 bytes @ 0x0
  6122                           
  6123                           
  6124                           ; 4 bytes @ 0x0
  6125  0020                     	ds	2
  6126  0022                     _capameter_state$1519:	
  6127  0022                     ___awmod@dividend:	
  6128                           ; 2 bytes @ 0x2
  6129                           
  6130                           
  6131                           ; 2 bytes @ 0x2
  6132  0022                     	ds	1
  6133  0023                     getPrintableSize@chr:	
  6134  0023                     ___ftpack@exp:	
  6135                           ; 1 bytes @ 0x3
  6136                           
  6137  0023                     getTMR3@readVal:	
  6138                           ; 1 bytes @ 0x3
  6139                           
  6140  0023                     getTMR5@readVal:	
  6141                           ; 2 bytes @ 0x3
  6142                           
  6143  0023                     __div_to_l_@f2:	
  6144                           ; 2 bytes @ 0x3
  6145                           
  6146  0023                     __tdiv_to_l_@f2:	
  6147                           ; 3 bytes @ 0x3
  6148                           
  6149  0023                     ___ftge@ff2:	
  6150                           ; 3 bytes @ 0x3
  6151                           
  6152                           
  6153                           ; 3 bytes @ 0x3
  6154  0023                     	ds	1
  6155  0024                     ?___awdiv:	
  6156  0024                     getPrintableSize@s:	
  6157                           ; 2 bytes @ 0x4
  6158                           
  6159  0024                     ___ftpack@sign:	
  6160                           ; 1 bytes @ 0x4
  6161                           
  6162  0024                     _capameter_state$1520:	
  6163                           ; 1 bytes @ 0x4
  6164                           
  6165  0024                     ___awdiv@divisor:	
  6166                           ; 2 bytes @ 0x4
  6167                           
  6168  0024                     ___lldiv@dividend:	
  6169                           ; 2 bytes @ 0x4
  6170                           
  6171                           
  6172                           ; 4 bytes @ 0x4
  6173  0024                     	ds	1
  6174  0025                     ?_writeo:	
  6175  0025                     ?___awtoft:	
  6176                           ; 1 bytes @ 0x5
  6177                           
  6178  0025                     ?___lltoft:	
  6179                           ; 3 bytes @ 0x5
  6180                           
  6181  0025                     ?___lwtoft:	
  6182                           ; 3 bytes @ 0x5
  6183                           
  6184  0025                     writeo@a:	
  6185                           ; 3 bytes @ 0x5
  6186                           
  6187  0025                     ___awtoft@c:	
  6188                           ; 2 bytes @ 0x5
  6189                           
  6190  0025                     ___lwtoft@c:	
  6191                           ; 2 bytes @ 0x5
  6192                           
  6193  0025                     ___lltoft@c:	
  6194                           ; 2 bytes @ 0x5
  6195                           
  6196                           
  6197                           ; 4 bytes @ 0x5
  6198  0025                     	ds	1
  6199  0026                     ??__tdiv_to_l_:	
  6200  0026                     ??__div_to_l_:	
  6201                           ; 1 bytes @ 0x6
  6202                           
  6203  0026                     _capameter_state$1522:	
  6204                           ; 1 bytes @ 0x6
  6205                           
  6206  0026                     ___awdiv@dividend:	
  6207                           ; 2 bytes @ 0x6
  6208                           
  6209                           
  6210                           ; 2 bytes @ 0x6
  6211  0026                     	ds	1
  6212  0027                     writeo@start:	
  6213                           
  6214                           ; 1 bytes @ 0x7
  6215  0027                     	ds	1
  6216  0028                     ??_writeo:	
  6217  0028                     ??___awdiv:	
  6218                           ; 1 bytes @ 0x8
  6219                           
  6220  0028                     ??___awtoft:	
  6221                           ; 1 bytes @ 0x8
  6222                           
  6223  0028                     ??___lwtoft:	
  6224                           ; 1 bytes @ 0x8
  6225                           
  6226  0028                     ___lldiv@quotient:	
  6227                           ; 1 bytes @ 0x8
  6228                           
  6229                           
  6230                           ; 4 bytes @ 0x8
  6231  0028                     	ds	1
  6232  0029                     ??___lltoft:	
  6233  0029                     ___awdiv@counter:	
  6234                           ; 1 bytes @ 0x9
  6235                           
  6236                           
  6237                           ; 1 bytes @ 0x9
  6238  0029                     	ds	1
  6239  002A                     ___awdiv@sign:	
  6240  002A                     ___awtoft@sign:	
  6241                           ; 1 bytes @ 0xA
  6242                           
  6243  002A                     ___lltoft@exp:	
  6244                           ; 1 bytes @ 0xA
  6245                           
  6246  002A                     __tdiv_to_l_@quot:	
  6247                           ; 1 bytes @ 0xA
  6248                           
  6249                           
  6250                           ; 4 bytes @ 0xA
  6251  002A                     	ds	1
  6252  002B                     ?___ftdiv:	
  6253  002B                     _writeo$1548:	
  6254                           ; 3 bytes @ 0xB
  6255                           
  6256  002B                     ___awdiv@quotient:	
  6257                           ; 2 bytes @ 0xB
  6258                           
  6259  002B                     ___ftdiv@f2:	
  6260                           ; 2 bytes @ 0xB
  6261                           
  6262                           
  6263                           ; 3 bytes @ 0xB
  6264  002B                     	ds	1
  6265  002C                     ___lldiv@counter:	
  6266                           
  6267                           ; 1 bytes @ 0xC
  6268  002C                     	ds	1
  6269  002D                     ?___wmul:	
  6270  002D                     ?___llmod:	
  6271                           ; 2 bytes @ 0xD
  6272                           
  6273  002D                     _writeo$1549:	
  6274                           ; 4 bytes @ 0xD
  6275                           
  6276  002D                     ___wmul@multiplier:	
  6277                           ; 2 bytes @ 0xD
  6278                           
  6279  002D                     ___llmod@divisor:	
  6280                           ; 2 bytes @ 0xD
  6281                           
  6282                           
  6283                           ; 4 bytes @ 0xD
  6284  002D                     	ds	1
  6285  002E                     __tdiv_to_l_@cntr:	
  6286  002E                     ___ftdiv@f1:	
  6287                           ; 1 bytes @ 0xE
  6288                           
  6289  002E                     __div_to_l_@quot:	
  6290                           ; 3 bytes @ 0xE
  6291                           
  6292                           
  6293                           ; 4 bytes @ 0xE
  6294  002E                     	ds	1
  6295  002F                     __tdiv_to_l_@exp1:	
  6296  002F                     _writeo$1550:	
  6297                           ; 1 bytes @ 0xF
  6298                           
  6299  002F                     ___wmul@multiplicand:	
  6300                           ; 2 bytes @ 0xF
  6301                           
  6302                           
  6303                           ; 2 bytes @ 0xF
  6304  002F                     	ds	2
  6305  0031                     ??___ftdiv:	
  6306  0031                     writeo@j:	
  6307                           ; 1 bytes @ 0x11
  6308                           
  6309  0031                     ___wmul@product:	
  6310                           ; 1 bytes @ 0x11
  6311                           
  6312  0031                     ___llmod@dividend:	
  6313                           ; 2 bytes @ 0x11
  6314                           
  6315                           
  6316                           ; 4 bytes @ 0x11
  6317  0031                     	ds	1
  6318  0032                     writeo@chr:	
  6319  0032                     __div_to_l_@cntr:	
  6320                           ; 1 bytes @ 0x12
  6321                           
  6322                           
  6323                           ; 1 bytes @ 0x12
  6324  0032                     	ds	1
  6325  0033                     ?___ftmul:	
  6326  0033                     writeo@i:	
  6327                           ; 3 bytes @ 0x13
  6328                           
  6329  0033                     __div_to_l_@exp1:	
  6330                           ; 1 bytes @ 0x13
  6331                           
  6332  0033                     ___ftmul@f1:	
  6333                           ; 1 bytes @ 0x13
  6334                           
  6335                           
  6336                           ; 3 bytes @ 0x13
  6337  0033                     	ds	2
  6338  0035                     ___ftdiv@cntr:	
  6339                           
  6340                           ; 1 bytes @ 0x15
  6341  0035                     	ds	1
  6342  0036                     ___ftdiv@f3:	
  6343  0036                     ___ftmul@f2:	
  6344                           ; 3 bytes @ 0x16
  6345                           
  6346                           
  6347                           ; 3 bytes @ 0x16
  6348  0036                     	ds	3
  6349  0039                     ??___ftmul:	
  6350  0039                     ___ftdiv@exp:	
  6351                           ; 1 bytes @ 0x19
  6352                           
  6353                           
  6354                           ; 1 bytes @ 0x19
  6355  0039                     	ds	1
  6356  003A                     ___ftdiv@sign:	
  6357                           
  6358                           ; 1 bytes @ 0x1A
  6359  003A                     	ds	3
  6360  003D                     ___ftmul@exp:	
  6361                           
  6362                           ; 1 bytes @ 0x1D
  6363  003D                     	ds	1
  6364  003E                     ___ftmul@f3_as_product:	
  6365                           
  6366                           ; 3 bytes @ 0x1E
  6367  003E                     	ds	3
  6368  0041                     ___ftmul@cntr:	
  6369                           
  6370                           ; 1 bytes @ 0x21
  6371  0041                     	ds	1
  6372  0042                     ___ftmul@sign:	
  6373                           
  6374                           ; 1 bytes @ 0x22
  6375  0042                     	ds	1
  6376  0043                     ?_fround:	
  6377  0043                     ?_scale:	
  6378                           ; 3 bytes @ 0x23
  6379                           
  6380                           
  6381                           ; 3 bytes @ 0x23
  6382  0043                     	ds	3
  6383  0046                     ??_fround:	
  6384  0046                     ??_scale:	
  6385                           ; 1 bytes @ 0x26
  6386                           
  6387                           
  6388                           ; 1 bytes @ 0x26
  6389  0046                     	ds	2
  6390  0048                     _scale$2149:	
  6391                           
  6392                           ; 3 bytes @ 0x28
  6393  0048                     	ds	2
  6394  004A                     _fround$2148:	
  6395                           
  6396                           ; 3 bytes @ 0x2A
  6397  004A                     	ds	1
  6398  004B                     scale@scl:	
  6399                           
  6400                           ; 1 bytes @ 0x2B
  6401  004B                     	ds	2
  6402  004D                     _fround$2147:	
  6403                           
  6404                           ; 3 bytes @ 0x2D
  6405  004D                     	ds	3
  6406  0050                     fround@prec:	
  6407                           
  6408                           ; 1 bytes @ 0x30
  6409  0050                     	ds	1
  6410  0051                     ?___ftadd:	
  6411  0051                     ___ftadd@f1:	
  6412                           ; 3 bytes @ 0x31
  6413                           
  6414                           
  6415                           ; 3 bytes @ 0x31
  6416  0051                     	ds	3
  6417  0054                     ___ftadd@f2:	
  6418                           
  6419                           ; 3 bytes @ 0x34
  6420  0054                     	ds	3
  6421  0057                     ??___ftadd:	
  6422                           
  6423                           ; 1 bytes @ 0x37
  6424  0057                     	ds	4
  6425  005B                     ___ftadd@sign:	
  6426                           
  6427                           ; 1 bytes @ 0x3B
  6428  005B                     	ds	1
  6429  005C                     ___ftadd@exp2:	
  6430                           
  6431                           ; 1 bytes @ 0x3C
  6432  005C                     	ds	1
  6433  005D                     ___ftadd@exp1:	
  6434                           
  6435                           ; 1 bytes @ 0x3D
  6436  005D                     	ds	1
  6437  005E                     ?___ftsub:	
  6438  005E                     ?___fttol:	
  6439                           ; 3 bytes @ 0x3E
  6440                           
  6441  005E                     ___ftsub@f2:	
  6442                           ; 4 bytes @ 0x3E
  6443                           
  6444  005E                     ___fttol@f1:	
  6445                           ; 3 bytes @ 0x3E
  6446                           
  6447                           
  6448                           ; 3 bytes @ 0x3E
  6449  005E                     	ds	3
  6450  0061                     ___ftsub@f1:	
  6451                           
  6452                           ; 3 bytes @ 0x41
  6453  0061                     	ds	1
  6454  0062                     ??___fttol:	
  6455                           
  6456                           ; 1 bytes @ 0x42
  6457  0062                     	ds	4
  6458  0066                     ___fttol@sign1:	
  6459                           
  6460                           ; 1 bytes @ 0x46
  6461  0066                     	ds	1
  6462  0067                     ___fttol@lval:	
  6463                           
  6464                           ; 4 bytes @ 0x47
  6465  0067                     	ds	4
  6466  006B                     ___fttol@exp1:	
  6467                           
  6468                           ; 1 bytes @ 0x4B
  6469  006B                     	ds	1
  6470  006C                     ??_counter_state:	
  6471  006C                     ??_printCapa:	
  6472                           ; 1 bytes @ 0x4C
  6473                           
  6474  006C                     ?_measureInput:	
  6475                           ; 1 bytes @ 0x4C
  6476                           
  6477  006C                     ?_measureTemp:	
  6478                           ; 2 bytes @ 0x4C
  6479                           
  6480                           
  6481                           ; 2 bytes @ 0x4C
  6482  006C                     	ds	2
  6483  006E                     measureInput@r:	
  6484  006E                     measureTemp@r:	
  6485                           ; 2 bytes @ 0x4E
  6486                           
  6487                           
  6488                           ; 2 bytes @ 0x4E
  6489  006E                     	ds	2
  6490                           
  6491                           	psect	maintext
  6492  082D                     __pmaintext:	
  6493 ;;
  6494 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  6495 ;;
  6496 ;; *************** function _main *****************
  6497 ;; Defined at:
  6498 ;;		line 52 in file "main.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  state           1    3[BANK2 ] enum E14443
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  2   60[None  ] int 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : B3F/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6515 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6516 ;;Total ram usage:        4 bytes
  6517 ;; Hardware stack levels required when called:    8
  6518 ;; This function calls:
  6519 ;;		_capameter_state
  6520 ;;		_counter_state
  6521 ;;		_freqmeter_state
  6522 ;;		_ibtn_state
  6523 ;;		_printCapa
  6524 ;;		_printFreq
  6525 ;;		_pwm_state
  6526 ;;		_resmeter_state
  6527 ;;		_setCMP1InterruptHandler
  6528 ;;		_setTMR1Interrupt
  6529 ;;		_setTMR1InterruptHandler
  6530 ;;		_setTMR3InterruptHandler
  6531 ;;		_start
  6532 ;;		_tempmeter_state
  6533 ;;		_voltmeter_state
  6534 ;;		_writeo
  6535 ;; This function is called by:
  6536 ;;		Startup code after reset
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           
  6541                           ;psect for function _main
  6542  082D                     _main:	
  6543                           
  6544                           ;main.c: 54: state_t state = VOLTMETER;
  6545                           
  6546                           ;incstack = 0
  6547                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6548  082D  0142               	movlb	2	; select bank2
  6549  082E  01AB               	clrf	main@state^(0+256)
  6550                           
  6551                           ;main.c: 56: setTMR1InterruptHandler(refreshDisplay);
  6552  082F  3077               	movlw	low _refreshDisplay
  6553  0830  00F4               	movwf	setTMR1InterruptHandler@InterruptHandler
  6554  0831  301F               	movlw	high _refreshDisplay
  6555  0832  00F5               	movwf	setTMR1InterruptHandler@InterruptHandler+1
  6556  0833  319D  25BD  3188   	fcall	_setTMR1InterruptHandler
  6557                           
  6558                           ;main.c: 58: setCMP1InterruptHandler(computeCapa);
  6559  0836  3030               	movlw	low _computeCapa
  6560  0837  00F4               	movwf	setCMP1InterruptHandler@InterruptHandler
  6561  0838  301F               	movlw	high _computeCapa
  6562  0839  00F5               	movwf	setCMP1InterruptHandler@InterruptHandler+1
  6563  083A  319D  25B7  3188   	fcall	_setCMP1InterruptHandler
  6564                           
  6565                           ;main.c: 60: start();
  6566  083D  319F  2746  3188   	fcall	_start
  6567                           
  6568                           ;main.c: 62: setTMR1Interrupt(1);
  6569  0840  3001               	movlw	1
  6570  0841  319E  2616  3188   	fcall	_setTMR1Interrupt
  6571                           
  6572                           ;main.c: 64: LATEbits.LATE1=(0) ? 0:1;;
  6573  0844  0140               	movlb	0	; select bank0
  6574  0845  149A               	bsf	26,1	;volatile
  6575                           
  6576                           ;main.c: 65: LATEbits.LATE2=(0) ? 0:1;;
  6577  0846  151A               	bsf	26,2	;volatile
  6578                           
  6579                           ;main.c: 66: TRISAbits.TRISA5 = (1) ? 0:1;;
  6580  0847  1291               	bcf	17,5	;volatile
  6581                           
  6582                           ;main.c: 68: writeo("telec u1", 0);;
  6583  0848  3047               	movlw	low (STR_1| (0+32768))
  6584  0849  00A5               	movwf	writeo@a
  6585  084A  3091               	movlw	high (STR_1| (0+32768))
  6586  084B  00A6               	movwf	writeo@a+1
  6587  084C  01A7               	clrf	writeo@start
  6588  084D  3196  26B5  3188   	fcall	_writeo
  6589                           
  6590                           ;main.c: 69: _delay((unsigned long)((500)*(25000000LL/4000.0)));
  6591  0850  3010               	movlw	16
  6592  0851  0142               	movlb	2	; select bank2
  6593  0852  00AA               	movwf	(??_main^(0+256)+2)
  6594  0853  30DB               	movlw	219
  6595  0854  00A9               	movwf	(??_main^(0+256)+1)
  6596  0855  3072               	movlw	114
  6597  0856  00A8               	movwf	??_main^(0+256)
  6598  0857                     u7587:	
  6599  0857  0BA8               	decfsz	??_main^(0+256),f
  6600  0858  2857               	goto	u7587
  6601  0859  0BA9               	decfsz	(??_main^(0+256)+1),f
  6602  085A  2857               	goto	u7587
  6603  085B  0BAA               	decfsz	(??_main^(0+256)+2),f
  6604  085C  2857               	goto	u7587
  6605  085D  0000               	nop
  6606                           
  6607                           ;main.c: 73: switch(state){
  6608                           
  6609                           ;main.c: 71: while(1){
  6610  085E  28B1               	goto	l6465
  6611  085F                     l6427:	
  6612                           ;main.c: 75: case VOLTMETER:
  6613                           
  6614                           
  6615                           ;main.c: 76: voltmeter_state();
  6616  085F  3194  24E5  3188   	fcall	_voltmeter_state
  6617                           
  6618                           ;main.c: 77: break;
  6619  0862  28AC               	goto	l6467
  6620  0863                     l6429:	
  6621                           ;main.c: 79: case FREQMETER:
  6622                           
  6623                           
  6624                           ;main.c: 80: if(entering){
  6625  0863  0141               	movlb	1	; select bank1
  6626  0864  086F               	movf	_entering^(0+128),w	;volatile
  6627  0865  1903               	btfsc	3,2
  6628  0866  2871               	goto	l6433
  6629                           
  6630                           ;main.c: 81: freqmeter_state();
  6631  0867  3191  219A  3188   	fcall	_freqmeter_state
  6632                           
  6633                           ;main.c: 82: setTMR3InterruptHandler(computeFreq);
  6634  086A  3006               	movlw	low _computeFreq
  6635  086B  00F4               	movwf	setTMR3InterruptHandler@InterruptHandler
  6636  086C  301F               	movlw	high _computeFreq
  6637  086D  00F5               	movwf	setTMR3InterruptHandler@InterruptHandler+1
  6638  086E  319D  25C3  3188   	fcall	_setTMR3InterruptHandler
  6639  0871                     l6433:	
  6640                           
  6641                           ;main.c: 83: }
  6642                           ;main.c: 85: if(freshNews){
  6643  0871  0141               	movlb	1	; select bank1
  6644  0872  086B               	movf	_freshNews^(0+128),w	;volatile
  6645  0873  1903               	btfsc	3,2
  6646  0874  28AC               	goto	l6467
  6647                           
  6648                           ;main.c: 86: printFreq();
  6649  0875  3193  23F2  3188   	fcall	_printFreq
  6650                           
  6651                           ;main.c: 87: freshNews = 0;
  6652  0878  0141               	movlb	1	; select bank1
  6653  0879  01EB               	clrf	_freshNews^(0+128)	;volatile
  6654                           
  6655                           ;main.c: 88: freqmeter_state();
  6656  087A  3191  219A  3188   	fcall	_freqmeter_state
  6657                           
  6658                           ;main.c: 89: }
  6659                           ;main.c: 91: break;
  6660  087D  28AC               	goto	l6467
  6661  087E                     l6441:	
  6662                           ;main.c: 93: case COUNTER:
  6663                           
  6664                           
  6665                           ;main.c: 94: counter_state();
  6666  087E  3192  2254  3188   	fcall	_counter_state
  6667                           
  6668                           ;main.c: 95: break;
  6669  0881  28AC               	goto	l6467
  6670  0882                     l6443:	
  6671                           ;main.c: 97: case TEMPMETER:
  6672                           
  6673                           
  6674                           ;main.c: 98: tempmeter_state();
  6675  0882  3187  2790  3188   	fcall	_tempmeter_state
  6676                           
  6677                           ;main.c: 99: break;
  6678  0885  28AC               	goto	l6467
  6679  0886                     l6445:	
  6680                           ;main.c: 102: case CAPAMETER:
  6681                           
  6682                           
  6683                           ;main.c: 103: if(entering){
  6684  0886  0141               	movlb	1	; select bank1
  6685  0887  086F               	movf	_entering^(0+128),w	;volatile
  6686  0888  1903               	btfsc	3,2
  6687  0889  2894               	goto	l6449
  6688                           
  6689                           ;main.c: 104: setTMR3InterruptHandler(computeCapa);
  6690  088A  3030               	movlw	low _computeCapa
  6691  088B  00F4               	movwf	setTMR3InterruptHandler@InterruptHandler
  6692  088C  301F               	movlw	high _computeCapa
  6693  088D  00F5               	movwf	setTMR3InterruptHandler@InterruptHandler+1
  6694  088E  319D  25C3  3188   	fcall	_setTMR3InterruptHandler
  6695                           
  6696                           ;main.c: 105: capameter_state();
  6697  0891  3192  2224  3188   	fcall	_capameter_state
  6698  0894                     l6449:	
  6699                           
  6700                           ;main.c: 106: }
  6701                           ;main.c: 108: if(freshNews){
  6702  0894  0141               	movlb	1	; select bank1
  6703  0895  086B               	movf	_freshNews^(0+128),w	;volatile
  6704  0896  1903               	btfsc	3,2
  6705  0897  28AC               	goto	l6467
  6706                           
  6707                           ;main.c: 109: printCapa();
  6708  0898  3196  2624  3188   	fcall	_printCapa
  6709                           
  6710                           ;main.c: 110: freshNews = 0;
  6711  089B  0141               	movlb	1	; select bank1
  6712  089C  01EB               	clrf	_freshNews^(0+128)	;volatile
  6713                           
  6714                           ;main.c: 111: capameter_state();
  6715  089D  3192  2224  3188   	fcall	_capameter_state
  6716                           
  6717                           ;main.c: 112: }
  6718                           ;main.c: 114: break;
  6719  08A0  28AC               	goto	l6467
  6720  08A1                     l6457:	
  6721                           ;main.c: 116: case RESMETER:
  6722                           
  6723                           
  6724                           ;main.c: 117: resmeter_state();
  6725  08A1  319E  260D  3188   	fcall	_resmeter_state
  6726                           
  6727                           ;main.c: 118: break;
  6728  08A4  28AC               	goto	l6467
  6729  08A5                     l6459:	
  6730                           ;main.c: 120: case PWM:
  6731                           
  6732                           
  6733                           ;main.c: 121: pwm_state();
  6734  08A5  319E  2604  3188   	fcall	_pwm_state
  6735                           
  6736                           ;main.c: 122: break;
  6737  08A8  28AC               	goto	l6467
  6738  08A9                     l6461:	
  6739                           ;main.c: 124: case IBTN_ID:
  6740                           
  6741                           
  6742                           ;main.c: 125: ibtn_state();
  6743  08A9  319D  25FB  3188   	fcall	_ibtn_state
  6744  08AC                     l6467:	
  6745                           ;main.c: 127: }
  6746                           
  6747                           ;main.c: 126: break;
  6748                           
  6749                           
  6750                           ;main.c: 128: entering = 0;
  6751  08AC  0141               	movlb	1	; select bank1
  6752  08AD  01EF               	clrf	_entering^(0+128)	;volatile
  6753                           
  6754                           ;main.c: 130: if((!PORTBbits.RB7) && !0){
  6755  08AE  0140               	movlb	0	; select bank0
  6756  08AF  1F8D               	btfss	13,7	;volatile
  6757  08B0  28BD               	goto	l6471
  6758  08B1                     l6465:	
  6759  08B1  0142               	movlb	2	; select bank2
  6760  08B2  082B               	movf	main@state^(0+256),w
  6761                           
  6762                           ; Switch size 1, requested type "space"
  6763                           ; Number of cases is 8, Range of values is 0 to 7
  6764                           ; switch strategies available:
  6765                           ; Name         Instructions Cycles
  6766                           ; direct_byte           22     6 (fixed)
  6767                           ; simple_byte           25    13 (average)
  6768                           ; jumptable            260     6 (fixed)
  6769                           ;	Chosen strategy is direct_byte
  6770  08B3  0084               	movwf	4
  6771  08B4  3008               	movlw	8
  6772  08B5  0204               	subwf	4,w
  6773  08B6  1803               	skipnc
  6774  08B7  28AC               	goto	l6467
  6775  08B8  3198               	movlp	high S6513
  6776  08B9  3504               	lslf	4,w
  6777  08BA  3E00               	addlw	low S6513
  6778  08BB  0082               	movwf	2
  6779  08BC  28AC               	goto	l6467
  6780  08BD                     l6471:	
  6781                           
  6782                           ;main.c: 132: _delay((unsigned long)((1)*(25000000LL/4000.0)));
  6783  08BD  3009               	movlw	9
  6784  08BE  0142               	movlb	2	; select bank2
  6785  08BF  00A9               	movwf	(??_main^(0+256)+1)
  6786  08C0  301C               	movlw	28
  6787  08C1  00A8               	movwf	??_main^(0+256)
  6788  08C2                     u7597:	
  6789  08C2  0BA8               	decfsz	??_main^(0+256),f
  6790  08C3  28C2               	goto	u7597
  6791  08C4  0BA9               	decfsz	(??_main^(0+256)+1),f
  6792  08C5  28C2               	goto	u7597
  6793  08C6  0000               	nop
  6794  08C7                     l77:	
  6795                           ;main.c: 133: while((!PORTBbits.RB7));
  6796                           
  6797  08C7  0140               	movlb	0	; select bank0
  6798  08C8  1F8D               	btfss	13,7	;volatile
  6799  08C9  28C7               	goto	l77
  6800                           
  6801                           ;main.c: 135: state = (state+1) % STATES;
  6802  08CA  0142               	movlb	2	; select bank2
  6803  08CB  082B               	movf	main@state^(0+256),w
  6804  08CC  3E01               	addlw	1
  6805  08CD  3907               	andlw	7
  6806  08CE  00A8               	movwf	??_main^(0+256)
  6807  08CF  0828               	movf	??_main^(0+256),w
  6808  08D0  00AB               	movwf	main@state^(0+256)
  6809                           
  6810                           ;main.c: 136: entering = 1;
  6811  08D1  3001               	movlw	1
  6812  08D2  00A8               	movwf	??_main^(0+256)
  6813  08D3  0828               	movf	??_main^(0+256),w
  6814  08D4  0141               	movlb	1	; select bank1
  6815  08D5  00EF               	movwf	_entering^(0+128)	;volatile
  6816  08D6  28B1               	goto	l6465
  6817  08D7                     __end_of_main:	
  6818                           ;main.c: 137: }
  6819                           ;main.c: 138: }
  6820                           ;main.c: 140: return 0;
  6821                           ;	Return value of _main is never used
  6822                           
  6823                           
  6824                           	psect	swtext1
  6825  1800                     __pswtext1:	
  6826  1800                     S6513:	
  6827  1800  3188  285F         	ljmp	l6427
  6828  1802  3188  2863         	ljmp	l6429
  6829  1804  3188  287E         	ljmp	l6441
  6830  1806  3188  2882         	ljmp	l6443
  6831  1808  3188  2886         	ljmp	l6445
  6832  180A  3188  28A1         	ljmp	l6457
  6833  180C  3188  28A5         	ljmp	l6459
  6834  180E  3188  28A9         	ljmp	l6461
  6835                           
  6836                           	psect	text1
  6837  14E5                     __ptext1:	
  6838 ;; *************** function _voltmeter_state *****************
  6839 ;; Defined at:
  6840 ;;		line 9 in file "states.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  buf            17   47[BANK1 ] unsigned char [17]
  6845 ;;  m               2   64[BANK1 ] int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6857 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6858 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:       22 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    7
  6862 ;; This function calls:
  6863 ;;		___awtoft
  6864 ;;		___ftdiv
  6865 ;;		_measureInput
  6866 ;;		_sprintf
  6867 ;;		_writeo
  6868 ;; This function is called by:
  6869 ;;		_main
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           
  6874                           ;psect for function _voltmeter_state
  6875  14E5                     _voltmeter_state:	
  6876                           
  6877                           ;states.c: 11: char buf[17];
  6878                           ;states.c: 12: int m = measureInput();
  6879                           
  6880                           ;incstack = 0
  6881                           ; Regs used in _voltmeter_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6882  14E5  3192  2286  3194   	fcall	_measureInput
  6883  14E8  0140               	movlb	0	; select bank0
  6884  14E9  086D               	movf	?_measureInput+1,w
  6885  14EA  0141               	movlb	1	; select bank1
  6886  14EB  00E1               	movwf	(voltmeter_state@m+1)^(0+128)
  6887  14EC  0140               	movlb	0	; select bank0
  6888  14ED  086C               	movf	?_measureInput,w
  6889  14EE  0141               	movlb	1	; select bank1
  6890  14EF  00E0               	movwf	voltmeter_state@m^(0+128)
  6891                           
  6892                           ;states.c: 14: sprintf(buf, "%06.03f  v", m/1000.0);
  6893  14F0  3027               	movlw	low (STR_2| (0+32768))
  6894  14F1  00A0               	movwf	sprintf@f^(0+128)
  6895  14F2  3091               	movlw	high (STR_2| (0+32768))
  6896  14F3  00A1               	movwf	(sprintf@f^(0+128)+1)
  6897  14F4  3000               	movlw	0
  6898  14F5  0140               	movlb	0	; select bank0
  6899  14F6  00AB               	movwf	___ftdiv@f2
  6900  14F7  307A               	movlw	122
  6901  14F8  00AC               	movwf	___ftdiv@f2+1
  6902  14F9  3044               	movlw	68
  6903  14FA  00AD               	movwf	___ftdiv@f2+2
  6904  14FB  0141               	movlb	1	; select bank1
  6905  14FC  0861               	movf	(voltmeter_state@m+1)^(0+128),w
  6906  14FD  0140               	movlb	0	; select bank0
  6907  14FE  00A6               	movwf	___awtoft@c+1
  6908  14FF  0141               	movlb	1	; select bank1
  6909  1500  0860               	movf	voltmeter_state@m^(0+128),w
  6910  1501  0140               	movlb	0	; select bank0
  6911  1502  00A5               	movwf	___awtoft@c
  6912  1503  3191  21BA  3194   	fcall	___awtoft
  6913  1506  0140               	movlb	0	; select bank0
  6914  1507  0825               	movf	?___awtoft,w
  6915  1508  00AE               	movwf	___ftdiv@f1
  6916  1509  0826               	movf	?___awtoft+1,w
  6917  150A  00AF               	movwf	___ftdiv@f1+1
  6918  150B  0827               	movf	?___awtoft+2,w
  6919  150C  00B0               	movwf	___ftdiv@f1+2
  6920  150D  3197  2757  3194   	fcall	___ftdiv
  6921  1510  0140               	movlb	0	; select bank0
  6922  1511  082B               	movf	?___ftdiv,w
  6923  1512  0141               	movlb	1	; select bank1
  6924  1513  00A2               	movwf	(?_sprintf^(0+128)+2)
  6925  1514  0140               	movlb	0	; select bank0
  6926  1515  082C               	movf	?___ftdiv+1,w
  6927  1516  0141               	movlb	1	; select bank1
  6928  1517  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  6929  1518  0140               	movlb	0	; select bank0
  6930  1519  082D               	movf	?___ftdiv+2,w
  6931  151A  0141               	movlb	1	; select bank1
  6932  151B  00A4               	movwf	((?_sprintf+2)^(0+128)+2)
  6933  151C  30CF               	movlw	(low (voltmeter_state@buf| 0))& (0+255)
  6934  151D  3180  2050  3194   	fcall	_sprintf
  6935                           
  6936                           ;states.c: 15: writeo(buf, 0);;
  6937  1520  30CF               	movlw	low voltmeter_state@buf
  6938  1521  0140               	movlb	0	; select bank0
  6939  1522  00A5               	movwf	writeo@a
  6940  1523  3000               	movlw	high voltmeter_state@buf
  6941  1524  00A6               	movwf	writeo@a+1
  6942  1525  01A7               	clrf	writeo@start
  6943  1526  3196  26B5  3194   	fcall	_writeo
  6944                           
  6945                           ;states.c: 17: _delay((unsigned long)((100)*(25000000LL/4000.0)));
  6946  1529  3004               	movlw	4
  6947  152A  0141               	movlb	1	; select bank1
  6948  152B  00CE               	movwf	(??_voltmeter_state^(0+128)+2)
  6949  152C  302C               	movlw	44
  6950  152D  00CD               	movwf	(??_voltmeter_state^(0+128)+1)
  6951  152E  30AD               	movlw	173
  6952  152F  00CC               	movwf	??_voltmeter_state^(0+128)
  6953  1530                     u7607:	
  6954  1530  0BCC               	decfsz	??_voltmeter_state^(0+128),f
  6955  1531  2D30               	goto	u7607
  6956  1532  0BCD               	decfsz	(??_voltmeter_state^(0+128)+1),f
  6957  1533  2D30               	goto	u7607
  6958  1534  0BCE               	decfsz	(??_voltmeter_state^(0+128)+2),f
  6959  1535  2D30               	goto	u7607
  6960  1536  3200               	nop2
  6961  1537  0008               	return
  6962  1538                     __end_of_voltmeter_state:	
  6963                           
  6964                           	psect	text2
  6965  1286                     __ptext2:	
  6966 ;; *************** function _measureInput *****************
  6967 ;; Defined at:
  6968 ;;		line 20 in file "states.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  r               2   78[BANK0 ] unsigned int 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  2   76[BANK0 ] unsigned int 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2, status,0, pclath, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  6982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:        4 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    5
  6989 ;; This function calls:
  6990 ;;		_ADC_GetSingleConversion
  6991 ;;		___ftmul
  6992 ;;		___fttol
  6993 ;;		___lwtoft
  6994 ;; This function is called by:
  6995 ;;		_voltmeter_state
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           
  7000                           ;psect for function _measureInput
  7001  1286                     _measureInput:	
  7002                           
  7003                           ;states.c: 22: adc_result_t r;
  7004                           ;states.c: 24: LATEbits.LATE1=(1) ? 0:1;;
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in _measureInput: [wreg+status,2+status,0+pclath+cstack]
  7008  1286  0140               	movlb	0	; select bank0
  7009  1287  109A               	bcf	26,1	;volatile
  7010                           
  7011                           ;states.c: 25: r = ADC_GetSingleConversion(channel_ANA2);
  7012  1288  3002               	movlw	2
  7013  1289  319E  265A  3192   	fcall	_ADC_GetSingleConversion
  7014  128C  0875               	movf	?_ADC_GetSingleConversion+1,w
  7015  128D  0140               	movlb	0	; select bank0
  7016  128E  00EF               	movwf	measureInput@r+1
  7017  128F  0874               	movf	?_ADC_GetSingleConversion,w
  7018  1290  00EE               	movwf	measureInput@r
  7019                           
  7020                           ;states.c: 26: LATEbits.LATE1=(0) ? 0:1;;
  7021  1291  149A               	bsf	26,1	;volatile
  7022                           
  7023                           ;states.c: 28: return (uint16_t)(((double)r)*14.96648);
  7024  1292  086F               	movf	measureInput@r+1,w
  7025  1293  00A6               	movwf	___lwtoft@c+1
  7026  1294  086E               	movf	measureInput@r,w
  7027  1295  00A5               	movwf	___lwtoft@c
  7028  1296  319F  271B  3192   	fcall	___lwtoft
  7029  1299  0140               	movlb	0	; select bank0
  7030  129A  0825               	movf	?___lwtoft,w
  7031  129B  00B6               	movwf	___ftmul@f2
  7032  129C  0826               	movf	?___lwtoft+1,w
  7033  129D  00B7               	movwf	___ftmul@f2+1
  7034  129E  0827               	movf	?___lwtoft+2,w
  7035  129F  00B8               	movwf	___ftmul@f2+2
  7036  12A0  3077               	movlw	119
  7037  12A1  00B3               	movwf	___ftmul@f1
  7038  12A2  306F               	movlw	111
  7039  12A3  00B4               	movwf	___ftmul@f1+1
  7040  12A4  3041               	movlw	65
  7041  12A5  00B5               	movwf	___ftmul@f1+2
  7042  12A6  3188  20D7  3192   	fcall	___ftmul
  7043  12A9  0140               	movlb	0	; select bank0
  7044  12AA  0833               	movf	?___ftmul,w
  7045  12AB  00DE               	movwf	___fttol@f1
  7046  12AC  0834               	movf	?___ftmul+1,w
  7047  12AD  00DF               	movwf	___fttol@f1+1
  7048  12AE  0835               	movf	?___ftmul+2,w
  7049  12AF  00E0               	movwf	___fttol@f1+2
  7050  12B0  3195  259D         	fcall	___fttol
  7051  12B2  0140               	movlb	0	; select bank0
  7052  12B3  085F               	movf	?___fttol+1,w
  7053  12B4  00ED               	movwf	?_measureInput+1
  7054  12B5  085E               	movf	?___fttol,w
  7055  12B6  00EC               	movwf	?_measureInput
  7056  12B7  0008               	return
  7057  12B8                     __end_of_measureInput:	
  7058                           
  7059                           	psect	text3
  7060  0790                     __ptext3:	
  7061 ;; *************** function _tempmeter_state *****************
  7062 ;; Defined at:
  7063 ;;		line 91 in file "states.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  buf            17   47[BANK1 ] unsigned char [17]
  7068 ;;  m               2   64[BANK1 ] int 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7079 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7080 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7081 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7082 ;;Total ram usage:       22 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    7
  7085 ;; This function calls:
  7086 ;;		___awtoft
  7087 ;;		___ftdiv
  7088 ;;		_measureTemp
  7089 ;;		_sprintf
  7090 ;;		_writeo
  7091 ;; This function is called by:
  7092 ;;		_main
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           
  7097                           ;psect for function _tempmeter_state
  7098  0790                     _tempmeter_state:	
  7099                           
  7100                           ;states.c: 93: char buf[17];
  7101                           ;states.c: 94: int m = ((((int)measureTemp())< 0 ) ? -((int)measureTemp()) : ((int)measu
      +                          reTemp()));
  7102                           
  7103                           ;incstack = 0
  7104                           ; Regs used in _tempmeter_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7105  0790  3193  2327  3187   	fcall	_measureTemp
  7106  0793  0140               	movlb	0	; select bank0
  7107  0794  1BED               	btfsc	?_measureTemp+1,7
  7108  0795  2FA2               	goto	l6345
  7109  0796  3193  2327  3187   	fcall	_measureTemp
  7110  0799  0140               	movlb	0	; select bank0
  7111  079A  086D               	movf	?_measureTemp+1,w
  7112  079B  0141               	movlb	1	; select bank1
  7113  079C  00E1               	movwf	(tempmeter_state@m+1)^(0+128)
  7114  079D  0140               	movlb	0	; select bank0
  7115  079E  086C               	movf	?_measureTemp,w
  7116  079F  0141               	movlb	1	; select bank1
  7117  07A0  00E0               	movwf	tempmeter_state@m^(0+128)
  7118  07A1  2FB4               	goto	l6347
  7119  07A2                     l6345:	
  7120  07A2  3193  2327  3187   	fcall	_measureTemp
  7121  07A5  0140               	movlb	0	; select bank0
  7122  07A6  096C               	comf	?_measureTemp,w
  7123  07A7  0141               	movlb	1	; select bank1
  7124  07A8  00CC               	movwf	??_tempmeter_state^(0+128)
  7125  07A9  0140               	movlb	0	; select bank0
  7126  07AA  096D               	comf	?_measureTemp+1,w
  7127  07AB  0141               	movlb	1	; select bank1
  7128  07AC  00CD               	movwf	(??_tempmeter_state^(0+128)+1)
  7129  07AD  0ACC               	incf	??_tempmeter_state^(0+128),f
  7130  07AE  1903               	skipnz
  7131  07AF  0ACD               	incf	(??_tempmeter_state^(0+128)+1),f
  7132  07B0  084C               	movf	??_tempmeter_state^(0+128),w
  7133  07B1  00E0               	movwf	tempmeter_state@m^(0+128)
  7134  07B2  084D               	movf	(??_tempmeter_state+1)^(0+128),w
  7135  07B3  00E1               	movwf	(tempmeter_state@m+1)^(0+128)
  7136  07B4                     l6347:	
  7137                           
  7138                           ;states.c: 96: sprintf(buf, "%+06.02f *c", m/1000.0);
  7139  07B4  3005               	movlw	low (STR_6| (0+32768))
  7140  07B5  00A0               	movwf	sprintf@f^(0+128)
  7141  07B6  3091               	movlw	high (STR_6| (0+32768))
  7142  07B7  00A1               	movwf	(sprintf@f^(0+128)+1)
  7143  07B8  3000               	movlw	0
  7144  07B9  0140               	movlb	0	; select bank0
  7145  07BA  00AB               	movwf	___ftdiv@f2
  7146  07BB  307A               	movlw	122
  7147  07BC  00AC               	movwf	___ftdiv@f2+1
  7148  07BD  3044               	movlw	68
  7149  07BE  00AD               	movwf	___ftdiv@f2+2
  7150  07BF  0141               	movlb	1	; select bank1
  7151  07C0  0861               	movf	(tempmeter_state@m+1)^(0+128),w
  7152  07C1  0140               	movlb	0	; select bank0
  7153  07C2  00A6               	movwf	___awtoft@c+1
  7154  07C3  0141               	movlb	1	; select bank1
  7155  07C4  0860               	movf	tempmeter_state@m^(0+128),w
  7156  07C5  0140               	movlb	0	; select bank0
  7157  07C6  00A5               	movwf	___awtoft@c
  7158  07C7  3191  21BA  3187   	fcall	___awtoft
  7159  07CA  0140               	movlb	0	; select bank0
  7160  07CB  0825               	movf	?___awtoft,w
  7161  07CC  00AE               	movwf	___ftdiv@f1
  7162  07CD  0826               	movf	?___awtoft+1,w
  7163  07CE  00AF               	movwf	___ftdiv@f1+1
  7164  07CF  0827               	movf	?___awtoft+2,w
  7165  07D0  00B0               	movwf	___ftdiv@f1+2
  7166  07D1  3197  2757  3187   	fcall	___ftdiv
  7167  07D4  0140               	movlb	0	; select bank0
  7168  07D5  082B               	movf	?___ftdiv,w
  7169  07D6  0141               	movlb	1	; select bank1
  7170  07D7  00A2               	movwf	(?_sprintf^(0+128)+2)
  7171  07D8  0140               	movlb	0	; select bank0
  7172  07D9  082C               	movf	?___ftdiv+1,w
  7173  07DA  0141               	movlb	1	; select bank1
  7174  07DB  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  7175  07DC  0140               	movlb	0	; select bank0
  7176  07DD  082D               	movf	?___ftdiv+2,w
  7177  07DE  0141               	movlb	1	; select bank1
  7178  07DF  00A4               	movwf	((?_sprintf+2)^(0+128)+2)
  7179  07E0  30CF               	movlw	(low (tempmeter_state@buf| 0))& (0+255)
  7180  07E1  3180  2050  3187   	fcall	_sprintf
  7181                           
  7182                           ;states.c: 97: writeo(buf, 0);;
  7183  07E4  30CF               	movlw	low tempmeter_state@buf
  7184  07E5  0140               	movlb	0	; select bank0
  7185  07E6  00A5               	movwf	writeo@a
  7186  07E7  3000               	movlw	high tempmeter_state@buf
  7187  07E8  00A6               	movwf	writeo@a+1
  7188  07E9  01A7               	clrf	writeo@start
  7189  07EA  3196  26B5  3187   	fcall	_writeo
  7190                           
  7191                           ;states.c: 99: _delay((unsigned long)((100)*(25000000LL/4000.0)));
  7192  07ED  3004               	movlw	4
  7193  07EE  0141               	movlb	1	; select bank1
  7194  07EF  00CE               	movwf	(??_tempmeter_state^(0+128)+2)
  7195  07F0  302C               	movlw	44
  7196  07F1  00CD               	movwf	(??_tempmeter_state^(0+128)+1)
  7197  07F2  30AD               	movlw	173
  7198  07F3  00CC               	movwf	??_tempmeter_state^(0+128)
  7199  07F4                     u7617:	
  7200  07F4  0BCC               	decfsz	??_tempmeter_state^(0+128),f
  7201  07F5  2FF4               	goto	u7617
  7202  07F6  0BCD               	decfsz	(??_tempmeter_state^(0+128)+1),f
  7203  07F7  2FF4               	goto	u7617
  7204  07F8  0BCE               	decfsz	(??_tempmeter_state^(0+128)+2),f
  7205  07F9  2FF4               	goto	u7617
  7206  07FA  3200               	nop2
  7207  07FB  0008               	return
  7208  07FC                     __end_of_tempmeter_state:	
  7209                           
  7210                           	psect	text4
  7211  1327                     __ptext4:	
  7212 ;; *************** function _measureTemp *****************
  7213 ;; Defined at:
  7214 ;;		line 102 in file "states.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  r               2   78[BANK0 ] unsigned int 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  2   76[BANK0 ] unsigned int 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7231 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7232 ;;Total ram usage:        4 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    5
  7235 ;; This function calls:
  7236 ;;		_ADC_GetSingleConversion
  7237 ;;		___ftadd
  7238 ;;		___ftmul
  7239 ;;		___fttol
  7240 ;;		___lwtoft
  7241 ;; This function is called by:
  7242 ;;		_tempmeter_state
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function _measureTemp
  7248  1327                     _measureTemp:	
  7249                           
  7250                           ;states.c: 104: adc_result_t r;
  7251                           ;states.c: 105: FVRCONbits.TSEN = 1;
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in _measureTemp: [wreg+status,2+status,0+pclath+cstack]
  7255  1327  0152               	movlb	18	; select bank18
  7256  1328  168C               	bsf	12,5	;volatile
  7257                           
  7258                           ;states.c: 106: FVRCONbits.TSRNG = 1;
  7259  1329  160C               	bsf	12,4	;volatile
  7260                           
  7261                           ;states.c: 108: r = ADC_GetSingleConversion(channel_Temp);
  7262  132A  303D               	movlw	61
  7263  132B  319E  265A  3193   	fcall	_ADC_GetSingleConversion
  7264  132E  0875               	movf	?_ADC_GetSingleConversion+1,w
  7265  132F  0140               	movlb	0	; select bank0
  7266  1330  00EF               	movwf	measureTemp@r+1
  7267  1331  0874               	movf	?_ADC_GetSingleConversion,w
  7268  1332  00EE               	movwf	measureTemp@r
  7269                           
  7270                           ;states.c: 110: return (uint16_t)(((double)r)*(-4.89*40.0/4.0) + (5000.0));
  7271  1333  086F               	movf	measureTemp@r+1,w
  7272  1334  00A6               	movwf	___lwtoft@c+1
  7273  1335  086E               	movf	measureTemp@r,w
  7274  1336  00A5               	movwf	___lwtoft@c
  7275  1337  319F  271B  3193   	fcall	___lwtoft
  7276  133A  0140               	movlb	0	; select bank0
  7277  133B  0825               	movf	?___lwtoft,w
  7278  133C  00B6               	movwf	___ftmul@f2
  7279  133D  0826               	movf	?___lwtoft+1,w
  7280  133E  00B7               	movwf	___ftmul@f2+1
  7281  133F  0827               	movf	?___lwtoft+2,w
  7282  1340  00B8               	movwf	___ftmul@f2+2
  7283  1341  309A               	movlw	154
  7284  1342  00B3               	movwf	___ftmul@f1
  7285  1343  3043               	movlw	67
  7286  1344  00B4               	movwf	___ftmul@f1+1
  7287  1345  30C2               	movlw	194
  7288  1346  00B5               	movwf	___ftmul@f1+2
  7289  1347  3188  20D7  3193   	fcall	___ftmul
  7290  134A  0140               	movlb	0	; select bank0
  7291  134B  0833               	movf	?___ftmul,w
  7292  134C  00D4               	movwf	___ftadd@f2
  7293  134D  0834               	movf	?___ftmul+1,w
  7294  134E  00D5               	movwf	___ftadd@f2+1
  7295  134F  0835               	movf	?___ftmul+2,w
  7296  1350  00D6               	movwf	___ftadd@f2+2
  7297  1351  3040               	movlw	64
  7298  1352  00D1               	movwf	___ftadd@f1
  7299  1353  309C               	movlw	156
  7300  1354  00D2               	movwf	___ftadd@f1+1
  7301  1355  3045               	movlw	69
  7302  1356  00D3               	movwf	___ftadd@f1+2
  7303  1357  318A  2241  3193   	fcall	___ftadd
  7304  135A  0140               	movlb	0	; select bank0
  7305  135B  0851               	movf	?___ftadd,w
  7306  135C  00DE               	movwf	___fttol@f1
  7307  135D  0852               	movf	?___ftadd+1,w
  7308  135E  00DF               	movwf	___fttol@f1+1
  7309  135F  0853               	movf	?___ftadd+2,w
  7310  1360  00E0               	movwf	___fttol@f1+2
  7311  1361  3195  259D         	fcall	___fttol
  7312  1363  0140               	movlb	0	; select bank0
  7313  1364  085F               	movf	?___fttol+1,w
  7314  1365  00ED               	movwf	?_measureTemp+1
  7315  1366  085E               	movf	?___fttol,w
  7316  1367  00EC               	movwf	?_measureTemp
  7317  1368  0008               	return
  7318  1369                     __end_of_measureTemp:	
  7319                           
  7320                           	psect	text5
  7321  1E5A                     __ptext5:	
  7322 ;; *************** function _ADC_GetSingleConversion *****************
  7323 ;; Defined at:
  7324 ;;		line 73 in file "adc.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  channel         1    wreg     enum E14148
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  channel         1    0[BANK0 ] enum E14148
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    4[COMMON] unsigned int 
  7331 ;; Registers used:
  7332 ;;		wreg
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7338 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7341 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7342 ;;Total ram usage:        4 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    3
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_measureInput
  7349 ;;		_measureTemp
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           
  7354                           ;psect for function _ADC_GetSingleConversion
  7355  1E5A                     _ADC_GetSingleConversion:	
  7356                           
  7357                           ;incstack = 0
  7358                           ; Regs used in _ADC_GetSingleConversion: [wreg]
  7359                           ;ADC_GetSingleConversion@channel stored from wreg
  7360  1E5A  0140               	movlb	0	; select bank0
  7361  1E5B  00A0               	movwf	ADC_GetSingleConversion@channel
  7362                           
  7363                           ;adc.c: 76: ADPCH = channel;
  7364  1E5C  0820               	movf	ADC_GetSingleConversion@channel,w
  7365  1E5D  0141               	movlb	1	; select bank1
  7366  1E5E  009E               	movwf	30	;volatile
  7367                           
  7368                           ;adc.c: 79: ADCON0bits.ADON = 1;
  7369  1E5F  1793               	bsf	19,7	;volatile
  7370                           
  7371                           ;adc.c: 82: ADCON0bits.ADCONT = 0;
  7372  1E60  1313               	bcf	19,6	;volatile
  7373                           
  7374                           ;adc.c: 85: ADCON0bits.ADGO = 1;
  7375  1E61  1413               	bsf	19,0	;volatile
  7376  1E62                     l320:	
  7377                           ;adc.c: 89: {
  7378                           
  7379                           ;adc.c: 88: while (ADCON0bits.ADGO)
  7380                           
  7381  1E62  1813               	btfsc	19,0	;volatile
  7382  1E63  2E62               	goto	l320
  7383                           
  7384                           ;adc.c: 90: }
  7385                           ;adc.c: 93: return ((ADRESH << 8) + ADRESL);
  7386  1E64  080D               	movf	13,w	;volatile
  7387  1E65  00F5               	movwf	?_ADC_GetSingleConversion+1
  7388  1E66  080C               	movf	12,w	;volatile
  7389  1E67  00F4               	movwf	?_ADC_GetSingleConversion
  7390  1E68  0008               	return
  7391  1E69                     __end_of_ADC_GetSingleConversion:	
  7392                           
  7393                           	psect	text6
  7394  11BA                     __ptext6:	
  7395 ;; *************** function ___awtoft *****************
  7396 ;; Defined at:
  7397 ;;		line 32 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  c               2    5[BANK0 ] int 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  sign            1   10[BANK0 ] unsigned char 
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  3    5[BANK0 ] float 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2, status,0, pclath, cstack
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7411 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7413 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7414 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7415 ;;Total ram usage:        6 bytes
  7416 ;; Hardware stack levels used:    1
  7417 ;; Hardware stack levels required when called:    4
  7418 ;; This function calls:
  7419 ;;		___ftpack
  7420 ;; This function is called by:
  7421 ;;		_voltmeter_state
  7422 ;;		_tempmeter_state
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           
  7427                           ;psect for function ___awtoft
  7428  11BA                     ___awtoft:	
  7429                           
  7430                           ;incstack = 0
  7431                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7432  11BA  0140               	movlb	0	; select bank0
  7433  11BB  01AA               	clrf	___awtoft@sign
  7434  11BC  1FA6               	btfss	___awtoft@c+1,7
  7435  11BD  29C5               	goto	l6241
  7436  11BE  09A5               	comf	___awtoft@c,f
  7437  11BF  09A6               	comf	___awtoft@c+1,f
  7438  11C0  0AA5               	incf	___awtoft@c,f
  7439  11C1  1903               	skipnz
  7440  11C2  0AA6               	incf	___awtoft@c+1,f
  7441  11C3  01AA               	clrf	___awtoft@sign
  7442  11C4  0AAA               	incf	___awtoft@sign,f
  7443  11C5                     l6241:	
  7444  11C5  0825               	movf	___awtoft@c,w
  7445  11C6  00A0               	movwf	___ftpack@arg
  7446  11C7  0826               	movf	___awtoft@c+1,w
  7447  11C8  00A1               	movwf	___ftpack@arg+1
  7448  11C9  01A2               	clrf	___ftpack@arg+2
  7449  11CA  308E               	movlw	142
  7450  11CB  00A8               	movwf	??___awtoft
  7451  11CC  0828               	movf	??___awtoft,w
  7452  11CD  00A3               	movwf	___ftpack@exp
  7453  11CE  082A               	movf	___awtoft@sign,w
  7454  11CF  00A9               	movwf	??___awtoft+1
  7455  11D0  0829               	movf	??___awtoft+1,w
  7456  11D1  00A4               	movwf	___ftpack@sign
  7457  11D2  3195  2538         	fcall	___ftpack
  7458  11D4  0140               	movlb	0	; select bank0
  7459  11D5  0820               	movf	?___ftpack,w
  7460  11D6  00A5               	movwf	?___awtoft
  7461  11D7  0821               	movf	?___ftpack+1,w
  7462  11D8  00A6               	movwf	?___awtoft+1
  7463  11D9  0822               	movf	?___ftpack+2,w
  7464  11DA  00A7               	movwf	?___awtoft+2
  7465  11DB  0008               	return
  7466  11DC                     __end_of___awtoft:	
  7467                           
  7468                           	psect	text7
  7469  1F46                     __ptext7:	
  7470 ;; *************** function _start *****************
  7471 ;; Defined at:
  7472 ;;		line 8 in file "init.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    5
  7493 ;; This function calls:
  7494 ;;		_init_ADC
  7495 ;;		_init_CLCs
  7496 ;;		_init_CMP_DAC
  7497 ;;		_init_PPS
  7498 ;;		_init_TMRs
  7499 ;;		_init_global
  7500 ;;		_init_interrupt
  7501 ;;		_init_osc
  7502 ;; This function is called by:
  7503 ;;		_main
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           
  7508                           ;psect for function _start
  7509  1F46                     _start:	
  7510                           
  7511                           ;init.c: 10: init_osc();
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _start: [wreg+status,2+status,0+pclath+cstack]
  7515  1F46  319E  2628  319F   	fcall	_init_osc
  7516                           
  7517                           ;init.c: 11: init_global();
  7518  1F49  3191  21DC  319F   	fcall	_init_global
  7519                           
  7520                           ;init.c: 12: init_PPS();
  7521  1F4C  319F  275E  319F   	fcall	_init_PPS
  7522                           
  7523                           ;init.c: 13: init_CLCs();
  7524  1F4F  319E  2632  319F   	fcall	_init_CLCs
  7525                           
  7526                           ;init.c: 14: init_CMP_DAC();
  7527  1F52  319E  26DF  319F   	fcall	_init_CMP_DAC
  7528                           
  7529                           ;init.c: 15: init_ADC();
  7530  1F55  319F  27C7  319F   	fcall	_init_ADC
  7531                           
  7532                           ;init.c: 16: init_TMRs();
  7533  1F58  319E  261F  319F   	fcall	_init_TMRs
  7534                           
  7535                           ;init.c: 17: init_interrupt();
  7536  1F5B  3187  27FC         	fcall	_init_interrupt
  7537  1F5D  0008               	return
  7538  1F5E                     __end_of_start:	
  7539                           
  7540                           	psect	text8
  7541  1E28                     __ptext8:	
  7542 ;; *************** function _init_osc *****************
  7543 ;; Defined at:
  7544 ;;		line 20 in file "init.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    3
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_start
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           
  7573                           ;psect for function _init_osc
  7574  1E28                     _init_osc:	
  7575                           
  7576                           ;init.c: 23: OSCCON1 = 0x70;
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _init_osc: [wreg+status,2]
  7580  1E28  3070               	movlw	112
  7581  1E29  0151               	movlb	17	; select bank17
  7582  1E2A  008D               	movwf	13	;volatile
  7583                           
  7584                           ;init.c: 25: OSCCON3 = 0x00;
  7585  1E2B  018F               	clrf	15	;volatile
  7586                           
  7587                           ;init.c: 27: OSCEN = 0x00;
  7588  1E2C  0191               	clrf	17	;volatile
  7589                           
  7590                           ;init.c: 29: OSCFRQ = 0x02;
  7591  1E2D  3002               	movlw	2
  7592  1E2E  0093               	movwf	19	;volatile
  7593                           
  7594                           ;init.c: 31: OSCSTAT = 0x00;
  7595  1E2F  0190               	clrf	16	;volatile
  7596                           
  7597                           ;init.c: 33: OSCTUNE = 0x00;
  7598  1E30  0192               	clrf	18	;volatile
  7599  1E31  0008               	return
  7600  1E32                     __end_of_init_osc:	
  7601                           
  7602                           	psect	text9
  7603  07FC                     __ptext9:	
  7604 ;; *************** function _init_interrupt *****************
  7605 ;; Defined at:
  7606 ;;		line 89 in file "init.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		None
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    3
  7627 ;; This function calls:
  7628 ;;		Nothing
  7629 ;; This function is called by:
  7630 ;;		_start
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           
  7635                           ;psect for function _init_interrupt
  7636  07FC                     _init_interrupt:	
  7637                           
  7638                           ;init.c: 91: INTCONbits.GIE = 1;
  7639                           
  7640                           ;incstack = 0
  7641                           ; Regs used in _init_interrupt: []
  7642  07FC  178B               	bsf	11,7	;volatile
  7643                           
  7644                           ;init.c: 92: INTCONbits.PEIE = 1;
  7645  07FD  170B               	bsf	11,6	;volatile
  7646  07FE  0008               	return
  7647  07FF                     __end_of_init_interrupt:	
  7648                           
  7649                           	psect	text10
  7650  11DC                     __ptext10:	
  7651 ;; *************** function _init_global *****************
  7652 ;; Defined at:
  7653 ;;		line 36 in file "init.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:        0 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; Hardware stack levels required when called:    3
  7674 ;; This function calls:
  7675 ;;		Nothing
  7676 ;; This function is called by:
  7677 ;;		_start
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           
  7681                           
  7682                           ;psect for function _init_global
  7683  11DC                     _init_global:	
  7684                           
  7685                           ;init.c: 38: LATA = 0x00;
  7686                           
  7687                           ;incstack = 0
  7688                           ; Regs used in _init_global: [wreg+status,2]
  7689  11DC  0140               	movlb	0	; select bank0
  7690  11DD  0196               	clrf	22	;volatile
  7691                           
  7692                           ;init.c: 39: LATB = 0x00;
  7693  11DE  0197               	clrf	23	;volatile
  7694                           
  7695                           ;init.c: 40: LATC = 0x00;
  7696  11DF  0198               	clrf	24	;volatile
  7697                           
  7698                           ;init.c: 41: LATD = 0xFF;
  7699  11E0  30FF               	movlw	255
  7700  11E1  0099               	movwf	25	;volatile
  7701                           
  7702                           ;init.c: 42: LATE = 0x00;
  7703  11E2  019A               	clrf	26	;volatile
  7704                           
  7705                           ;init.c: 45: TRISA = 0b11000111;
  7706  11E3  30C7               	movlw	199
  7707  11E4  0091               	movwf	17	;volatile
  7708                           
  7709                           ;init.c: 46: TRISB = 0b11111110;
  7710  11E5  30FE               	movlw	254
  7711  11E6  0092               	movwf	18	;volatile
  7712                           
  7713                           ;init.c: 47: TRISC = 0b00000000;
  7714  11E7  0193               	clrf	19	;volatile
  7715                           
  7716                           ;init.c: 48: TRISD = 0b00000000;
  7717  11E8  0194               	clrf	20	;volatile
  7718                           
  7719                           ;init.c: 49: TRISE = 0b00000001;
  7720  11E9  3001               	movlw	1
  7721  11EA  0095               	movwf	21	;volatile
  7722                           
  7723                           ;init.c: 51: ANSELA = 0x04;
  7724  11EB  3004               	movlw	4
  7725  11EC  017E               	movlb	62	; select bank62
  7726  11ED  00B8               	movwf	56	;volatile
  7727                           
  7728                           ;init.c: 52: ANSELB = 0x00;
  7729  11EE  01C3               	clrf	67	;volatile
  7730                           
  7731                           ;init.c: 53: ANSELC = 0x00;
  7732  11EF  01CE               	clrf	78	;volatile
  7733                           
  7734                           ;init.c: 54: ANSELD = 0x00;
  7735  11F0  01D9               	clrf	89	;volatile
  7736                           
  7737                           ;init.c: 55: ANSELE = 0x00;
  7738  11F1  01E4               	clrf	100	;volatile
  7739                           
  7740                           ;init.c: 57: WPUA = 0x03;
  7741  11F2  3003               	movlw	3
  7742  11F3  00B9               	movwf	57	;volatile
  7743                           
  7744                           ;init.c: 58: WPUB = 0xE0;
  7745  11F4  30E0               	movlw	224
  7746  11F5  00C4               	movwf	68	;volatile
  7747                           
  7748                           ;init.c: 59: WPUC = 0x00;
  7749  11F6  01CF               	clrf	79	;volatile
  7750                           
  7751                           ;init.c: 60: WPUD = 0x00;
  7752  11F7  01DA               	clrf	90	;volatile
  7753                           
  7754                           ;init.c: 61: WPUE = 0x00;
  7755  11F8  01E5               	clrf	101	;volatile
  7756                           
  7757                           ;init.c: 64: ODCONE = 0x00;
  7758  11F9  01E6               	clrf	102	;volatile
  7759                           
  7760                           ;init.c: 65: ODCONA = 0x00;
  7761  11FA  01BA               	clrf	58	;volatile
  7762                           
  7763                           ;init.c: 66: ODCONB = 0x00;
  7764  11FB  01C5               	clrf	69	;volatile
  7765                           
  7766                           ;init.c: 67: ODCONC = 0x00;
  7767  11FC  01D0               	clrf	80	;volatile
  7768                           
  7769                           ;init.c: 68: ODCOND = 0x00;
  7770  11FD  01DB               	clrf	91	;volatile
  7771  11FE  0008               	return
  7772  11FF                     __end_of_init_global:	
  7773                           
  7774                           	psect	text11
  7775  1E1F                     __ptext11:	
  7776 ;; *************** function _init_TMRs *****************
  7777 ;; Defined at:
  7778 ;;		line 13 in file "TMR.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;		None
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  1    wreg      void 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0, pclath, cstack
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7796 ;;Total ram usage:        0 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    4
  7799 ;; This function calls:
  7800 ;;		_init_TMR1
  7801 ;;		_init_TMR3
  7802 ;;		_init_TMR5
  7803 ;; This function is called by:
  7804 ;;		_start
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function _init_TMRs
  7810  1E1F                     _init_TMRs:	
  7811                           
  7812                           ;TMR.c: 15: init_TMR1();
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _init_TMRs: [wreg+status,2+status,0+pclath+cstack]
  7816  1E1F  319E  26A9  319E   	fcall	_init_TMR1
  7817                           
  7818                           ;TMR.c: 16: init_TMR3();
  7819  1E22  319E  264C  319E   	fcall	_init_TMR3
  7820                           
  7821                           ;TMR.c: 17: init_TMR5();
  7822  1E25  319E  2699         	fcall	_init_TMR5
  7823  1E27  0008               	return
  7824  1E28                     __end_of_init_TMRs:	
  7825                           
  7826                           	psect	text12
  7827  1E99                     __ptext12:	
  7828 ;; *************** function _init_TMR5 *****************
  7829 ;; Defined at:
  7830 ;;		line 228 in file "TMR.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7848 ;;Total ram usage:        0 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    3
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_init_TMRs
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           
  7859                           ;psect for function _init_TMR5
  7860  1E99                     _init_TMR5:	
  7861                           
  7862                           ;TMR.c: 231: T5CON = 0x06;
  7863                           
  7864                           ;incstack = 0
  7865                           ; Regs used in _init_TMR5: [wreg+status,2]
  7866  1E99  3006               	movlw	6
  7867  1E9A  0144               	movlb	4	; select bank4
  7868  1E9B  009A               	movwf	26	;volatile
  7869                           
  7870                           ;TMR.c: 233: T5GCON = 0x10;
  7871  1E9C  3010               	movlw	16
  7872  1E9D  009B               	movwf	27	;volatile
  7873                           
  7874                           ;TMR.c: 235: T5GATE = 0x04;
  7875  1E9E  3004               	movlw	4
  7876  1E9F  009C               	movwf	28	;volatile
  7877                           
  7878                           ;TMR.c: 237: T5CLK = 0x00;
  7879  1EA0  019D               	clrf	29	;volatile
  7880                           
  7881                           ;TMR.c: 239: TMR5H = 0x00;
  7882  1EA1  0199               	clrf	25	;volatile
  7883                           
  7884                           ;TMR.c: 241: TMR5L = 0x00;
  7885  1EA2  0198               	clrf	24	;volatile
  7886                           
  7887                           ;TMR.c: 244: PIR4bits.TMR5IF = 0;
  7888  1EA3  014E               	movlb	14	; select bank14
  7889  1EA4  1210               	bcf	16,4	;volatile
  7890                           
  7891                           ;TMR.c: 247: PIR5bits.TMR5GIF = 0;
  7892  1EA5  1111               	bcf	17,2	;volatile
  7893                           
  7894                           ;TMR.c: 250: T5CONbits.TMR5ON = 0;
  7895  1EA6  0144               	movlb	4	; select bank4
  7896  1EA7  101A               	bcf	26,0	;volatile
  7897  1EA8  0008               	return
  7898  1EA9                     __end_of_init_TMR5:	
  7899                           
  7900                           	psect	text13
  7901  1E4C                     __ptext13:	
  7902 ;; *************** function _init_TMR3 *****************
  7903 ;; Defined at:
  7904 ;;		line 137 in file "TMR.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    3
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_init_TMRs
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _init_TMR3
  7934  1E4C                     _init_TMR3:	
  7935                           
  7936                           ;TMR.c: 140: T3CON = 0x32;
  7937                           
  7938                           ;incstack = 0
  7939                           ; Regs used in _init_TMR3: [wreg+status,2]
  7940  1E4C  3032               	movlw	50
  7941  1E4D  0144               	movlb	4	; select bank4
  7942  1E4E  0094               	movwf	20	;volatile
  7943                           
  7944                           ;TMR.c: 142: T3GCON = 0x00;
  7945  1E4F  0195               	clrf	21	;volatile
  7946                           
  7947                           ;TMR.c: 144: T3GATE = 0x00;
  7948  1E50  0196               	clrf	22	;volatile
  7949                           
  7950                           ;TMR.c: 146: T3CLK = 0x01;
  7951  1E51  3001               	movlw	1
  7952  1E52  0097               	movwf	23	;volatile
  7953                           
  7954                           ;TMR.c: 148: TMR3H = 0x00;
  7955  1E53  0193               	clrf	19	;volatile
  7956                           
  7957                           ;TMR.c: 150: TMR3L = 0x00;
  7958  1E54  0192               	clrf	18	;volatile
  7959                           
  7960                           ;TMR.c: 153: PIR4bits.TMR3IF = 0;
  7961  1E55  014E               	movlb	14	; select bank14
  7962  1E56  1110               	bcf	16,2	;volatile
  7963                           
  7964                           ;TMR.c: 156: T3CONbits.TMR3ON = 0;
  7965  1E57  0144               	movlb	4	; select bank4
  7966  1E58  1014               	bcf	20,0	;volatile
  7967  1E59  0008               	return
  7968  1E5A                     __end_of_init_TMR3:	
  7969                           
  7970                           	psect	text14
  7971  1EA9                     __ptext14:	
  7972 ;; *************** function _init_TMR1 *****************
  7973 ;; Defined at:
  7974 ;;		line 83 in file "TMR.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      void 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    3
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_init_TMRs
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           
  8003                           ;psect for function _init_TMR1
  8004  1EA9                     _init_TMR1:	
  8005                           
  8006                           ;TMR.c: 86: T1CON = 0x02;
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _init_TMR1: [wreg+status,2]
  8010  1EA9  3002               	movlw	2
  8011  1EAA  0144               	movlb	4	; select bank4
  8012  1EAB  008E               	movwf	14	;volatile
  8013                           
  8014                           ;TMR.c: 88: T1GCON = 0x00;
  8015  1EAC  018F               	clrf	15	;volatile
  8016                           
  8017                           ;TMR.c: 90: T1GATE = 0x00;
  8018  1EAD  0190               	clrf	16	;volatile
  8019                           
  8020                           ;TMR.c: 92: T1CLK = 0x01;
  8021  1EAE  3001               	movlw	1
  8022  1EAF  0091               	movwf	17	;volatile
  8023                           
  8024                           ;TMR.c: 94: TMR1H = 0xE7;
  8025  1EB0  30E7               	movlw	231
  8026  1EB1  008D               	movwf	13	;volatile
  8027                           
  8028                           ;TMR.c: 96: TMR1L = 0x96;
  8029  1EB2  3096               	movlw	150
  8030  1EB3  008C               	movwf	12	;volatile
  8031                           
  8032                           ;TMR.c: 99: PIR4bits.TMR1IF = 0;
  8033  1EB4  014E               	movlb	14	; select bank14
  8034  1EB5  1010               	bcf	16,0	;volatile
  8035                           
  8036                           ;TMR.c: 102: PIE4bits.TMR1IE = 1;
  8037  1EB6  141A               	bsf	26,0	;volatile
  8038                           
  8039                           ;TMR.c: 105: T1CONbits.TMR1ON = 1;
  8040  1EB7  0144               	movlb	4	; select bank4
  8041  1EB8  140E               	bsf	14,0	;volatile
  8042  1EB9  0008               	return
  8043  1EBA                     __end_of_init_TMR1:	
  8044                           
  8045                           	psect	text15
  8046  1F5E                     __ptext15:	
  8047 ;; *************** function _init_PPS *****************
  8048 ;; Defined at:
  8049 ;;		line 71 in file "init.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    3
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_start
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _init_PPS
  8079  1F5E                     _init_PPS:	
  8080                           
  8081                           ;init.c: 73: PPSLOCK = 0x55;
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in _init_PPS: [wreg+status,2+status,0]
  8085  1F5E  3055               	movlw	85
  8086  1F5F  017D               	movlb	61	; select bank61
  8087  1F60  008F               	movwf	15	;volatile
  8088                           
  8089                           ;init.c: 74: PPSLOCK = 0xAA;
  8090  1F61  30AA               	movlw	170
  8091  1F62  008F               	movwf	15	;volatile
  8092                           
  8093                           ;init.c: 75: PPSLOCKbits.PPSLOCKED = 0x00;
  8094  1F63  100F               	bcf	15,0	;volatile
  8095                           
  8096                           ;init.c: 77: T5CKIPPSbits.T5CKIPPS = 0x00;
  8097  1F64  30E0               	movlw	-32
  8098  1F65  0596               	andwf	22,f	;volatile
  8099                           
  8100                           ;init.c: 78: CLCIN0PPS = 0x00;
  8101  1F66  01BB               	clrf	59	;volatile
  8102                           
  8103                           ;init.c: 79: CLCIN1PPS = 0x01;
  8104  1F67  3001               	movlw	1
  8105  1F68  00BC               	movwf	60	;volatile
  8106                           
  8107                           ;init.c: 80: RA4PPS = 0x01;
  8108  1F69  3001               	movlw	1
  8109  1F6A  017E               	movlb	62	; select bank62
  8110  1F6B  0094               	movwf	20	;volatile
  8111                           
  8112                           ;init.c: 81: RA3PPS = 0x02;
  8113  1F6C  3002               	movlw	2
  8114  1F6D  0093               	movwf	19	;volatile
  8115                           
  8116                           ;init.c: 82: RB0PPS = 0x03;
  8117  1F6E  3003               	movlw	3
  8118  1F6F  0098               	movwf	24	;volatile
  8119                           
  8120                           ;init.c: 84: PPSLOCK = 0x55;
  8121  1F70  3055               	movlw	85
  8122  1F71  017D               	movlb	61	; select bank61
  8123  1F72  008F               	movwf	15	;volatile
  8124                           
  8125                           ;init.c: 85: PPSLOCK = 0xAA;
  8126  1F73  30AA               	movlw	170
  8127  1F74  008F               	movwf	15	;volatile
  8128                           
  8129                           ;init.c: 86: PPSLOCKbits.PPSLOCKED = 0x01;
  8130  1F75  140F               	bsf	15,0	;volatile
  8131  1F76  0008               	return
  8132  1F77                     __end_of_init_PPS:	
  8133                           
  8134                           	psect	text16
  8135  1EDF                     __ptext16:	
  8136 ;; *************** function _init_CMP_DAC *****************
  8137 ;; Defined at:
  8138 ;;		line 5 in file "CMP_DAC.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		wreg
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8156 ;;Total ram usage:        0 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    3
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_start
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function _init_CMP_DAC
  8168  1EDF                     _init_CMP_DAC:	
  8169                           
  8170                           ;CMP_DAC.c: 8: DAC1CON0 = 0x80;
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _init_CMP_DAC: [wreg]
  8174  1EDF  3080               	movlw	128
  8175  1EE0  0152               	movlb	18	; select bank18
  8176  1EE1  008E               	movwf	14	;volatile
  8177                           
  8178                           ;CMP_DAC.c: 10: DAC1CON1 = 22;
  8179  1EE2  3016               	movlw	22
  8180  1EE3  008F               	movwf	15	;volatile
  8181                           
  8182                           ;CMP_DAC.c: 12: PIE2bits.C1IE = 0;
  8183  1EE4  014E               	movlb	14	; select bank14
  8184  1EE5  1018               	bcf	24,0	;volatile
  8185                           
  8186                           ;CMP_DAC.c: 15: CM1CON0 = 0x80;
  8187  1EE6  3080               	movlw	128
  8188  1EE7  0153               	movlb	19	; select bank19
  8189  1EE8  0090               	movwf	16	;volatile
  8190                           
  8191                           ;CMP_DAC.c: 17: CM1CON1 = 0x01;
  8192  1EE9  3001               	movlw	1
  8193  1EEA  0091               	movwf	17	;volatile
  8194                           
  8195                           ;CMP_DAC.c: 19: CM1NSEL = 0x03;
  8196  1EEB  3003               	movlw	3
  8197  1EEC  0092               	movwf	18	;volatile
  8198                           
  8199                           ;CMP_DAC.c: 21: CM1PSEL = 0x05;
  8200  1EED  3005               	movlw	5
  8201  1EEE  0093               	movwf	19	;volatile
  8202                           
  8203                           ;CMP_DAC.c: 23: PIR2bits.C1IF = 0;
  8204  1EEF  014E               	movlb	14	; select bank14
  8205  1EF0  100E               	bcf	14,0	;volatile
  8206  1EF1  0008               	return
  8207  1EF2                     __end_of_init_CMP_DAC:	
  8208                           
  8209                           	psect	text17
  8210  1E32                     __ptext17:	
  8211 ;; *************** function _init_CLCs *****************
  8212 ;; Defined at:
  8213 ;;		line 8 in file "CLC.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;		None
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;		None
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0, pclath, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8231 ;;Total ram usage:        0 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:    4
  8234 ;; This function calls:
  8235 ;;		_init_CLC1
  8236 ;;		_init_CLC2
  8237 ;;		_init_CLC3
  8238 ;;		_init_CLC4
  8239 ;; This function is called by:
  8240 ;;		_start
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           
  8245                           ;psect for function _init_CLCs
  8246  1E32                     _init_CLCs:	
  8247                           
  8248                           ;CLC.c: 10: init_CLC1();
  8249                           
  8250                           ;incstack = 0
  8251                           ; Regs used in _init_CLCs: [wreg+status,2+status,0+pclath+cstack]
  8252  1E32  319E  2669  319E   	fcall	_init_CLC1
  8253                           
  8254                           ;CLC.c: 11: init_CLC2();
  8255  1E35  319E  2679  319E   	fcall	_init_CLC2
  8256                           
  8257                           ;CLC.c: 12: init_CLC3();
  8258  1E38  319E  2689  319E   	fcall	_init_CLC3
  8259                           
  8260                           ;CLC.c: 13: init_CLC4();
  8261  1E3B  3180  2003         	fcall	_init_CLC4
  8262  1E3D  0008               	return
  8263  1E3E                     __end_of_init_CLCs:	
  8264                           
  8265                           	psect	text18
  8266  0003                     __ptext18:	
  8267 ;; *************** function _init_CLC4 *****************
  8268 ;; Defined at:
  8269 ;;		line 91 in file "CLC.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		None
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    3
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_init_CLCs
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           
  8298                           ;psect for function _init_CLC4
  8299  0003                     _init_CLC4:	
  8300                           
  8301                           ;incstack = 0
  8302                           ; Regs used in _init_CLC4: []
  8303  0003  0008               	return
  8304  0004                     __end_of_init_CLC4:	
  8305                           
  8306                           	psect	text19
  8307  1E89                     __ptext19:	
  8308 ;; *************** function _init_CLC3 *****************
  8309 ;; Defined at:
  8310 ;;		line 66 in file "CLC.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    3
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_init_CLCs
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function _init_CLC3
  8340  1E89                     _init_CLC3:	
  8341                           
  8342                           ;CLC.c: 70: CLC3POL = 0x00;
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in _init_CLC3: [wreg+status,2]
  8346  1E89  017C               	movlb	60	; select bank60
  8347  1E8A  01A5               	clrf	37	;volatile
  8348                           
  8349                           ;CLC.c: 72: CLC3SEL0 = 0x00;
  8350  1E8B  01A6               	clrf	38	;volatile
  8351                           
  8352                           ;CLC.c: 74: CLC3SEL1 = 0x01;
  8353  1E8C  3001               	movlw	1
  8354  1E8D  00A7               	movwf	39	;volatile
  8355                           
  8356                           ;CLC.c: 76: CLC3SEL2 = 0x00;
  8357  1E8E  01A8               	clrf	40	;volatile
  8358                           
  8359                           ;CLC.c: 78: CLC3SEL3 = 0x00;
  8360  1E8F  01A9               	clrf	41	;volatile
  8361                           
  8362                           ;CLC.c: 80: CLC3GLS0 = 0x01;
  8363  1E90  3001               	movlw	1
  8364  1E91  00AA               	movwf	42	;volatile
  8365                           
  8366                           ;CLC.c: 82: CLC3GLS1 = 0x04;
  8367  1E92  3004               	movlw	4
  8368  1E93  00AB               	movwf	43	;volatile
  8369                           
  8370                           ;CLC.c: 84: CLC3GLS2 = 0x00;
  8371  1E94  01AC               	clrf	44	;volatile
  8372                           
  8373                           ;CLC.c: 86: CLC3GLS3 = 0x00;
  8374  1E95  01AD               	clrf	45	;volatile
  8375                           
  8376                           ;CLC.c: 88: CLC3CON = 0x80;
  8377  1E96  3080               	movlw	128
  8378  1E97  00A4               	movwf	36	;volatile
  8379  1E98  0008               	return
  8380  1E99                     __end_of_init_CLC3:	
  8381                           
  8382                           	psect	text20
  8383  1E79                     __ptext20:	
  8384 ;; *************** function _init_CLC2 *****************
  8385 ;; Defined at:
  8386 ;;		line 41 in file "CLC.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, status,2
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8404 ;;Total ram usage:        0 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    3
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_init_CLCs
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function _init_CLC2
  8416  1E79                     _init_CLC2:	
  8417                           
  8418                           ;CLC.c: 45: CLC2POL = 0x00;
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in _init_CLC2: [wreg+status,2]
  8422  1E79  017C               	movlb	60	; select bank60
  8423  1E7A  019B               	clrf	27	;volatile
  8424                           
  8425                           ;CLC.c: 47: CLC2SEL0 = 0x00;
  8426  1E7B  019C               	clrf	28	;volatile
  8427                           
  8428                           ;CLC.c: 49: CLC2SEL1 = 0x01;
  8429  1E7C  3001               	movlw	1
  8430  1E7D  009D               	movwf	29	;volatile
  8431                           
  8432                           ;CLC.c: 51: CLC2SEL2 = 0x00;
  8433  1E7E  019E               	clrf	30	;volatile
  8434                           
  8435                           ;CLC.c: 53: CLC2SEL3 = 0x00;
  8436  1E7F  019F               	clrf	31	;volatile
  8437                           
  8438                           ;CLC.c: 55: CLC2GLS0 = 0x01;
  8439  1E80  3001               	movlw	1
  8440  1E81  00A0               	movwf	32	;volatile
  8441                           
  8442                           ;CLC.c: 57: CLC2GLS1 = 0x08;
  8443  1E82  3008               	movlw	8
  8444  1E83  00A1               	movwf	33	;volatile
  8445                           
  8446                           ;CLC.c: 59: CLC2GLS2 = 0x00;
  8447  1E84  01A2               	clrf	34	;volatile
  8448                           
  8449                           ;CLC.c: 61: CLC2GLS3 = 0x00;
  8450  1E85  01A3               	clrf	35	;volatile
  8451                           
  8452                           ;CLC.c: 63: CLC2CON = 0x80;
  8453  1E86  3080               	movlw	128
  8454  1E87  009A               	movwf	26	;volatile
  8455  1E88  0008               	return
  8456  1E89                     __end_of_init_CLC2:	
  8457                           
  8458                           	psect	text21
  8459  1E69                     __ptext21:	
  8460 ;; *************** function _init_CLC1 *****************
  8461 ;; Defined at:
  8462 ;;		line 16 in file "CLC.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    3
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_init_CLCs
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _init_CLC1
  8492  1E69                     _init_CLC1:	
  8493                           
  8494                           ;CLC.c: 20: CLC1POL = 0x00;
  8495                           
  8496                           ;incstack = 0
  8497                           ; Regs used in _init_CLC1: [wreg+status,2]
  8498  1E69  017C               	movlb	60	; select bank60
  8499  1E6A  0191               	clrf	17	;volatile
  8500                           
  8501                           ;CLC.c: 22: CLC1SEL0 = 0x00;
  8502  1E6B  0192               	clrf	18	;volatile
  8503                           
  8504                           ;CLC.c: 24: CLC1SEL1 = 0x01;
  8505  1E6C  3001               	movlw	1
  8506  1E6D  0093               	movwf	19	;volatile
  8507                           
  8508                           ;CLC.c: 26: CLC1SEL2 = 0x00;
  8509  1E6E  0194               	clrf	20	;volatile
  8510                           
  8511                           ;CLC.c: 28: CLC1SEL3 = 0x00;
  8512  1E6F  0195               	clrf	21	;volatile
  8513                           
  8514                           ;CLC.c: 30: CLC1GLS0 = 0x02;
  8515  1E70  3002               	movlw	2
  8516  1E71  0096               	movwf	22	;volatile
  8517                           
  8518                           ;CLC.c: 32: CLC1GLS1 = 0x04;
  8519  1E72  3004               	movlw	4
  8520  1E73  0097               	movwf	23	;volatile
  8521                           
  8522                           ;CLC.c: 34: CLC1GLS2 = 0x00;
  8523  1E74  0198               	clrf	24	;volatile
  8524                           
  8525                           ;CLC.c: 36: CLC1GLS3 = 0x00;
  8526  1E75  0199               	clrf	25	;volatile
  8527                           
  8528                           ;CLC.c: 38: CLC1CON = 0x80;
  8529  1E76  3080               	movlw	128
  8530  1E77  0090               	movwf	16	;volatile
  8531  1E78  0008               	return
  8532  1E79                     __end_of_init_CLC1:	
  8533                           
  8534                           	psect	text22
  8535  1FC7                     __ptext22:	
  8536 ;; *************** function _init_ADC *****************
  8537 ;; Defined at:
  8538 ;;		line 3 in file "adc.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;		None
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8556 ;;Total ram usage:        0 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    3
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_start
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           
  8567                           ;psect for function _init_ADC
  8568  1FC7                     _init_ADC:	
  8569                           
  8570                           ;adc.c: 7: ADCON1 = 0x00;
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in _init_ADC: [wreg+status,2]
  8574  1FC7  0141               	movlb	1	; select bank1
  8575  1FC8  0194               	clrf	20	;volatile
  8576                           
  8577                           ;adc.c: 9: ADCON2 = 0x00;
  8578  1FC9  0195               	clrf	21	;volatile
  8579                           
  8580                           ;adc.c: 11: ADCON3 = 0x20;
  8581  1FCA  3020               	movlw	32
  8582  1FCB  0096               	movwf	22	;volatile
  8583                           
  8584                           ;adc.c: 13: ADACT = 0x00;
  8585  1FCC  0199               	clrf	25	;volatile
  8586                           
  8587                           ;adc.c: 15: ADSTAT = 0x00;
  8588  1FCD  0197               	clrf	23	;volatile
  8589                           
  8590                           ;adc.c: 17: ADCLK = 0x0F;
  8591  1FCE  300F               	movlw	15
  8592  1FCF  0098               	movwf	24	;volatile
  8593                           
  8594                           ;adc.c: 19: ADREF = 0x00;
  8595  1FD0  019A               	clrf	26	;volatile
  8596                           
  8597                           ;adc.c: 21: ADCAP = 0x00;
  8598  1FD1  019B               	clrf	27	;volatile
  8599                           
  8600                           ;adc.c: 23: ADPRE = 0x00;
  8601  1FD2  019C               	clrf	28	;volatile
  8602                           
  8603                           ;adc.c: 25: ADACQ = 0x02;
  8604  1FD3  3002               	movlw	2
  8605  1FD4  009D               	movwf	29	;volatile
  8606                           
  8607                           ;adc.c: 27: ADPCH = 0x00;
  8608  1FD5  019E               	clrf	30	;volatile
  8609                           
  8610                           ;adc.c: 29: ADRPT = 0x00;
  8611  1FD6  0142               	movlb	2	; select bank2
  8612  1FD7  018D               	clrf	13	;volatile
  8613                           
  8614                           ;adc.c: 31: ADLTHL = 0x00;
  8615  1FD8  018E               	clrf	14	;volatile
  8616                           
  8617                           ;adc.c: 33: ADLTHH = 0x00;
  8618  1FD9  018F               	clrf	15	;volatile
  8619                           
  8620                           ;adc.c: 35: ADUTHL = 0x00;
  8621  1FDA  0190               	clrf	16	;volatile
  8622                           
  8623                           ;adc.c: 37: ADUTHH = 0x00;
  8624  1FDB  0191               	clrf	17	;volatile
  8625                           
  8626                           ;adc.c: 39: ADSTPTL = 0x00;
  8627  1FDC  0192               	clrf	18	;volatile
  8628                           
  8629                           ;adc.c: 41: ADSTPTH = 0x00;
  8630  1FDD  0193               	clrf	19	;volatile
  8631                           
  8632                           ;adc.c: 44: ADCON0 = 0xC4;
  8633  1FDE  30C4               	movlw	196
  8634  1FDF  0141               	movlb	1	; select bank1
  8635  1FE0  0093               	movwf	19	;volatile
  8636  1FE1  0008               	return
  8637  1FE2                     __end_of_init_ADC:	
  8638                           
  8639                           	psect	text23
  8640  1DC3                     __ptext23:	
  8641 ;; *************** function _setTMR3InterruptHandler *****************
  8642 ;; Defined at:
  8643 ;;		line 213 in file "TMR.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;  InterruptHan    2    4[COMMON] PTR void 
  8646 ;;		 -> computeFreq(1), computeCapa(1), 
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8662 ;;Total ram usage:        2 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    3
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_main
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function _setTMR3InterruptHandler
  8674  1DC3                     _setTMR3InterruptHandler:	
  8675                           
  8676                           ;TMR.c: 215: TMR3_InterruptHandler = InterruptHandler;
  8677                           
  8678                           ;incstack = 0
  8679                           ; Regs used in _setTMR3InterruptHandler: [wreg]
  8680  1DC3  0875               	movf	setTMR3InterruptHandler@InterruptHandler+1,w
  8681  1DC4  0141               	movlb	1	; select bank1
  8682  1DC5  00E3               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
  8683  1DC6  0874               	movf	setTMR3InterruptHandler@InterruptHandler,w
  8684  1DC7  00E2               	movwf	_TMR3_InterruptHandler^(0+128)
  8685  1DC8  0008               	return
  8686  1DC9                     __end_of_setTMR3InterruptHandler:	
  8687                           
  8688                           	psect	text24
  8689  1DBD                     __ptext24:	
  8690 ;; *************** function _setTMR1InterruptHandler *****************
  8691 ;; Defined at:
  8692 ;;		line 122 in file "TMR.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  InterruptHan    2    4[COMMON] PTR void 
  8695 ;;		 -> refreshDisplay(1), 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        2 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    3
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_main
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           
  8722                           ;psect for function _setTMR1InterruptHandler
  8723  1DBD                     _setTMR1InterruptHandler:	
  8724                           
  8725                           ;TMR.c: 124: TMR1_InterruptHandler = InterruptHandler;
  8726                           
  8727                           ;incstack = 0
  8728                           ; Regs used in _setTMR1InterruptHandler: [wreg]
  8729  1DBD  0875               	movf	setTMR1InterruptHandler@InterruptHandler+1,w
  8730  1DBE  0142               	movlb	2	; select bank2
  8731  1DBF  00AD               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
  8732  1DC0  0874               	movf	setTMR1InterruptHandler@InterruptHandler,w
  8733  1DC1  00AC               	movwf	_TMR1_InterruptHandler^(0+256)
  8734  1DC2  0008               	return
  8735  1DC3                     __end_of_setTMR1InterruptHandler:	
  8736                           
  8737                           	psect	text25
  8738  1E16                     __ptext25:	
  8739 ;; *************** function _setTMR1Interrupt *****************
  8740 ;; Defined at:
  8741 ;;		line 127 in file "TMR.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  useInt          1    wreg     unsigned char 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  useInt          1    4[COMMON] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		wreg, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8759 ;;Total ram usage:        1 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    3
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_main
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function _setTMR1Interrupt
  8771  1E16                     _setTMR1Interrupt:	
  8772                           
  8773                           ;incstack = 0
  8774                           ; Regs used in _setTMR1Interrupt: [wreg+status,0]
  8775                           ;setTMR1Interrupt@useInt stored from wreg
  8776  1E16  00F4               	movwf	setTMR1Interrupt@useInt
  8777                           
  8778                           ;TMR.c: 129: PIR4bits.TMR1IF = 0;
  8779  1E17  014E               	movlb	14	; select bank14
  8780  1E18  1010               	bcf	16,0	;volatile
  8781                           
  8782                           ;TMR.c: 130: PIE4bits.TMR1IE = useInt;
  8783  1E19  0C74               	rrf	setTMR1Interrupt@useInt,w
  8784  1E1A  1C03               	skipc
  8785  1E1B  101A               	bcf	26,0	;volatile
  8786  1E1C  1803               	skipnc
  8787  1E1D  141A               	bsf	26,0	;volatile
  8788  1E1E  0008               	return
  8789  1E1F                     __end_of_setTMR1Interrupt:	
  8790                           
  8791                           	psect	text26
  8792  1DB7                     __ptext26:	
  8793 ;; *************** function _setCMP1InterruptHandler *****************
  8794 ;; Defined at:
  8795 ;;		line 46 in file "CMP_DAC.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  InterruptHan    2    4[COMMON] PTR void 
  8798 ;;		 -> computeCapa(1), 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8814 ;;Total ram usage:        2 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    3
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function _setCMP1InterruptHandler
  8826  1DB7                     _setCMP1InterruptHandler:	
  8827                           
  8828                           ;CMP_DAC.c: 48: CMP1_InterruptHandler = InterruptHandler;
  8829                           
  8830                           ;incstack = 0
  8831                           ; Regs used in _setCMP1InterruptHandler: [wreg]
  8832  1DB7  0875               	movf	setCMP1InterruptHandler@InterruptHandler+1,w
  8833  1DB8  0141               	movlb	1	; select bank1
  8834  1DB9  00EE               	movwf	(_CMP1_InterruptHandler+1)^(0+128)
  8835  1DBA  0874               	movf	setCMP1InterruptHandler@InterruptHandler,w
  8836  1DBB  00ED               	movwf	_CMP1_InterruptHandler^(0+128)
  8837  1DBC  0008               	return
  8838  1DBD                     __end_of_setCMP1InterruptHandler:	
  8839                           
  8840                           	psect	text27
  8841  1E0D                     __ptext27:	
  8842 ;; *************** function _resmeter_state *****************
  8843 ;; Defined at:
  8844 ;;		line 161 in file "states.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1    wreg      void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8862 ;;Total ram usage:        0 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    5
  8865 ;; This function calls:
  8866 ;;		_writeo
  8867 ;; This function is called by:
  8868 ;;		_main
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           
  8873                           ;psect for function _resmeter_state
  8874  1E0D                     _resmeter_state:	
  8875                           
  8876                           ;states.c: 163: writeo("resmeter_state", 0);;
  8877                           
  8878                           ;incstack = 0
  8879                           ; Regs used in _resmeter_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8880  1E0D  30F6               	movlw	low (STR_8| (0+32768))
  8881  1E0E  0140               	movlb	0	; select bank0
  8882  1E0F  00A5               	movwf	writeo@a
  8883  1E10  3090               	movlw	high (STR_8| (0+32768))
  8884  1E11  00A6               	movwf	writeo@a+1
  8885  1E12  01A7               	clrf	writeo@start
  8886  1E13  3196  26B5         	fcall	_writeo
  8887  1E15  0008               	return
  8888  1E16                     __end_of_resmeter_state:	
  8889                           
  8890                           	psect	text28
  8891  1E04                     __ptext28:	
  8892 ;; *************** function _pwm_state *****************
  8893 ;; Defined at:
  8894 ;;		line 166 in file "states.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;		None
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8912 ;;Total ram usage:        0 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    5
  8915 ;; This function calls:
  8916 ;;		_writeo
  8917 ;; This function is called by:
  8918 ;;		_main
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           
  8923                           ;psect for function _pwm_state
  8924  1E04                     _pwm_state:	
  8925                           
  8926                           ;states.c: 168: writeo("pwm_state", 0);;
  8927                           
  8928                           ;incstack = 0
  8929                           ; Regs used in _pwm_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8930  1E04  303D               	movlw	low (STR_9| (0+32768))
  8931  1E05  0140               	movlb	0	; select bank0
  8932  1E06  00A5               	movwf	writeo@a
  8933  1E07  3091               	movlw	high (STR_9| (0+32768))
  8934  1E08  00A6               	movwf	writeo@a+1
  8935  1E09  01A7               	clrf	writeo@start
  8936  1E0A  3196  26B5         	fcall	_writeo
  8937  1E0C  0008               	return
  8938  1E0D                     __end_of_pwm_state:	
  8939                           
  8940                           	psect	text29
  8941  13F2                     __ptext29:	
  8942 ;; *************** function _printFreq *****************
  8943 ;; Defined at:
  8944 ;;		line 51 in file "states.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  buf            17   44[BANK1 ] unsigned char [17]
  8949 ;;  count           2   61[BANK1 ] unsigned int 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8960 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8962 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  8963 ;;Total ram usage:       19 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    7
  8966 ;; This function calls:
  8967 ;;		___ftdiv
  8968 ;;		___lwtoft
  8969 ;;		_getTMR5
  8970 ;;		_sprintf
  8971 ;;		_writeo
  8972 ;; This function is called by:
  8973 ;;		_main
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           
  8978                           ;psect for function _printFreq
  8979  13F2                     _printFreq:	
  8980                           
  8981                           ;states.c: 53: char buf[17];
  8982                           ;states.c: 54: uint16_t count = getTMR5();
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in _printFreq: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8986  13F2  319F  27AC  3193   	fcall	_getTMR5
  8987  13F5  0875               	movf	?_getTMR5+1,w
  8988  13F6  0141               	movlb	1	; select bank1
  8989  13F7  00DE               	movwf	(printFreq@count+1)^(0+128)
  8990  13F8  0874               	movf	?_getTMR5,w
  8991  13F9  00DD               	movwf	printFreq@count^(0+128)
  8992                           
  8993                           ;states.c: 56: if(fast){
  8994  13FA  086A               	movf	_fast^(0+128),w	;volatile
  8995  13FB  1903               	btfsc	3,2
  8996  13FC  2C2A               	goto	l6323
  8997                           
  8998                           ;states.c: 57: sprintf(buf, "%06.01fkhz", count/10.0);
  8999  13FD  3032               	movlw	low (STR_3| (0+32768))
  9000  13FE  00A0               	movwf	sprintf@f^(0+128)
  9001  13FF  3091               	movlw	high (STR_3| (0+32768))
  9002  1400  00A1               	movwf	(sprintf@f^(0+128)+1)
  9003  1401  3000               	movlw	0
  9004  1402  0140               	movlb	0	; select bank0
  9005  1403  00AB               	movwf	___ftdiv@f2
  9006  1404  3020               	movlw	32
  9007  1405  00AC               	movwf	___ftdiv@f2+1
  9008  1406  3041               	movlw	65
  9009  1407  00AD               	movwf	___ftdiv@f2+2
  9010  1408  0141               	movlb	1	; select bank1
  9011  1409  085E               	movf	(printFreq@count+1)^(0+128),w
  9012  140A  0140               	movlb	0	; select bank0
  9013  140B  00A6               	movwf	___lwtoft@c+1
  9014  140C  0141               	movlb	1	; select bank1
  9015  140D  085D               	movf	printFreq@count^(0+128),w
  9016  140E  0140               	movlb	0	; select bank0
  9017  140F  00A5               	movwf	___lwtoft@c
  9018  1410  319F  271B  3193   	fcall	___lwtoft
  9019  1413  0140               	movlb	0	; select bank0
  9020  1414  0825               	movf	?___lwtoft,w
  9021  1415  00AE               	movwf	___ftdiv@f1
  9022  1416  0826               	movf	?___lwtoft+1,w
  9023  1417  00AF               	movwf	___ftdiv@f1+1
  9024  1418  0827               	movf	?___lwtoft+2,w
  9025  1419  00B0               	movwf	___ftdiv@f1+2
  9026  141A  3197  2757  3193   	fcall	___ftdiv
  9027  141D  0140               	movlb	0	; select bank0
  9028  141E  082B               	movf	?___ftdiv,w
  9029  141F  0141               	movlb	1	; select bank1
  9030  1420  00A2               	movwf	(?_sprintf^(0+128)+2)
  9031  1421  0140               	movlb	0	; select bank0
  9032  1422  082C               	movf	?___ftdiv+1,w
  9033  1423  0141               	movlb	1	; select bank1
  9034  1424  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  9035  1425  0140               	movlb	0	; select bank0
  9036  1426  082D               	movf	?___ftdiv+2,w
  9037  1427  0141               	movlb	1	; select bank1
  9038  1428  00A4               	movwf	((?_sprintf+2)^(0+128)+2)
  9039  1429  2C33               	goto	L1
  9040  142A                     l6323:	
  9041                           ;states.c: 58: }
  9042                           
  9043                           
  9044                           ;states.c: 59: else{
  9045                           ;states.c: 60: sprintf(buf, "%05d hz", count);
  9046  142A  3050               	movlw	low (STR_4| (0+32768))
  9047  142B  0141               	movlb	1	; select bank1
  9048  142C  00A0               	movwf	sprintf@f^(0+128)
  9049  142D  3091               	movlw	high (STR_4| (0+32768))
  9050  142E  00A1               	movwf	(sprintf@f^(0+128)+1)
  9051  142F  085E               	movf	(printFreq@count+1)^(0+128),w
  9052  1430  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  9053  1431  085D               	movf	printFreq@count^(0+128),w
  9054  1432  00A2               	movwf	(?_sprintf^(0+128)+2)
  9055  1433                     L1:	
  9056  1433  30CC               	movlw	(low (printFreq@buf| 0))& (0+255)
  9057  1434  3180  2050  3193   	fcall	_sprintf
  9058                           
  9059                           ;states.c: 61: }
  9060                           ;states.c: 62: writeo(buf, 0);;
  9061  1437  30CC               	movlw	low printFreq@buf
  9062  1438  0140               	movlb	0	; select bank0
  9063  1439  00A5               	movwf	writeo@a
  9064  143A  3000               	movlw	high printFreq@buf
  9065  143B  00A6               	movwf	writeo@a+1
  9066  143C  01A7               	clrf	writeo@start
  9067  143D  3196  26B5         	fcall	_writeo
  9068  143F  0008               	return
  9069  1440                     __end_of_printFreq:	
  9070                           
  9071                           	psect	text30
  9072  1FAC                     __ptext30:	
  9073 ;; *************** function _getTMR5 *****************
  9074 ;; Defined at:
  9075 ;;		line 253 in file "TMR.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  readVal         2    3[BANK0 ] unsigned int 
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  2    4[COMMON] unsigned int 
  9082 ;; Registers used:
  9083 ;;		wreg
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9090 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9092 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9093 ;;Total ram usage:        7 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    3
  9096 ;; This function calls:
  9097 ;;		Nothing
  9098 ;; This function is called by:
  9099 ;;		_printFreq
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           
  9104                           ;psect for function _getTMR5
  9105  1FAC                     _getTMR5:	
  9106                           
  9107                           ;TMR.c: 255: uint16_t readVal;
  9108                           ;TMR.c: 257: T5CONbits.TMR5ON = 0;
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in _getTMR5: [wreg]
  9112  1FAC  0144               	movlb	4	; select bank4
  9113  1FAD  101A               	bcf	26,0	;volatile
  9114                           
  9115                           ;TMR.c: 258: readVal = ((uint16_t)TMR5L);
  9116  1FAE  0818               	movf	24,w	;volatile
  9117  1FAF  0140               	movlb	0	; select bank0
  9118  1FB0  00A0               	movwf	??_getTMR5
  9119  1FB1  01A1               	clrf	??_getTMR5+1
  9120  1FB2  0820               	movf	??_getTMR5,w
  9121  1FB3  00A3               	movwf	getTMR5@readVal
  9122  1FB4  0821               	movf	??_getTMR5+1,w
  9123  1FB5  00A4               	movwf	getTMR5@readVal+1
  9124                           
  9125                           ;TMR.c: 259: readVal |= (((uint16_t)TMR5H) << 8);
  9126  1FB6  0144               	movlb	4	; select bank4
  9127  1FB7  0819               	movf	25,w	;volatile
  9128  1FB8  0140               	movlb	0	; select bank0
  9129  1FB9  00A0               	movwf	??_getTMR5
  9130  1FBA  01A1               	clrf	??_getTMR5+1
  9131  1FBB  0820               	movf	??_getTMR5,w
  9132  1FBC  00A1               	movwf	??_getTMR5+1
  9133  1FBD  01A0               	clrf	??_getTMR5
  9134  1FBE  0820               	movf	??_getTMR5,w
  9135  1FBF  04A3               	iorwf	getTMR5@readVal,f
  9136  1FC0  0821               	movf	??_getTMR5+1,w
  9137  1FC1  04A4               	iorwf	getTMR5@readVal+1,f
  9138                           
  9139                           ;TMR.c: 261: return readVal;
  9140  1FC2  0824               	movf	getTMR5@readVal+1,w
  9141  1FC3  00F5               	movwf	?_getTMR5+1
  9142  1FC4  0823               	movf	getTMR5@readVal,w
  9143  1FC5  00F4               	movwf	?_getTMR5
  9144  1FC6  0008               	return
  9145  1FC7                     __end_of_getTMR5:	
  9146                           
  9147                           	psect	text31
  9148  1624                     __ptext31:	
  9149 ;; *************** function _printCapa *****************
  9150 ;; Defined at:
  9151 ;;		line 137 in file "states.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;		None
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  buf            17   44[BANK1 ] unsigned char [17]
  9156 ;;  tmr             2   61[BANK1 ] unsigned int 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9167 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9169 ;;      Totals:         0       2      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9170 ;;Total ram usage:       21 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:    7
  9173 ;; This function calls:
  9174 ;;		___ftdiv
  9175 ;;		___ftmul
  9176 ;;		___fttol
  9177 ;;		___lwtoft
  9178 ;;		_getTMR3
  9179 ;;		_sprintf
  9180 ;;		_writeo
  9181 ;; This function is called by:
  9182 ;;		_main
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           
  9187                           ;psect for function _printCapa
  9188  1624                     _printCapa:	
  9189                           
  9190                           ;states.c: 139: static uint16_t offset = 0;
  9191                           ;states.c: 140: char buf[17];
  9192                           ;states.c: 141: uint16_t tmr = getTMR3();
  9193                           
  9194                           ;incstack = 0
  9195                           ; Regs used in _printCapa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9196  1624  319F  2791  3196   	fcall	_getTMR3
  9197  1627  0875               	movf	?_getTMR3+1,w
  9198  1628  0141               	movlb	1	; select bank1
  9199  1629  00DE               	movwf	(printCapa@tmr+1)^(0+128)
  9200  162A  0874               	movf	?_getTMR3,w
  9201  162B  00DD               	movwf	printCapa@tmr^(0+128)
  9202                           
  9203                           ;states.c: 143: if((!PORTBbits.RB5)){
  9204  162C  0140               	movlb	0	; select bank0
  9205  162D  1A8D               	btfsc	13,5	;volatile
  9206  162E  2E40               	goto	l745
  9207                           
  9208                           ;states.c: 145: _delay((unsigned long)((1)*(25000000LL/4000.0)));
  9209  162F  3009               	movlw	9
  9210  1630  00ED               	movwf	??_printCapa+1
  9211  1631  301C               	movlw	28
  9212  1632  00EC               	movwf	??_printCapa
  9213  1633                     u7627:	
  9214  1633  0BEC               	decfsz	??_printCapa,f
  9215  1634  2E33               	goto	u7627
  9216  1635  0BED               	decfsz	??_printCapa+1,f
  9217  1636  2E33               	goto	u7627
  9218  1637  0000               	nop
  9219  1638                     l746:	
  9220                           ;states.c: 146: while((!PORTBbits.RB5));
  9221                           
  9222  1638  0140               	movlb	0	; select bank0
  9223  1639  1E8D               	btfss	13,5	;volatile
  9224  163A  2E38               	goto	l746
  9225                           
  9226                           ;states.c: 148: offset = tmr;
  9227  163B  0141               	movlb	1	; select bank1
  9228  163C  085E               	movf	(printCapa@tmr+1)^(0+128),w
  9229  163D  00E9               	movwf	(printCapa@offset+1)^(0+128)
  9230  163E  085D               	movf	printCapa@tmr^(0+128),w
  9231  163F  00E8               	movwf	printCapa@offset^(0+128)
  9232  1640                     l745:	
  9233                           
  9234                           ;states.c: 149: }
  9235                           ;states.c: 150: if(tmr>offset) tmr -= offset;
  9236  1640  0141               	movlb	1	; select bank1
  9237  1641  085E               	movf	(printCapa@tmr+1)^(0+128),w
  9238  1642  0269               	subwf	(printCapa@offset+1)^(0+128),w
  9239  1643  1D03               	skipz
  9240  1644  2E47               	goto	u7515
  9241  1645  085D               	movf	printCapa@tmr^(0+128),w
  9242  1646  0268               	subwf	printCapa@offset^(0+128),w
  9243  1647                     u7515:	
  9244  1647  1803               	skipnc
  9245  1648  2E4E               	goto	l6393
  9246  1649  0868               	movf	printCapa@offset^(0+128),w
  9247  164A  02DD               	subwf	printCapa@tmr^(0+128),f
  9248  164B  0869               	movf	(printCapa@offset+1)^(0+128),w
  9249  164C  3BDE               	subwfb	(printCapa@tmr+1)^(0+128),f
  9250  164D  2E50               	goto	l6395
  9251  164E                     l6393:	
  9252                           
  9253                           ;states.c: 151: else tmr = 0;
  9254  164E  01DD               	clrf	printCapa@tmr^(0+128)
  9255  164F  01DE               	clrf	(printCapa@tmr+1)^(0+128)
  9256  1650                     l6395:	
  9257                           
  9258                           ;states.c: 155: tmr = (uint16_t)(((double)tmr) * 0.16);
  9259  1650  085E               	movf	(printCapa@tmr+1)^(0+128),w
  9260  1651  0140               	movlb	0	; select bank0
  9261  1652  00A6               	movwf	___lwtoft@c+1
  9262  1653  0141               	movlb	1	; select bank1
  9263  1654  085D               	movf	printCapa@tmr^(0+128),w
  9264  1655  0140               	movlb	0	; select bank0
  9265  1656  00A5               	movwf	___lwtoft@c
  9266  1657  319F  271B  3196   	fcall	___lwtoft
  9267  165A  0140               	movlb	0	; select bank0
  9268  165B  0825               	movf	?___lwtoft,w
  9269  165C  00B6               	movwf	___ftmul@f2
  9270  165D  0826               	movf	?___lwtoft+1,w
  9271  165E  00B7               	movwf	___ftmul@f2+1
  9272  165F  0827               	movf	?___lwtoft+2,w
  9273  1660  00B8               	movwf	___ftmul@f2+2
  9274  1661  30D7               	movlw	215
  9275  1662  00B3               	movwf	___ftmul@f1
  9276  1663  3023               	movlw	35
  9277  1664  00B4               	movwf	___ftmul@f1+1
  9278  1665  303E               	movlw	62
  9279  1666  00B5               	movwf	___ftmul@f1+2
  9280  1667  3188  20D7  3196   	fcall	___ftmul
  9281  166A  0140               	movlb	0	; select bank0
  9282  166B  0833               	movf	?___ftmul,w
  9283  166C  00DE               	movwf	___fttol@f1
  9284  166D  0834               	movf	?___ftmul+1,w
  9285  166E  00DF               	movwf	___fttol@f1+1
  9286  166F  0835               	movf	?___ftmul+2,w
  9287  1670  00E0               	movwf	___fttol@f1+2
  9288  1671  3195  259D  3196   	fcall	___fttol
  9289  1674  0140               	movlb	0	; select bank0
  9290  1675  085F               	movf	?___fttol+1,w
  9291  1676  0141               	movlb	1	; select bank1
  9292  1677  00DE               	movwf	(printCapa@tmr+1)^(0+128)
  9293  1678  0140               	movlb	0	; select bank0
  9294  1679  085E               	movf	?___fttol,w
  9295  167A  0141               	movlb	1	; select bank1
  9296  167B  00DD               	movwf	printCapa@tmr^(0+128)
  9297                           
  9298                           ;states.c: 156: sprintf(buf, "%06.03f uf", tmr/1000.0);
  9299  167C  301C               	movlw	low (STR_7| (0+32768))
  9300  167D  00A0               	movwf	sprintf@f^(0+128)
  9301  167E  3091               	movlw	high (STR_7| (0+32768))
  9302  167F  00A1               	movwf	(sprintf@f^(0+128)+1)
  9303  1680  3000               	movlw	0
  9304  1681  0140               	movlb	0	; select bank0
  9305  1682  00AB               	movwf	___ftdiv@f2
  9306  1683  307A               	movlw	122
  9307  1684  00AC               	movwf	___ftdiv@f2+1
  9308  1685  3044               	movlw	68
  9309  1686  00AD               	movwf	___ftdiv@f2+2
  9310  1687  0141               	movlb	1	; select bank1
  9311  1688  085E               	movf	(printCapa@tmr+1)^(0+128),w
  9312  1689  0140               	movlb	0	; select bank0
  9313  168A  00A6               	movwf	___lwtoft@c+1
  9314  168B  0141               	movlb	1	; select bank1
  9315  168C  085D               	movf	printCapa@tmr^(0+128),w
  9316  168D  0140               	movlb	0	; select bank0
  9317  168E  00A5               	movwf	___lwtoft@c
  9318  168F  319F  271B  3196   	fcall	___lwtoft
  9319  1692  0140               	movlb	0	; select bank0
  9320  1693  0825               	movf	?___lwtoft,w
  9321  1694  00AE               	movwf	___ftdiv@f1
  9322  1695  0826               	movf	?___lwtoft+1,w
  9323  1696  00AF               	movwf	___ftdiv@f1+1
  9324  1697  0827               	movf	?___lwtoft+2,w
  9325  1698  00B0               	movwf	___ftdiv@f1+2
  9326  1699  3197  2757  3196   	fcall	___ftdiv
  9327  169C  0140               	movlb	0	; select bank0
  9328  169D  082B               	movf	?___ftdiv,w
  9329  169E  0141               	movlb	1	; select bank1
  9330  169F  00A2               	movwf	(?_sprintf^(0+128)+2)
  9331  16A0  0140               	movlb	0	; select bank0
  9332  16A1  082C               	movf	?___ftdiv+1,w
  9333  16A2  0141               	movlb	1	; select bank1
  9334  16A3  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
  9335  16A4  0140               	movlb	0	; select bank0
  9336  16A5  082D               	movf	?___ftdiv+2,w
  9337  16A6  0141               	movlb	1	; select bank1
  9338  16A7  00A4               	movwf	((?_sprintf+2)^(0+128)+2)
  9339  16A8  30CC               	movlw	(low (printCapa@buf| 0))& (0+255)
  9340  16A9  3180  2050  3196   	fcall	_sprintf
  9341                           
  9342                           ;states.c: 157: writeo(buf, 0);;
  9343  16AC  30CC               	movlw	low printCapa@buf
  9344  16AD  0140               	movlb	0	; select bank0
  9345  16AE  00A5               	movwf	writeo@a
  9346  16AF  3000               	movlw	high printCapa@buf
  9347  16B0  00A6               	movwf	writeo@a+1
  9348  16B1  01A7               	clrf	writeo@start
  9349  16B2  3196  26B5         	fcall	_writeo
  9350  16B4  0008               	return
  9351  16B5                     __end_of_printCapa:	
  9352                           
  9353                           	psect	text32
  9354  1F91                     __ptext32:	
  9355 ;; *************** function _getTMR3 *****************
  9356 ;; Defined at:
  9357 ;;		line 165 in file "TMR.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  readVal         2    3[BANK0 ] unsigned int 
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  2    4[COMMON] unsigned int 
  9364 ;; Registers used:
  9365 ;;		wreg
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9372 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9373 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9374 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9375 ;;Total ram usage:        7 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; Hardware stack levels required when called:    3
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_printCapa
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function _getTMR3
  9387  1F91                     _getTMR3:	
  9388                           
  9389                           ;TMR.c: 167: uint16_t readVal;
  9390                           ;TMR.c: 169: T3CONbits.TMR3ON = 0;
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in _getTMR3: [wreg]
  9394  1F91  0144               	movlb	4	; select bank4
  9395  1F92  1014               	bcf	20,0	;volatile
  9396                           
  9397                           ;TMR.c: 170: readVal = ((uint16_t)TMR3L);
  9398  1F93  0812               	movf	18,w	;volatile
  9399  1F94  0140               	movlb	0	; select bank0
  9400  1F95  00A0               	movwf	??_getTMR3
  9401  1F96  01A1               	clrf	??_getTMR3+1
  9402  1F97  0820               	movf	??_getTMR3,w
  9403  1F98  00A3               	movwf	getTMR3@readVal
  9404  1F99  0821               	movf	??_getTMR3+1,w
  9405  1F9A  00A4               	movwf	getTMR3@readVal+1
  9406                           
  9407                           ;TMR.c: 171: readVal |= (((uint16_t)TMR3H) << 8);
  9408  1F9B  0144               	movlb	4	; select bank4
  9409  1F9C  0813               	movf	19,w	;volatile
  9410  1F9D  0140               	movlb	0	; select bank0
  9411  1F9E  00A0               	movwf	??_getTMR3
  9412  1F9F  01A1               	clrf	??_getTMR3+1
  9413  1FA0  0820               	movf	??_getTMR3,w
  9414  1FA1  00A1               	movwf	??_getTMR3+1
  9415  1FA2  01A0               	clrf	??_getTMR3
  9416  1FA3  0820               	movf	??_getTMR3,w
  9417  1FA4  04A3               	iorwf	getTMR3@readVal,f
  9418  1FA5  0821               	movf	??_getTMR3+1,w
  9419  1FA6  04A4               	iorwf	getTMR3@readVal+1,f
  9420                           
  9421                           ;TMR.c: 173: return readVal;
  9422  1FA7  0824               	movf	getTMR3@readVal+1,w
  9423  1FA8  00F5               	movwf	?_getTMR3+1
  9424  1FA9  0823               	movf	getTMR3@readVal,w
  9425  1FAA  00F4               	movwf	?_getTMR3
  9426  1FAB  0008               	return
  9427  1FAC                     __end_of_getTMR3:	
  9428                           
  9429                           	psect	text33
  9430  1F1B                     __ptext33:	
  9431 ;; *************** function ___lwtoft *****************
  9432 ;; Defined at:
  9433 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  c               2    5[BANK0 ] unsigned int 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  3    5[BANK0 ] float 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0, pclath, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9450 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9451 ;;Total ram usage:        4 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    4
  9454 ;; This function calls:
  9455 ;;		___ftpack
  9456 ;; This function is called by:
  9457 ;;		_measureInput
  9458 ;;		_printFreq
  9459 ;;		_measureTemp
  9460 ;;		_printCapa
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           
  9465                           ;psect for function ___lwtoft
  9466  1F1B                     ___lwtoft:	
  9467                           
  9468                           ;incstack = 0
  9469                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9470  1F1B  0140               	movlb	0	; select bank0
  9471  1F1C  0825               	movf	___lwtoft@c,w
  9472  1F1D  00A0               	movwf	___ftpack@arg
  9473  1F1E  0826               	movf	___lwtoft@c+1,w
  9474  1F1F  00A1               	movwf	___ftpack@arg+1
  9475  1F20  01A2               	clrf	___ftpack@arg+2
  9476  1F21  308E               	movlw	142
  9477  1F22  00A8               	movwf	??___lwtoft
  9478  1F23  0828               	movf	??___lwtoft,w
  9479  1F24  00A3               	movwf	___ftpack@exp
  9480  1F25  01A4               	clrf	___ftpack@sign
  9481  1F26  3195  2538         	fcall	___ftpack
  9482  1F28  0140               	movlb	0	; select bank0
  9483  1F29  0820               	movf	?___ftpack,w
  9484  1F2A  00A5               	movwf	?___lwtoft
  9485  1F2B  0821               	movf	?___ftpack+1,w
  9486  1F2C  00A6               	movwf	?___lwtoft+1
  9487  1F2D  0822               	movf	?___ftpack+2,w
  9488  1F2E  00A7               	movwf	?___lwtoft+2
  9489  1F2F  0008               	return
  9490  1F30                     __end_of___lwtoft:	
  9491                           
  9492                           	psect	text34
  9493  1757                     __ptext34:	
  9494 ;; *************** function ___ftdiv *****************
  9495 ;; Defined at:
  9496 ;;		line 56 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;  f2              3   11[BANK0 ] float 
  9499 ;;  f1              3   14[BANK0 ] float 
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;  f3              3   22[BANK0 ] float 
  9502 ;;  sign            1   26[BANK0 ] unsigned char 
  9503 ;;  exp             1   25[BANK0 ] unsigned char 
  9504 ;;  cntr            1   21[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  3   11[BANK0 ] float 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9514 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9515 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9517 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9518 ;;Total ram usage:       16 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    4
  9521 ;; This function calls:
  9522 ;;		___ftpack
  9523 ;; This function is called by:
  9524 ;;		_voltmeter_state
  9525 ;;		_printFreq
  9526 ;;		_tempmeter_state
  9527 ;;		_printCapa
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           
  9532                           ;psect for function ___ftdiv
  9533  1757                     ___ftdiv:	
  9534                           
  9535                           ;incstack = 0
  9536                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9537  1757  0140               	movlb	0	; select bank0
  9538  1758  082E               	movf	___ftdiv@f1,w
  9539  1759  00B1               	movwf	??___ftdiv
  9540  175A  082F               	movf	___ftdiv@f1+1,w
  9541  175B  00B2               	movwf	??___ftdiv+1
  9542  175C  0830               	movf	___ftdiv@f1+2,w
  9543  175D  00B3               	movwf	??___ftdiv+2
  9544  175E  1003               	clrc
  9545  175F  0D32               	rlf	??___ftdiv+1,w
  9546  1760  0D33               	rlf	??___ftdiv+2,w
  9547  1761  00B4               	movwf	??___ftdiv+3
  9548  1762  0834               	movf	??___ftdiv+3,w
  9549  1763  00B9               	movwf	___ftdiv@exp
  9550  1764  0839               	movf	___ftdiv@exp,w
  9551  1765  1D03               	btfss	3,2
  9552  1766  2F6E               	goto	l6251
  9553  1767  3000               	movlw	0
  9554  1768  00AB               	movwf	?___ftdiv
  9555  1769  3000               	movlw	0
  9556  176A  00AC               	movwf	?___ftdiv+1
  9557  176B  3000               	movlw	0
  9558  176C  00AD               	movwf	?___ftdiv+2
  9559  176D  0008               	return
  9560  176E                     l6251:	
  9561  176E  082B               	movf	___ftdiv@f2,w
  9562  176F  00B1               	movwf	??___ftdiv
  9563  1770  082C               	movf	___ftdiv@f2+1,w
  9564  1771  00B2               	movwf	??___ftdiv+1
  9565  1772  082D               	movf	___ftdiv@f2+2,w
  9566  1773  00B3               	movwf	??___ftdiv+2
  9567  1774  1003               	clrc
  9568  1775  0D32               	rlf	??___ftdiv+1,w
  9569  1776  0D33               	rlf	??___ftdiv+2,w
  9570  1777  00B4               	movwf	??___ftdiv+3
  9571  1778  0834               	movf	??___ftdiv+3,w
  9572  1779  00BA               	movwf	___ftdiv@sign
  9573  177A  083A               	movf	___ftdiv@sign,w
  9574  177B  1D03               	btfss	3,2
  9575  177C  2F84               	goto	l6257
  9576  177D  3000               	movlw	0
  9577  177E  00AB               	movwf	?___ftdiv
  9578  177F  3000               	movlw	0
  9579  1780  00AC               	movwf	?___ftdiv+1
  9580  1781  3000               	movlw	0
  9581  1782  00AD               	movwf	?___ftdiv+2
  9582  1783  0008               	return
  9583  1784                     l6257:	
  9584  1784  3000               	movlw	0
  9585  1785  00B6               	movwf	___ftdiv@f3
  9586  1786  3000               	movlw	0
  9587  1787  00B7               	movwf	___ftdiv@f3+1
  9588  1788  3000               	movlw	0
  9589  1789  00B8               	movwf	___ftdiv@f3+2
  9590  178A  3089               	movlw	137
  9591  178B  073A               	addwf	___ftdiv@sign,w
  9592  178C  00B1               	movwf	??___ftdiv
  9593  178D  0831               	movf	??___ftdiv,w
  9594  178E  02B9               	subwf	___ftdiv@exp,f
  9595  178F  082E               	movf	___ftdiv@f1,w
  9596  1790  00B1               	movwf	??___ftdiv
  9597  1791  082F               	movf	___ftdiv@f1+1,w
  9598  1792  00B2               	movwf	??___ftdiv+1
  9599  1793  0830               	movf	___ftdiv@f1+2,w
  9600  1794  00B3               	movwf	??___ftdiv+2
  9601  1795  3010               	movlw	16
  9602  1796                     u7345:	
  9603  1796  36B3               	lsrf	??___ftdiv+2,f
  9604  1797  0CB2               	rrf	??___ftdiv+1,f
  9605  1798  0CB1               	rrf	??___ftdiv,f
  9606  1799  0B89               	decfsz	9,f
  9607  179A  2F96               	goto	u7345
  9608  179B  0831               	movf	??___ftdiv,w
  9609  179C  00B4               	movwf	??___ftdiv+3
  9610  179D  0834               	movf	??___ftdiv+3,w
  9611  179E  00BA               	movwf	___ftdiv@sign
  9612  179F  082B               	movf	___ftdiv@f2,w
  9613  17A0  00B1               	movwf	??___ftdiv
  9614  17A1  082C               	movf	___ftdiv@f2+1,w
  9615  17A2  00B2               	movwf	??___ftdiv+1
  9616  17A3  082D               	movf	___ftdiv@f2+2,w
  9617  17A4  00B3               	movwf	??___ftdiv+2
  9618  17A5  3010               	movlw	16
  9619  17A6                     u7355:	
  9620  17A6  36B3               	lsrf	??___ftdiv+2,f
  9621  17A7  0CB2               	rrf	??___ftdiv+1,f
  9622  17A8  0CB1               	rrf	??___ftdiv,f
  9623  17A9  0B89               	decfsz	9,f
  9624  17AA  2FA6               	goto	u7355
  9625  17AB  0831               	movf	??___ftdiv,w
  9626  17AC  00B4               	movwf	??___ftdiv+3
  9627  17AD  0834               	movf	??___ftdiv+3,w
  9628  17AE  06BA               	xorwf	___ftdiv@sign,f
  9629  17AF  3080               	movlw	128
  9630  17B0  00B1               	movwf	??___ftdiv
  9631  17B1  0831               	movf	??___ftdiv,w
  9632  17B2  05BA               	andwf	___ftdiv@sign,f
  9633  17B3  17AF               	bsf	___ftdiv@f1+1,7
  9634  17B4  30FF               	movlw	255
  9635  17B5  05AE               	andwf	___ftdiv@f1,f
  9636  17B6  30FF               	movlw	255
  9637  17B7  05AF               	andwf	___ftdiv@f1+1,f
  9638  17B8  3000               	movlw	0
  9639  17B9  05B0               	andwf	___ftdiv@f1+2,f
  9640  17BA  17AC               	bsf	___ftdiv@f2+1,7
  9641  17BB  30FF               	movlw	255
  9642  17BC  05AB               	andwf	___ftdiv@f2,f
  9643  17BD  30FF               	movlw	255
  9644  17BE  05AC               	andwf	___ftdiv@f2+1,f
  9645  17BF  3000               	movlw	0
  9646  17C0  05AD               	andwf	___ftdiv@f2+2,f
  9647  17C1  3018               	movlw	24
  9648  17C2  00B1               	movwf	??___ftdiv
  9649  17C3  0831               	movf	??___ftdiv,w
  9650  17C4  00B5               	movwf	___ftdiv@cntr
  9651  17C5                     l6271:	
  9652  17C5  3001               	movlw	1
  9653  17C6                     u7365:	
  9654  17C6  35B6               	lslf	___ftdiv@f3,f
  9655  17C7  0DB7               	rlf	___ftdiv@f3+1,f
  9656  17C8  0DB8               	rlf	___ftdiv@f3+2,f
  9657  17C9  0B89               	decfsz	9,f
  9658  17CA  2FC6               	goto	u7365
  9659  17CB  082D               	movf	___ftdiv@f2+2,w
  9660  17CC  0230               	subwf	___ftdiv@f1+2,w
  9661  17CD  1D03               	skipz
  9662  17CE  2FD5               	goto	u7375
  9663  17CF  082C               	movf	___ftdiv@f2+1,w
  9664  17D0  022F               	subwf	___ftdiv@f1+1,w
  9665  17D1  1D03               	skipz
  9666  17D2  2FD5               	goto	u7375
  9667  17D3  082B               	movf	___ftdiv@f2,w
  9668  17D4  022E               	subwf	___ftdiv@f1,w
  9669  17D5                     u7375:	
  9670  17D5  1C03               	skipc
  9671  17D6  2FDE               	goto	l6279
  9672  17D7  082B               	movf	___ftdiv@f2,w
  9673  17D8  02AE               	subwf	___ftdiv@f1,f
  9674  17D9  082C               	movf	___ftdiv@f2+1,w
  9675  17DA  3BAF               	subwfb	___ftdiv@f1+1,f
  9676  17DB  082D               	movf	___ftdiv@f2+2,w
  9677  17DC  3BB0               	subwfb	___ftdiv@f1+2,f
  9678  17DD  1436               	bsf	___ftdiv@f3,0
  9679  17DE                     l6279:	
  9680  17DE  3001               	movlw	1
  9681  17DF                     u7385:	
  9682  17DF  35AE               	lslf	___ftdiv@f1,f
  9683  17E0  0DAF               	rlf	___ftdiv@f1+1,f
  9684  17E1  0DB0               	rlf	___ftdiv@f1+2,f
  9685  17E2  0B89               	decfsz	9,f
  9686  17E3  2FDF               	goto	u7385
  9687  17E4  3001               	movlw	1
  9688  17E5  02B5               	subwf	___ftdiv@cntr,f
  9689  17E6  1D03               	btfss	3,2
  9690  17E7  2FC5               	goto	l6271
  9691  17E8  0836               	movf	___ftdiv@f3,w
  9692  17E9  00A0               	movwf	___ftpack@arg
  9693  17EA  0837               	movf	___ftdiv@f3+1,w
  9694  17EB  00A1               	movwf	___ftpack@arg+1
  9695  17EC  0838               	movf	___ftdiv@f3+2,w
  9696  17ED  00A2               	movwf	___ftpack@arg+2
  9697  17EE  0839               	movf	___ftdiv@exp,w
  9698  17EF  00B1               	movwf	??___ftdiv
  9699  17F0  0831               	movf	??___ftdiv,w
  9700  17F1  00A3               	movwf	___ftpack@exp
  9701  17F2  083A               	movf	___ftdiv@sign,w
  9702  17F3  00B2               	movwf	??___ftdiv+1
  9703  17F4  0832               	movf	??___ftdiv+1,w
  9704  17F5  00A4               	movwf	___ftpack@sign
  9705  17F6  3195  2538         	fcall	___ftpack
  9706  17F8  0140               	movlb	0	; select bank0
  9707  17F9  0820               	movf	?___ftpack,w
  9708  17FA  00AB               	movwf	?___ftdiv
  9709  17FB  0821               	movf	?___ftpack+1,w
  9710  17FC  00AC               	movwf	?___ftdiv+1
  9711  17FD  0822               	movf	?___ftpack+2,w
  9712  17FE  00AD               	movwf	?___ftdiv+2
  9713  17FF  0008               	return
  9714  1800                     __end_of___ftdiv:	
  9715                           
  9716                           	psect	text35
  9717  1DFB                     __ptext35:	
  9718 ;; *************** function _ibtn_state *****************
  9719 ;; Defined at:
  9720 ;;		line 172 in file "states.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;		None
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9738 ;;Total ram usage:        0 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    5
  9741 ;; This function calls:
  9742 ;;		_writeo
  9743 ;; This function is called by:
  9744 ;;		_main
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           
  9749                           ;psect for function _ibtn_state
  9750  1DFB                     _ibtn_state:	
  9751                           
  9752                           ;states.c: 174: writeo("ibtn_state", 0);;
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _ibtn_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9756  1DFB  3011               	movlw	low (STR_10| (0+32768))
  9757  1DFC  0140               	movlb	0	; select bank0
  9758  1DFD  00A5               	movwf	writeo@a
  9759  1DFE  3091               	movlw	high (STR_10| (0+32768))
  9760  1DFF  00A6               	movwf	writeo@a+1
  9761  1E00  01A7               	clrf	writeo@start
  9762  1E01  3196  26B5         	fcall	_writeo
  9763  1E03  0008               	return
  9764  1E04                     __end_of_ibtn_state:	
  9765                           
  9766                           	psect	text36
  9767  119A                     __ptext36:	
  9768 ;; *************** function _freqmeter_state *****************
  9769 ;; Defined at:
  9770 ;;		line 36 in file "states.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;		None
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, status,0, pclath, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9788 ;;Total ram usage:        2 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    5
  9791 ;; This function calls:
  9792 ;;		_startGatedCount
  9793 ;; This function is called by:
  9794 ;;		_main
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           
  9799                           ;psect for function _freqmeter_state
  9800  119A                     _freqmeter_state:	
  9801                           
  9802                           ;states.c: 38: if((!PORTBbits.RB5)){
  9803                           
  9804                           ;incstack = 0
  9805                           ; Regs used in _freqmeter_state: [wreg+status,2+status,0+pclath+cstack]
  9806  119A  0140               	movlb	0	; select bank0
  9807  119B  1A8D               	btfsc	13,5	;volatile
  9808  119C  29B5               	goto	l6313
  9809                           
  9810                           ;states.c: 40: _delay((unsigned long)((1)*(25000000LL/4000.0)));
  9811  119D  3009               	movlw	9
  9812  119E  00A1               	movwf	??_freqmeter_state+1
  9813  119F  301C               	movlw	28
  9814  11A0  00A0               	movwf	??_freqmeter_state
  9815  11A1                     u7637:	
  9816  11A1  0BA0               	decfsz	??_freqmeter_state,f
  9817  11A2  29A1               	goto	u7637
  9818  11A3  0BA1               	decfsz	??_freqmeter_state+1,f
  9819  11A4  29A1               	goto	u7637
  9820  11A5  0000               	nop
  9821  11A6                     l698:	
  9822                           ;states.c: 41: while((!PORTBbits.RB5));
  9823                           
  9824  11A6  0140               	movlb	0	; select bank0
  9825  11A7  1E8D               	btfss	13,5	;volatile
  9826  11A8  29A6               	goto	l698
  9827                           
  9828                           ;states.c: 43: fast = !fast;
  9829  11A9  0141               	movlb	1	; select bank1
  9830  11AA  086A               	movf	_fast^(0+128),w	;volatile
  9831  11AB  1D03               	btfss	3,2
  9832  11AC  29AF               	goto	u7420
  9833  11AD  3001               	movlw	1
  9834  11AE  29B0               	goto	u7430
  9835  11AF                     u7420:	
  9836  11AF  3000               	movlw	0
  9837  11B0                     u7430:	
  9838  11B0  0140               	movlb	0	; select bank0
  9839  11B1  00A0               	movwf	??_freqmeter_state
  9840  11B2  0820               	movf	??_freqmeter_state,w
  9841  11B3  0141               	movlb	1	; select bank1
  9842  11B4  00EA               	movwf	_fast^(0+128)	;volatile
  9843  11B5                     l6313:	
  9844                           
  9845                           ;states.c: 44: }
  9846                           ;states.c: 46: startGatedCount(fast);
  9847  11B5  0141               	movlb	1	; select bank1
  9848  11B6  086A               	movf	_fast^(0+128),w	;volatile
  9849  11B7  3191  21FF         	fcall	_startGatedCount
  9850  11B9  0008               	return
  9851  11BA                     __end_of_freqmeter_state:	
  9852                           
  9853                           	psect	text37
  9854  11FF                     __ptext37:	
  9855 ;; *************** function _startGatedCount *****************
  9856 ;; Defined at:
  9857 ;;		line 21 in file "TMR.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  fast            1    wreg     unsigned char 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  fast            1    6[COMMON] unsigned char 
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		wreg, status,2, status,0, pclath, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9875 ;;Total ram usage:        2 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:    4
  9878 ;; This function calls:
  9879 ;;		_setTMR3Interrupt
  9880 ;; This function is called by:
  9881 ;;		_freqmeter_state
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           
  9886                           ;psect for function _startGatedCount
  9887  11FF                     _startGatedCount:	
  9888                           
  9889                           ;incstack = 0
  9890                           ; Regs used in _startGatedCount: [wreg+status,2+status,0+pclath+cstack]
  9891                           ;startGatedCount@fast stored from wreg
  9892  11FF  00F6               	movwf	startGatedCount@fast
  9893                           
  9894                           ;TMR.c: 24: T3CONbits.TMR3ON = 0;
  9895  1200  0144               	movlb	4	; select bank4
  9896  1201  1014               	bcf	20,0	;volatile
  9897                           
  9898                           ;TMR.c: 25: T5CONbits.TMR5ON = 0;
  9899  1202  101A               	bcf	26,0	;volatile
  9900                           
  9901                           ;TMR.c: 28: isTMR3fast = fast;
  9902  1203  0876               	movf	startGatedCount@fast,w
  9903  1204  00F5               	movwf	??_startGatedCount
  9904  1205  0875               	movf	??_startGatedCount,w
  9905  1206  00F8               	movwf	_isTMR3fast	;volatile
  9906                           
  9907                           ;TMR.c: 29: if(fast){
  9908  1207  0876               	movf	startGatedCount@fast,w
  9909  1208  1903               	btfsc	3,2
  9910  1209  2A10               	goto	l5801
  9911                           
  9912                           ;TMR.c: 30: T3CON = 0x02;
  9913  120A  3002               	movlw	2
  9914  120B  0094               	movwf	20	;volatile
  9915                           
  9916                           ;TMR.c: 31: TMR3L = (unsigned char) (0x0BDC);
  9917  120C  30DC               	movlw	220
  9918  120D  0092               	movwf	18	;volatile
  9919                           
  9920                           ;TMR.c: 32: TMR3H = 0x0BDC>>8;
  9921  120E  300B               	movlw	11
  9922  120F  2A15               	goto	L2
  9923  1210                     l5801:	
  9924                           ;TMR.c: 33: }
  9925                           
  9926                           
  9927                           ;TMR.c: 34: else{
  9928                           ;TMR.c: 35: T3CON = 0x32;
  9929  1210  3032               	movlw	50
  9930  1211  0094               	movwf	20	;volatile
  9931                           
  9932                           ;TMR.c: 36: TMR3L = (unsigned char) (0x6769);
  9933  1212  3069               	movlw	105
  9934  1213  0092               	movwf	18	;volatile
  9935                           
  9936                           ;TMR.c: 37: TMR3H = 0x6769>>8;
  9937  1214  3067               	movlw	103
  9938  1215                     L2:	
  9939  1215  0093               	movwf	19	;volatile
  9940                           
  9941                           ;TMR.c: 38: }
  9942                           ;TMR.c: 41: TMR5H = 0x00;
  9943  1216  0199               	clrf	25	;volatile
  9944                           
  9945                           ;TMR.c: 42: TMR5L = 0x00;
  9946  1217  0198               	clrf	24	;volatile
  9947                           
  9948                           ;TMR.c: 45: PIR4bits.TMR3IF = 0;
  9949  1218  014E               	movlb	14	; select bank14
  9950  1219  1110               	bcf	16,2	;volatile
  9951                           
  9952                           ;TMR.c: 46: PIR5bits.TMR3GIF = 0;
  9953  121A  1091               	bcf	17,1	;volatile
  9954                           
  9955                           ;TMR.c: 47: PIR4bits.TMR5IF = 0;
  9956  121B  1210               	bcf	16,4	;volatile
  9957                           
  9958                           ;TMR.c: 48: PIR5bits.TMR5GIF = 0;
  9959  121C  1111               	bcf	17,2	;volatile
  9960                           
  9961                           ;TMR.c: 51: T3CONbits.TMR3ON = 1;
  9962  121D  0144               	movlb	4	; select bank4
  9963  121E  1414               	bsf	20,0	;volatile
  9964                           
  9965                           ;TMR.c: 52: T5CONbits.TMR5ON = 1;
  9966  121F  141A               	bsf	26,0	;volatile
  9967                           
  9968                           ;TMR.c: 53: setTMR3Interrupt(1);
  9969  1220  3001               	movlw	1
  9970  1221  319D  25F2         	fcall	_setTMR3Interrupt
  9971  1223  0008               	return
  9972  1224                     __end_of_startGatedCount:	
  9973                           
  9974                           	psect	text38
  9975  1254                     __ptext38:	
  9976 ;; *************** function _counter_state *****************
  9977 ;; Defined at:
  9978 ;;		line 68 in file "states.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;		None
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  buf            17   44[BANK1 ] unsigned char [17]
  9983 ;;  pin             1   61[BANK1 ] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  1    wreg      void 
  9986 ;; Registers used:
  9987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9994 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9996 ;;      Totals:         0       1      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9997 ;;Total ram usage:       19 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    7
 10000 ;; This function calls:
 10001 ;;		_sprintf
 10002 ;;		_writeo
 10003 ;; This function is called by:
 10004 ;;		_main
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           
 10009                           ;psect for function _counter_state
 10010  1254                     _counter_state:	
 10011                           
 10012                           ;states.c: 70: static uint16_t count=0;
 10013                           ;states.c: 71: static byte lPin = 0;
 10014                           ;states.c: 72: char buf[17];
 10015                           ;states.c: 73: byte pin;
 10016                           ;states.c: 75: if((!PORTBbits.RB5))
 10017                           
 10018                           ;incstack = 0
 10019                           ; Regs used in _counter_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10020  1254  0140               	movlb	0	; select bank0
 10021  1255  1A8D               	btfsc	13,5	;volatile
 10022  1256  2A5A               	goto	l6329
 10023                           
 10024                           ;states.c: 76: count=0;
 10025  1257  0141               	movlb	1	; select bank1
 10026  1258  01E6               	clrf	counter_state@count^(0+128)
 10027  1259  01E7               	clrf	(counter_state@count+1)^(0+128)
 10028  125A                     l6329:	
 10029                           
 10030                           ;states.c: 78: pin = (PORTAbits.RA0);
 10031  125A  3000               	movlw	0
 10032  125B  0140               	movlb	0	; select bank0
 10033  125C  180C               	btfsc	12,0	;volatile
 10034  125D  3001               	movlw	1
 10035  125E  0141               	movlb	1	; select bank1
 10036  125F  00DD               	movwf	counter_state@pin^(0+128)
 10037                           
 10038                           ;states.c: 79: if((pin == 1) && (pin != lPin))
 10039  1260  035D               	decf	counter_state@pin^(0+128),w
 10040  1261  1D03               	btfss	3,2
 10041  1262  2A6B               	goto	l714
 10042  1263  085D               	movf	counter_state@pin^(0+128),w
 10043  1264  066C               	xorwf	counter_state@lPin^(0+128),w
 10044  1265  1903               	skipnz
 10045  1266  2A6B               	goto	l714
 10046                           
 10047                           ;states.c: 80: count++;
 10048  1267  3001               	movlw	1
 10049  1268  07E6               	addwf	counter_state@count^(0+128),f
 10050  1269  3000               	movlw	0
 10051  126A  3DE7               	addwfc	(counter_state@count+1)^(0+128),f
 10052  126B                     l714:	
 10053                           
 10054                           ;states.c: 82: lPin = pin;
 10055  126B  085D               	movf	counter_state@pin^(0+128),w
 10056  126C  0140               	movlb	0	; select bank0
 10057  126D  00EC               	movwf	??_counter_state
 10058  126E  086C               	movf	??_counter_state,w
 10059  126F  0141               	movlb	1	; select bank1
 10060  1270  00EC               	movwf	counter_state@lPin^(0+128)
 10061                           
 10062                           ;states.c: 84: sprintf(buf, "c %06d", count);
 10063  1271  3058               	movlw	low (STR_5| (0+32768))
 10064  1272  00A0               	movwf	sprintf@f^(0+128)
 10065  1273  3091               	movlw	high (STR_5| (0+32768))
 10066  1274  00A1               	movwf	(sprintf@f^(0+128)+1)
 10067  1275  0867               	movf	(counter_state@count+1)^(0+128),w
 10068  1276  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
 10069  1277  0866               	movf	counter_state@count^(0+128),w
 10070  1278  00A2               	movwf	(?_sprintf^(0+128)+2)
 10071  1279  30CC               	movlw	(low (counter_state@buf| 0))& (0+255)
 10072  127A  3180  2050  3192   	fcall	_sprintf
 10073                           
 10074                           ;states.c: 85: writeo(buf, 0);;
 10075  127D  30CC               	movlw	low counter_state@buf
 10076  127E  0140               	movlb	0	; select bank0
 10077  127F  00A5               	movwf	writeo@a
 10078  1280  3000               	movlw	high counter_state@buf
 10079  1281  00A6               	movwf	writeo@a+1
 10080  1282  01A7               	clrf	writeo@start
 10081  1283  3196  26B5         	fcall	_writeo
 10082  1285  0008               	return
 10083  1286                     __end_of_counter_state:	
 10084                           
 10085                           	psect	text39
 10086  16B5                     __ptext39:	
 10087 ;; *************** function _writeo *****************
 10088 ;; Defined at:
 10089 ;;		line 23 in file "utils.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  a               2    5[BANK0 ] PTR const unsigned char 
 10092 ;;		 -> STR_10(11), STR_9(10), STR_8(15), printCapa@buf(17), 
 10093 ;;		 -> tempmeter_state@buf(17), counter_state@buf(17), printFreq@buf(17), voltmeter_state@buf(17), 
 10094 ;;		 -> STR_1(9), 
 10095 ;;  start           1    7[BANK0 ] char 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  i               1   19[BANK0 ] unsigned char 
 10098 ;;  chr             1   18[BANK0 ] char 
 10099 ;;  j               1   17[BANK0 ] unsigned char 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10109 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10110 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10111 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10112 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10113 ;;Total ram usage:       15 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    4
 10116 ;; This function calls:
 10117 ;;		_getPrintableSize
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;;		_voltmeter_state
 10121 ;;		_printFreq
 10122 ;;		_counter_state
 10123 ;;		_tempmeter_state
 10124 ;;		_printCapa
 10125 ;;		_resmeter_state
 10126 ;;		_pwm_state
 10127 ;;		_ibtn_state
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           
 10132                           ;psect for function _writeo
 10133  16B5                     _writeo:	
 10134                           
 10135                           ;utils.c: 25: byte i,j;
 10136                           ;utils.c: 26: signed char chr;
 10137                           ;utils.c: 28: if(start<0){
 10138                           
 10139                           ;incstack = 0
 10140                           ; Regs used in _writeo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10141  16B5  0140               	movlb	0	; select bank0
 10142  16B6  1FA7               	btfss	writeo@start,7
 10143  16B7  2EC7               	goto	l5637
 10144                           
 10145                           ;utils.c: 29: start = -start - getPrintableSize(a) -1;
 10146  16B8  0826               	movf	writeo@a+1,w
 10147  16B9  00F5               	movwf	getPrintableSize@a+1
 10148  16BA  0825               	movf	writeo@a,w
 10149  16BB  00F4               	movwf	getPrintableSize@a
 10150  16BC  3191  217B  3196   	fcall	_getPrintableSize
 10151  16BF  0140               	movlb	0	; select bank0
 10152  16C0  0727               	addwf	writeo@start,w
 10153  16C1  3E01               	addlw	1
 10154  16C2  3AFF               	xorlw	255
 10155  16C3  3E01               	addlw	1
 10156  16C4  00A8               	movwf	??_writeo
 10157  16C5  0828               	movf	??_writeo,w
 10158  16C6  00A7               	movwf	writeo@start
 10159  16C7                     l5637:	
 10160                           
 10161                           ;utils.c: 30: }
 10162                           ;utils.c: 31: start = ((((((start)>(0)) ? (start):(0)))<(8-1)) ? ((((start)>(0)) ? (star
      +                          t):(0))):(8-1));
 10163  16C7  0827               	movf	writeo@start,w
 10164  16C8  3A80               	xorlw	128
 10165  16C9  3E7F               	addlw	-129
 10166  16CA  1803               	skipnc
 10167  16CB  2ECF               	goto	l5641
 10168  16CC  01AD               	clrf	_writeo$1549
 10169  16CD  01AE               	clrf	_writeo$1549+1
 10170  16CE  2ED4               	goto	l5643
 10171  16CF                     l5641:	
 10172  16CF  0827               	movf	writeo@start,w
 10173  16D0  00AD               	movwf	_writeo$1549
 10174  16D1  01AE               	clrf	_writeo$1549+1
 10175  16D2  1BAD               	btfsc	_writeo$1549,7
 10176  16D3  03AE               	decf	_writeo$1549+1,f
 10177  16D4                     l5643:	
 10178  16D4  082E               	movf	_writeo$1549+1,w
 10179  16D5  3A80               	xorlw	128
 10180  16D6  00A8               	movwf	??_writeo
 10181  16D7  3080               	movlw	128
 10182  16D8  0228               	subwf	??_writeo,w
 10183  16D9  1D03               	skipz
 10184  16DA  2EDD               	goto	u6585
 10185  16DB  3007               	movlw	7
 10186  16DC  022D               	subwf	_writeo$1549,w
 10187  16DD                     u6585:	
 10188  16DD  1C03               	skipc
 10189  16DE  2EE5               	goto	l5647
 10190  16DF  3007               	movlw	7
 10191  16E0  0140               	movlb	0	; select bank0
 10192  16E1  00AB               	movwf	_writeo$1548
 10193  16E2  3000               	movlw	0
 10194  16E3  00AC               	movwf	_writeo$1548+1
 10195  16E4  2EF7               	goto	l5655
 10196  16E5                     l5647:	
 10197  16E5  0140               	movlb	0	; select bank0
 10198  16E6  0827               	movf	writeo@start,w
 10199  16E7  3A80               	xorlw	128
 10200  16E8  3E7F               	addlw	-129
 10201  16E9  1803               	skipnc
 10202  16EA  2EEE               	goto	l5651
 10203  16EB  01AF               	clrf	_writeo$1550
 10204  16EC  01B0               	clrf	_writeo$1550+1
 10205  16ED  2EF3               	goto	l5653
 10206  16EE                     l5651:	
 10207  16EE  0827               	movf	writeo@start,w
 10208  16EF  00AF               	movwf	_writeo$1550
 10209  16F0  01B0               	clrf	_writeo$1550+1
 10210  16F1  1BAF               	btfsc	_writeo$1550,7
 10211  16F2  03B0               	decf	_writeo$1550+1,f
 10212  16F3                     l5653:	
 10213  16F3  0830               	movf	_writeo$1550+1,w
 10214  16F4  00AC               	movwf	_writeo$1548+1
 10215  16F5  082F               	movf	_writeo$1550,w
 10216  16F6  00AB               	movwf	_writeo$1548
 10217  16F7                     l5655:	
 10218  16F7  082B               	movf	_writeo$1548,w
 10219  16F8  00A8               	movwf	??_writeo
 10220  16F9  0828               	movf	??_writeo,w
 10221  16FA  00A7               	movwf	writeo@start
 10222                           
 10223                           ;utils.c: 33: for(i=start, j=0; (i<8) && (a[j] != '\0'); i++, j++){
 10224  16FB  0827               	movf	writeo@start,w
 10225  16FC  00A8               	movwf	??_writeo
 10226  16FD  0828               	movf	??_writeo,w
 10227  16FE  00B3               	movwf	writeo@i
 10228  16FF  01B1               	clrf	writeo@j
 10229  1700                     l5675:	
 10230  1700  3008               	movlw	8
 10231  1701  0233               	subwf	writeo@i,w
 10232  1702  1803               	skipnc
 10233  1703  0008               	return
 10234  1704  0826               	movf	writeo@a+1,w
 10235  1705  00A9               	movwf	??_writeo+1
 10236  1706  0825               	movf	writeo@a,w
 10237  1707  00A8               	movwf	??_writeo
 10238  1708  0831               	movf	writeo@j,w
 10239  1709  0728               	addwf	??_writeo,w
 10240  170A  0084               	movwf	4
 10241  170B  0829               	movf	??_writeo+1,w
 10242  170C  1803               	skipnc
 10243  170D  0A29               	incf	??_writeo+1,w
 10244  170E  0085               	movwf	5
 10245  170F  0012               	moviw fsr0++
 10246  1710  1903               	btfsc	3,2
 10247  1711  0008               	return
 10248                           
 10249                           ;utils.c: 34: chr = a[j];
 10250  1712  0826               	movf	writeo@a+1,w
 10251  1713  00A9               	movwf	??_writeo+1
 10252  1714  0825               	movf	writeo@a,w
 10253  1715  00A8               	movwf	??_writeo
 10254  1716  0831               	movf	writeo@j,w
 10255  1717  0728               	addwf	??_writeo,w
 10256  1718  0084               	movwf	4
 10257  1719  0829               	movf	??_writeo+1,w
 10258  171A  1803               	skipnc
 10259  171B  0A29               	incf	??_writeo+1,w
 10260  171C  0085               	movwf	5
 10261  171D  0800               	movf	0,w	;code access
 10262  171E  00AA               	movwf	??_writeo+2
 10263  171F  082A               	movf	??_writeo+2,w
 10264  1720  00B2               	movwf	writeo@chr
 10265                           
 10266                           ;utils.c: 35: if(chr == '.')
 10267  1721  302E               	movlw	46
 10268  1722  0632               	xorwf	writeo@chr,w
 10269  1723  1D03               	btfss	3,2
 10270  1724  2F38               	goto	l784
 10271                           
 10272                           ;utils.c: 36: display[--i] |= charset[chr];
 10273  1725  0832               	movf	writeo@chr,w
 10274  1726  3E00               	addlw	low (_charset| (0+32768))
 10275  1727  0084               	movwf	4
 10276  1728  3090               	movlw	high (_charset| (0+32768))
 10277  1729  1803               	skipnc
 10278  172A  3E01               	addlw	1
 10279  172B  0085               	movwf	5
 10280  172C  0800               	movf	0,w	;code access
 10281  172D  00A8               	movwf	??_writeo
 10282  172E  3001               	movlw	1
 10283  172F  02B3               	subwf	writeo@i,f
 10284  1730  0833               	movf	writeo@i,w
 10285  1731  3E20               	addlw	(low (_display| (0+256)))& (0+255)
 10286  1732  0086               	movwf	6
 10287  1733  3001               	movlw	1	; select bank2/3
 10288  1734  0087               	movwf	7
 10289  1735  0828               	movf	??_writeo,w
 10290  1736  0481               	iorwf	1,f
 10291  1737  2F4E               	goto	l5671
 10292  1738                     l784:	
 10293                           
 10294                           ;utils.c: 37: else if(0<=chr)
 10295  1738  1BB2               	btfsc	writeo@chr,7
 10296  1739  2F41               	goto	l5669
 10297                           
 10298                           ;utils.c: 38: display[i] = charset[chr];
 10299  173A  0832               	movf	writeo@chr,w
 10300  173B  3E00               	addlw	low (_charset| (0+32768))
 10301  173C  0084               	movwf	4
 10302  173D  3090               	movlw	high (_charset| (0+32768))
 10303  173E  1803               	skipnc
 10304  173F  3E01               	addlw	1
 10305  1740  2F44               	goto	L3
 10306  1741                     l5669:	
 10307                           
 10308                           ;utils.c: 39: else
 10309                           ;utils.c: 40: display[i] = charset[127];
 10310  1741  307F               	movlw	low ((_charset+127)| (0+32768))
 10311  1742  0084               	movwf	4
 10312  1743  3090               	movlw	high ((_charset+127)| (0+32768))
 10313  1744                     L3:	
 10314  1744  0085               	movwf	5
 10315  1745  0800               	movf	0,w	;code access
 10316  1746  00A8               	movwf	??_writeo
 10317  1747  0833               	movf	writeo@i,w
 10318  1748  3E20               	addlw	(low (_display| (0+256)))& (0+255)
 10319  1749  0086               	movwf	6
 10320  174A  3001               	movlw	1	; select bank2/3
 10321  174B  0087               	movwf	7
 10322  174C  0828               	movf	??_writeo,w
 10323  174D  0081               	movwf	1
 10324  174E                     l5671:	
 10325  174E  3001               	movlw	1
 10326  174F  00A8               	movwf	??_writeo
 10327  1750  0828               	movf	??_writeo,w
 10328  1751  07B3               	addwf	writeo@i,f
 10329  1752  3001               	movlw	1
 10330  1753  00A8               	movwf	??_writeo
 10331  1754  0828               	movf	??_writeo,w
 10332  1755  07B1               	addwf	writeo@j,f
 10333  1756  2F00               	goto	l5675
 10334  1757                     __end_of_writeo:	
 10335                           
 10336                           	psect	text40
 10337  117B                     __ptext40:	
 10338 ;; *************** function _getPrintableSize *****************
 10339 ;; Defined at:
 10340 ;;		line 44 in file "utils.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;  a               2    4[COMMON] PTR const unsigned char 
 10343 ;;		 -> STR_10(11), STR_9(10), STR_8(15), printCapa@buf(17), 
 10344 ;;		 -> tempmeter_state@buf(17), counter_state@buf(17), printFreq@buf(17), voltmeter_state@buf(17), 
 10345 ;;		 -> STR_1(9), 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  s               1    4[BANK0 ] unsigned char 
 10348 ;;  chr             1    3[BANK0 ] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      unsigned char 
 10351 ;; Registers used:
 10352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10361 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        7 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    3
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_writeo
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           
 10373                           ;psect for function _getPrintableSize
 10374  117B                     _getPrintableSize:	
 10375                           
 10376                           ;utils.c: 46: byte s = 0;
 10377                           
 10378                           ;incstack = 0
 10379                           ; Regs used in _getPrintableSize: [wreg-fsr0h+status,2+status,0+pclath]
 10380  117B  0140               	movlb	0	; select bank0
 10381  117C  01A4               	clrf	getPrintableSize@s
 10382  117D                     l5311:	
 10383                           ;utils.c: 47: char chr;
 10384                           ;utils.c: 49: while((chr = *(a++)) != '\0')
 10385                           
 10386  117D  0875               	movf	getPrintableSize@a+1,w
 10387  117E  00A1               	movwf	??_getPrintableSize+1
 10388  117F  0874               	movf	getPrintableSize@a,w
 10389  1180  00A0               	movwf	??_getPrintableSize
 10390  1181  0AF4               	incf	getPrintableSize@a,f
 10391  1182  1903               	skipnz
 10392  1183  0AF5               	incf	getPrintableSize@a+1,f
 10393  1184  0820               	movf	??_getPrintableSize,w
 10394  1185  0084               	movwf	4
 10395  1186  0821               	movf	??_getPrintableSize+1,w
 10396  1187  0085               	movwf	5
 10397  1188  0800               	movf	0,w	;code access
 10398  1189  00A2               	movwf	??_getPrintableSize+2
 10399  118A  0822               	movf	??_getPrintableSize+2,w
 10400  118B  00A3               	movwf	getPrintableSize@chr
 10401  118C  0823               	movf	getPrintableSize@chr,w
 10402  118D  1903               	btfsc	3,2
 10403  118E  2998               	goto	l5313
 10404                           
 10405                           ;utils.c: 50: if(chr != '.')
 10406  118F  302E               	movlw	46
 10407  1190  0623               	xorwf	getPrintableSize@chr,w
 10408  1191  1903               	btfsc	3,2
 10409  1192  297D               	goto	l5311
 10410                           
 10411                           ;utils.c: 51: s++;
 10412  1193  3001               	movlw	1
 10413  1194  00A0               	movwf	??_getPrintableSize
 10414  1195  0820               	movf	??_getPrintableSize,w
 10415  1196  07A4               	addwf	getPrintableSize@s,f
 10416  1197  297D               	goto	l5311
 10417  1198                     l5313:	
 10418                           
 10419                           ;utils.c: 53: return s;
 10420  1198  0824               	movf	getPrintableSize@s,w
 10421  1199  0008               	return
 10422  119A                     __end_of_getPrintableSize:	
 10423                           
 10424                           	psect	text41
 10425  0050                     __ptext41:	
 10426 ;; *************** function _sprintf *****************
 10427 ;; Defined at:
 10428 ;;		line 492 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  sp              1    wreg     PTR unsigned char 
 10431 ;;		 -> printCapa@buf(17), tempmeter_state@buf(17), counter_state@buf(17), printFreq@buf(17), 
 10432 ;;		 -> voltmeter_state@buf(17), 
 10433 ;;  f               2    0[BANK1 ] PTR const unsigned char 
 10434 ;;		 -> STR_7(11), STR_6(12), STR_5(7), STR_4(8), 
 10435 ;;		 -> STR_3(11), STR_2(11), 
 10436 ;; Auto vars:     Size  Location     Type
 10437 ;;  sp              1   43[BANK1 ] PTR unsigned char 
 10438 ;;		 -> printCapa@buf(17), tempmeter_state@buf(17), counter_state@buf(17), printFreq@buf(17), 
 10439 ;;		 -> voltmeter_state@buf(17), 
 10440 ;;  val             4   27[BANK1 ] unsigned long 
 10441 ;;  tmpval          4   23[BANK1 ] struct .
 10442 ;;  fval            3   35[BANK1 ] struct .
 10443 ;;  flag            2   40[BANK1 ] unsigned short 
 10444 ;;  prec            2   38[BANK1 ] int 
 10445 ;;  width           2   33[BANK1 ] int 
 10446 ;;  exp             2   31[BANK1 ] int 
 10447 ;;  cp              2    0        PTR const unsigned char 
 10448 ;;  len             2    0        unsigned int 
 10449 ;;  c               1   42[BANK1 ] char 
 10450 ;;  ap              1   22[BANK1 ] PTR void [1]
 10451 ;;		 -> ?_sprintf(2), 
 10452 ;;  d               1    0        unsigned char 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  2    0[BANK1 ] int 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10462 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10463 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10464 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10465 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10466 ;;Total ram usage:       44 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:    6
 10469 ;; This function calls:
 10470 ;;		___awdiv
 10471 ;;		___ftadd
 10472 ;;		___ftge
 10473 ;;		___ftmul
 10474 ;;		___ftneg
 10475 ;;		___ftsub
 10476 ;;		___fttol
 10477 ;;		___lldiv
 10478 ;;		___llmod
 10479 ;;		___lltoft
 10480 ;;		___wmul
 10481 ;;		__div_to_l_
 10482 ;;		__tdiv_to_l_
 10483 ;;		_fround
 10484 ;;		_isdigit
 10485 ;;		_scale
 10486 ;; This function is called by:
 10487 ;;		_voltmeter_state
 10488 ;;		_printFreq
 10489 ;;		_counter_state
 10490 ;;		_tempmeter_state
 10491 ;;		_printCapa
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           
 10496                           ;psect for function _sprintf
 10497  0050                     _sprintf:	
 10498                           
 10499                           ;incstack = 0
 10500                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10501                           ;sprintf@sp stored from wreg
 10502  0050  0141               	movlb	1	; select bank1
 10503  0051  00CB               	movwf	sprintf@sp^(0+128)
 10504                           
 10505                           ;doprnt.c: 494: va_list ap;
 10506                           ;doprnt.c: 499: signed char c;
 10507                           ;doprnt.c: 501: int width;
 10508                           ;doprnt.c: 504: int prec;
 10509                           ;doprnt.c: 508: unsigned short flag;
 10510                           ;doprnt.c: 515: char d;
 10511                           ;doprnt.c: 516: double fval;
 10512                           ;doprnt.c: 517: int exp;
 10513                           ;doprnt.c: 523: union {
 10514                           ;doprnt.c: 524: unsigned long vd;
 10515                           ;doprnt.c: 525: double integ;
 10516                           ;doprnt.c: 526: } tmpval;
 10517                           ;doprnt.c: 528: unsigned long val;
 10518                           ;doprnt.c: 529: unsigned len;
 10519                           ;doprnt.c: 530: const char * cp;
 10520                           ;doprnt.c: 533: *ap = __va_start();
 10521  0052  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 10522  0053  00A5               	movwf	??_sprintf^(0+128)
 10523  0054  0825               	movf	??_sprintf^(0+128),w
 10524  0055  00B6               	movwf	sprintf@ap^(0+128)
 10525  0056                     l6219:	
 10526                           ;doprnt.c: 536: while(c = *f++) {
 10527                           
 10528  0056  0821               	movf	(sprintf@f+1)^(0+128),w
 10529  0057  00A6               	movwf	(??_sprintf^(0+128)+1)
 10530  0058  0820               	movf	sprintf@f^(0+128),w
 10531  0059  00A5               	movwf	??_sprintf^(0+128)
 10532  005A  0AA0               	incf	sprintf@f^(0+128),f
 10533  005B  1903               	skipnz
 10534  005C  0AA1               	incf	(sprintf@f+1)^(0+128),f
 10535  005D  0825               	movf	??_sprintf^(0+128),w
 10536  005E  0084               	movwf	4
 10537  005F  0826               	movf	(??_sprintf+1)^(0+128),w
 10538  0060  0085               	movwf	5
 10539  0061  0800               	movf	0,w	;code access
 10540  0062  00A7               	movwf	(??_sprintf+2)^(0+128)
 10541  0063  0827               	movf	(??_sprintf+2)^(0+128),w
 10542  0064  00CA               	movwf	sprintf@c^(0+128)
 10543  0065  084A               	movf	sprintf@c^(0+128),w
 10544  0066  1903               	btfsc	3,2
 10545  0067  2F8B               	goto	l6221
 10546                           
 10547                           ;doprnt.c: 538: if(c != '%')
 10548  0068  3025               	movlw	37
 10549  0069  064A               	xorwf	sprintf@c^(0+128),w
 10550  006A  1903               	btfsc	3,2
 10551  006B  2878               	goto	l5867
 10552                           
 10553                           ;doprnt.c: 540: {
 10554                           ;doprnt.c: 541: ((*sp++ = (c)));
 10555  006C  084A               	movf	sprintf@c^(0+128),w
 10556  006D  00A5               	movwf	??_sprintf^(0+128)
 10557  006E  084B               	movf	sprintf@sp^(0+128),w
 10558  006F  0086               	movwf	6
 10559  0070  0187               	clrf	7
 10560  0071  0825               	movf	??_sprintf^(0+128),w
 10561  0072  0081               	movwf	1
 10562  0073  3001               	movlw	1
 10563  0074  00A5               	movwf	??_sprintf^(0+128)
 10564  0075  0825               	movf	??_sprintf^(0+128),w
 10565  0076  07CB               	addwf	sprintf@sp^(0+128),f
 10566                           
 10567                           ;doprnt.c: 542: continue;
 10568  0077  2856               	goto	l6219
 10569  0078                     l5867:	
 10570                           
 10571                           ;doprnt.c: 543: }
 10572                           ;doprnt.c: 546: width = 0;
 10573  0078  01C1               	clrf	sprintf@width^(0+128)
 10574  0079  01C2               	clrf	(sprintf@width+1)^(0+128)
 10575                           
 10576                           ;doprnt.c: 548: flag = 0;
 10577  007A  01C8               	clrf	sprintf@flag^(0+128)
 10578  007B  01C9               	clrf	(sprintf@flag+1)^(0+128)
 10579                           
 10580                           ;doprnt.c: 551: switch(*f) {
 10581                           
 10582                           ;doprnt.c: 550: for(;;) {
 10583  007C  2886               	goto	l5877
 10584  007D                     l838:	
 10585                           ;doprnt.c: 560: case ' ':
 10586                           
 10587                           
 10588                           ;doprnt.c: 561: flag |= 0x01;
 10589  007D  1448               	bsf	sprintf@flag^(0+128),0
 10590  007E  2882               	goto	l5873
 10591  007F                     l840:	
 10592                           ;doprnt.c: 567: case '+':
 10593                           
 10594                           ;doprnt.c: 563: continue;
 10595                           
 10596                           ;doprnt.c: 562: f++;
 10597                           
 10598                           
 10599                           ;doprnt.c: 568: flag |= 0x02;
 10600  007F  14C8               	bsf	sprintf@flag^(0+128),1
 10601  0080  2882               	goto	l5873
 10602  0081                     l841:	
 10603                           ;doprnt.c: 579: case '0':
 10604                           
 10605                           ;doprnt.c: 570: continue;
 10606                           
 10607                           ;doprnt.c: 569: f++;
 10608                           
 10609                           
 10610                           ;doprnt.c: 580: flag |= 0x04;
 10611  0081  1548               	bsf	sprintf@flag^(0+128),2
 10612  0082                     l5873:	
 10613                           
 10614                           ;doprnt.c: 581: f++;
 10615  0082  3001               	movlw	1
 10616  0083  07A0               	addwf	sprintf@f^(0+128),f
 10617  0084  3000               	movlw	0
 10618  0085  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
 10619  0086                     l5877:	
 10620                           ;doprnt.c: 584: }
 10621                           
 10622                           ;doprnt.c: 582: continue;
 10623                           
 10624  0086  0820               	movf	sprintf@f^(0+128),w
 10625  0087  0084               	movwf	4
 10626  0088  0821               	movf	(sprintf@f+1)^(0+128),w
 10627  0089  0085               	movwf	5
 10628  008A  0800               	movf	0,w	;code access
 10629                           
 10630                           ; Switch size 1, requested type "space"
 10631                           ; Number of cases is 3, Range of values is 32 to 48
 10632                           ; switch strategies available:
 10633                           ; Name         Instructions Cycles
 10634                           ; simple_byte           10     6 (average)
 10635                           ; direct_byte           43     9 (fixed)
 10636                           ; jumptable            263     9 (fixed)
 10637                           ;	Chosen strategy is simple_byte
 10638  008B  3A20               	xorlw	32	; case 32
 10639  008C  1903               	skipnz
 10640  008D  287D               	goto	l838
 10641  008E  3A0B               	xorlw	11	; case 43
 10642  008F  1903               	skipnz
 10643  0090  287F               	goto	l840
 10644  0091  3A1B               	xorlw	27	; case 48
 10645  0092  1903               	skipnz
 10646  0093  2881               	goto	l841
 10647  0094  2895               	goto	l843
 10648  0095                     l843:	
 10649                           ;doprnt.c: 586: }
 10650                           
 10651                           ;doprnt.c: 585: break;
 10652                           
 10653                           
 10654                           ;doprnt.c: 589: if(flag & 0x02)
 10655  0095  1CC8               	btfss	sprintf@flag^(0+128),1
 10656  0096  289B               	goto	l5881
 10657                           
 10658                           ;doprnt.c: 590: flag &= ~0x01;
 10659  0097  30FE               	movlw	254
 10660  0098  05C8               	andwf	sprintf@flag^(0+128),f
 10661  0099  30FF               	movlw	255
 10662  009A  05C9               	andwf	(sprintf@flag+1)^(0+128),f
 10663  009B                     l5881:	
 10664                           
 10665                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10666  009B  0820               	movf	sprintf@f^(0+128),w
 10667  009C  0084               	movwf	4
 10668  009D  0821               	movf	(sprintf@f+1)^(0+128),w
 10669  009E  0085               	movwf	5
 10670  009F  0800               	movf	0,w	;code access
 10671  00A0  319E  263E  3180   	fcall	_isdigit
 10672  00A3  1C03               	btfss	3,0
 10673  00A4  28DD               	goto	l5893
 10674                           
 10675                           ;doprnt.c: 598: width = 0;
 10676  00A5  0141               	movlb	1	; select bank1
 10677  00A6  01C1               	clrf	sprintf@width^(0+128)
 10678  00A7  01C2               	clrf	(sprintf@width+1)^(0+128)
 10679  00A8                     l5885:	
 10680                           ;doprnt.c: 599: do {
 10681                           
 10682                           
 10683                           ;doprnt.c: 600: width *= 10;
 10684  00A8  300A               	movlw	10
 10685  00A9  0140               	movlb	0	; select bank0
 10686  00AA  00AD               	movwf	___wmul@multiplier
 10687  00AB  3000               	movlw	0
 10688  00AC  00AE               	movwf	___wmul@multiplier+1
 10689  00AD  0141               	movlb	1	; select bank1
 10690  00AE  0842               	movf	(sprintf@width+1)^(0+128),w
 10691  00AF  0140               	movlb	0	; select bank0
 10692  00B0  00B0               	movwf	___wmul@multiplicand+1
 10693  00B1  0141               	movlb	1	; select bank1
 10694  00B2  0841               	movf	sprintf@width^(0+128),w
 10695  00B3  0140               	movlb	0	; select bank0
 10696  00B4  00AF               	movwf	___wmul@multiplicand
 10697  00B5  3191  215F  3180   	fcall	___wmul
 10698  00B8  0140               	movlb	0	; select bank0
 10699  00B9  082E               	movf	?___wmul+1,w
 10700  00BA  0141               	movlb	1	; select bank1
 10701  00BB  00C2               	movwf	(sprintf@width+1)^(0+128)
 10702  00BC  0140               	movlb	0	; select bank0
 10703  00BD  082D               	movf	?___wmul,w
 10704  00BE  0141               	movlb	1	; select bank1
 10705  00BF  00C1               	movwf	sprintf@width^(0+128)
 10706                           
 10707                           ;doprnt.c: 601: width += *f++ - '0';
 10708  00C0  0820               	movf	sprintf@f^(0+128),w
 10709  00C1  0084               	movwf	4
 10710  00C2  0821               	movf	(sprintf@f+1)^(0+128),w
 10711  00C3  0085               	movwf	5
 10712  00C4  0800               	movf	0,w	;code access
 10713  00C5  3ED0               	addlw	208
 10714  00C6  00A5               	movwf	??_sprintf^(0+128)
 10715  00C7  30FF               	movlw	255
 10716  00C8  1803               	skipnc
 10717  00C9  3000               	movlw	0
 10718  00CA  00A6               	movwf	(??_sprintf^(0+128)+1)
 10719  00CB  0825               	movf	??_sprintf^(0+128),w
 10720  00CC  07C1               	addwf	sprintf@width^(0+128),f
 10721  00CD  0826               	movf	(??_sprintf+1)^(0+128),w
 10722  00CE  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 10723  00CF  3001               	movlw	1
 10724  00D0  07A0               	addwf	sprintf@f^(0+128),f
 10725  00D1  3000               	movlw	0
 10726  00D2  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
 10727                           
 10728                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10729  00D3  0820               	movf	sprintf@f^(0+128),w
 10730  00D4  0084               	movwf	4
 10731  00D5  0821               	movf	(sprintf@f+1)^(0+128),w
 10732  00D6  0085               	movwf	5
 10733  00D7  0800               	movf	0,w	;code access
 10734  00D8  319E  263E  3180   	fcall	_isdigit
 10735  00DB  1803               	btfsc	3,0
 10736  00DC  28A8               	goto	l5885
 10737  00DD                     l5893:	
 10738                           
 10739                           ;doprnt.c: 608: }
 10740                           ;doprnt.c: 611: if(*f == '.') {
 10741  00DD  0141               	movlb	1	; select bank1
 10742  00DE  0820               	movf	sprintf@f^(0+128),w
 10743  00DF  0084               	movwf	4
 10744  00E0  0821               	movf	(sprintf@f+1)^(0+128),w
 10745  00E1  0085               	movwf	5
 10746  00E2  0012               	moviw fsr0++
 10747  00E3  3A2E               	xorlw	46
 10748  00E4  1D03               	btfss	3,2
 10749  00E5  2923               	goto	l5907
 10750                           
 10751                           ;doprnt.c: 612: flag |= 0x4000;
 10752  00E6  1749               	bsf	(sprintf@flag^(0+128)+1),6
 10753                           
 10754                           ;doprnt.c: 613: f++;
 10755  00E7  3001               	movlw	1
 10756  00E8  07A0               	addwf	sprintf@f^(0+128),f
 10757  00E9  3000               	movlw	0
 10758  00EA  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
 10759                           
 10760                           ;doprnt.c: 620: {
 10761                           ;doprnt.c: 621: prec = 0;
 10762  00EB  01C6               	clrf	sprintf@prec^(0+128)
 10763  00EC  01C7               	clrf	(sprintf@prec+1)^(0+128)
 10764  00ED                     l5905:	
 10765                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 10766                           
 10767  00ED  0820               	movf	sprintf@f^(0+128),w
 10768  00EE  0084               	movwf	4
 10769  00EF  0821               	movf	(sprintf@f+1)^(0+128),w
 10770  00F0  0085               	movwf	5
 10771  00F1  0800               	movf	0,w	;code access
 10772  00F2  319E  263E  3180   	fcall	_isdigit
 10773  00F5  1C03               	btfss	3,0
 10774  00F6  292A               	goto	l5913
 10775                           
 10776                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 10777  00F7  0141               	movlb	1	; select bank1
 10778  00F8  0820               	movf	sprintf@f^(0+128),w
 10779  00F9  0084               	movwf	4
 10780  00FA  0821               	movf	(sprintf@f+1)^(0+128),w
 10781  00FB  0085               	movwf	5
 10782  00FC  0800               	movf	0,w	;code access
 10783  00FD  00A5               	movwf	??_sprintf^(0+128)
 10784  00FE  01A6               	clrf	(??_sprintf^(0+128)+1)
 10785  00FF  0847               	movf	(sprintf@prec+1)^(0+128),w
 10786  0100  0140               	movlb	0	; select bank0
 10787  0101  00AE               	movwf	___wmul@multiplier+1
 10788  0102  0141               	movlb	1	; select bank1
 10789  0103  0846               	movf	sprintf@prec^(0+128),w
 10790  0104  0140               	movlb	0	; select bank0
 10791  0105  00AD               	movwf	___wmul@multiplier
 10792  0106  300A               	movlw	10
 10793  0107  00AF               	movwf	___wmul@multiplicand
 10794  0108  3000               	movlw	0
 10795  0109  00B0               	movwf	___wmul@multiplicand+1
 10796  010A  3191  215F  3180   	fcall	___wmul
 10797  010D  0141               	movlb	1	; select bank1
 10798  010E  0825               	movf	??_sprintf^(0+128),w
 10799  010F  0140               	movlb	0	; select bank0
 10800  0110  072D               	addwf	?___wmul,w
 10801  0111  0141               	movlb	1	; select bank1
 10802  0112  00A7               	movwf	(??_sprintf+2)^(0+128)
 10803  0113  0826               	movf	(??_sprintf+1)^(0+128),w
 10804  0114  0140               	movlb	0	; select bank0
 10805  0115  3D2E               	addwfc	?___wmul+1,w
 10806  0116  0141               	movlb	1	; select bank1
 10807  0117  00A8               	movwf	(??_sprintf+3)^(0+128)
 10808  0118  0827               	movf	(??_sprintf+2)^(0+128),w
 10809  0119  3ED0               	addlw	208
 10810  011A  00C6               	movwf	sprintf@prec^(0+128)
 10811  011B  30FF               	movlw	255
 10812  011C  3D28               	addwfc	(??_sprintf+3)^(0+128),w
 10813  011D  00C7               	movwf	(sprintf@prec+1)^(0+128)
 10814  011E  3001               	movlw	1
 10815  011F  07A0               	addwf	sprintf@f^(0+128),f
 10816  0120  3000               	movlw	0
 10817  0121  3DA1               	addwfc	(sprintf@f+1)^(0+128),f
 10818  0122  28ED               	goto	l5905
 10819  0123                     l5907:	
 10820                           ;doprnt.c: 624: }
 10821                           ;doprnt.c: 625: } else {
 10822                           
 10823                           
 10824                           ;doprnt.c: 626: prec = 0;
 10825  0123  0141               	movlb	1	; select bank1
 10826  0124  01C6               	clrf	sprintf@prec^(0+128)
 10827  0125  01C7               	clrf	(sprintf@prec+1)^(0+128)
 10828                           
 10829                           ;doprnt.c: 628: flag |= 0x1000;
 10830  0126  1649               	bsf	(sprintf@flag^(0+128)+1),4
 10831                           
 10832                           ;doprnt.c: 630: }
 10833                           ;doprnt.c: 635: switch(c = *f++) {
 10834  0127  292A               	goto	l5913
 10835  0128                     l856:	
 10836                           ;doprnt.c: 662: case 'f':
 10837                           
 10838                           ;doprnt.c: 638: goto alldone;
 10839                           
 10840                           ;doprnt.c: 637: case 0:
 10841                           
 10842                           
 10843                           ;doprnt.c: 663: flag |= 0x400;
 10844  0128  1549               	bsf	(sprintf@flag^(0+128)+1),2
 10845                           
 10846                           ;doprnt.c: 698: case 'i':
 10847                           ;doprnt.c: 699: break;
 10848                           
 10849                           ;doprnt.c: 697: case 'd':
 10850                           
 10851                           ;doprnt.c: 664: break;
 10852  0129  2945               	goto	l5915
 10853  012A                     l5913:	
 10854                           ;doprnt.c: 822: }
 10855                           
 10856                           ;doprnt.c: 813: continue;
 10857                           
 10858                           ;doprnt.c: 802: default:
 10859                           
 10860  012A  0141               	movlb	1	; select bank1
 10861  012B  0821               	movf	(sprintf@f+1)^(0+128),w
 10862  012C  00A6               	movwf	(??_sprintf^(0+128)+1)
 10863  012D  0820               	movf	sprintf@f^(0+128),w
 10864  012E  00A5               	movwf	??_sprintf^(0+128)
 10865  012F  0AA0               	incf	sprintf@f^(0+128),f
 10866  0130  1903               	skipnz
 10867  0131  0AA1               	incf	(sprintf@f+1)^(0+128),f
 10868  0132  0825               	movf	??_sprintf^(0+128),w
 10869  0133  0084               	movwf	4
 10870  0134  0826               	movf	(??_sprintf+1)^(0+128),w
 10871  0135  0085               	movwf	5
 10872  0136  0800               	movf	0,w	;code access
 10873  0137  00CA               	movwf	sprintf@c^(0+128)
 10874                           
 10875                           ; Switch size 1, requested type "space"
 10876                           ; Number of cases is 4, Range of values is 0 to 105
 10877                           ; switch strategies available:
 10878                           ; Name         Instructions Cycles
 10879                           ; simple_byte           13     7 (average)
 10880                           ; direct_byte          218     6 (fixed)
 10881                           ; jumptable            260     6 (fixed)
 10882                           ;	Chosen strategy is simple_byte
 10883  0138  3A00               	xorlw	0	; case 0
 10884  0139  1903               	skipnz
 10885  013A  2F8B               	goto	l6221
 10886  013B  3A64               	xorlw	100	; case 100
 10887  013C  1903               	skipnz
 10888  013D  2945               	goto	l5915
 10889  013E  3A02               	xorlw	2	; case 102
 10890  013F  1903               	skipnz
 10891  0140  2928               	goto	l856
 10892  0141  3A0F               	xorlw	15	; case 105
 10893  0142  1903               	skipnz
 10894  0143  2945               	goto	l5915
 10895  0144  2856               	goto	l6219
 10896  0145                     l5915:	
 10897                           
 10898                           ;doprnt.c: 825: if(flag & (0x700)) {
 10899  0145  3000               	movlw	0
 10900  0146  0548               	andwf	sprintf@flag^(0+128),w
 10901  0147  00A5               	movwf	??_sprintf^(0+128)
 10902  0148  3007               	movlw	7
 10903  0149  0549               	andwf	(sprintf@flag+1)^(0+128),w
 10904  014A  00A6               	movwf	(??_sprintf+1)^(0+128)
 10905  014B  0825               	movf	??_sprintf^(0+128),w
 10906  014C  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10907  014D  1903               	btfsc	3,2
 10908  014E  2DFE               	goto	l6109
 10909                           
 10910                           ;doprnt.c: 827: if(flag & 0x1000)
 10911  014F  1E49               	btfss	(sprintf@flag+1)^(0+128),4
 10912  0150  2955               	goto	l5921
 10913                           
 10914                           ;doprnt.c: 829: prec = 6;
 10915  0151  3006               	movlw	6
 10916  0152  00C6               	movwf	sprintf@prec^(0+128)
 10917  0153  3000               	movlw	0
 10918  0154  00C7               	movwf	(sprintf@prec^(0+128)+1)
 10919  0155                     l5921:	
 10920                           
 10921                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 10922  0155  0836               	movf	sprintf@ap^(0+128),w
 10923  0156  0086               	movwf	6
 10924  0157  0187               	clrf	7
 10925  0158  3F40               	moviw [0]fsr1
 10926  0159  00C3               	movwf	sprintf@fval^(0+128)
 10927  015A  3F41               	moviw [1]fsr1
 10928  015B  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10929  015C  3F42               	moviw [2]fsr1
 10930  015D  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10931  015E  3003               	movlw	3
 10932  015F  00A5               	movwf	??_sprintf^(0+128)
 10933  0160  0825               	movf	??_sprintf^(0+128),w
 10934  0161  07B6               	addwf	sprintf@ap^(0+128),f
 10935                           
 10936                           ;doprnt.c: 831: if(fval < 0.0) {
 10937  0162  0843               	movf	sprintf@fval^(0+128),w
 10938  0163  0140               	movlb	0	; select bank0
 10939  0164  00A0               	movwf	___ftge@ff1
 10940  0165  0141               	movlb	1	; select bank1
 10941  0166  0844               	movf	(sprintf@fval+1)^(0+128),w
 10942  0167  0140               	movlb	0	; select bank0
 10943  0168  00A1               	movwf	___ftge@ff1+1
 10944  0169  0141               	movlb	1	; select bank1
 10945  016A  0845               	movf	(sprintf@fval+2)^(0+128),w
 10946  016B  0140               	movlb	0	; select bank0
 10947  016C  00A2               	movwf	___ftge@ff1+2
 10948  016D  3000               	movlw	0
 10949  016E  00A3               	movwf	___ftge@ff2
 10950  016F  3000               	movlw	0
 10951  0170  00A4               	movwf	___ftge@ff2+1
 10952  0171  3000               	movlw	0
 10953  0172  00A5               	movwf	___ftge@ff2+2
 10954  0173  3192  22EB  3180   	fcall	___ftge
 10955  0176  1803               	btfsc	3,0
 10956  0177  298D               	goto	l5931
 10957                           
 10958                           ;doprnt.c: 832: fval = -fval;
 10959  0178  0141               	movlb	1	; select bank1
 10960  0179  0843               	movf	sprintf@fval^(0+128),w
 10961  017A  00F4               	movwf	___ftneg@f1
 10962  017B  0844               	movf	(sprintf@fval+1)^(0+128),w
 10963  017C  00F5               	movwf	___ftneg@f1+1
 10964  017D  0845               	movf	(sprintf@fval+2)^(0+128),w
 10965  017E  00F6               	movwf	___ftneg@f1+2
 10966  017F  319D  25CF  3180   	fcall	___ftneg
 10967  0182  0874               	movf	?___ftneg,w
 10968  0183  0141               	movlb	1	; select bank1
 10969  0184  00C3               	movwf	sprintf@fval^(0+128)
 10970  0185  0875               	movf	?___ftneg+1,w
 10971  0186  00C4               	movwf	(sprintf@fval+1)^(0+128)
 10972  0187  0876               	movf	?___ftneg+2,w
 10973  0188  00C5               	movwf	(sprintf@fval+2)^(0+128)
 10974                           
 10975                           ;doprnt.c: 833: flag |= 0x03;
 10976  0189  3003               	movlw	3
 10977  018A  04C8               	iorwf	sprintf@flag^(0+128),f
 10978  018B  3000               	movlw	0
 10979  018C  04C9               	iorwf	(sprintf@flag+1)^(0+128),f
 10980  018D                     l5931:	
 10981                           
 10982                           ;doprnt.c: 834: }
 10983                           ;doprnt.c: 835: exp = 0;
 10984  018D  0141               	movlb	1	; select bank1
 10985  018E  01BF               	clrf	sprintf@exp^(0+128)
 10986  018F  01C0               	clrf	(sprintf@exp+1)^(0+128)
 10987                           
 10988                           ;doprnt.c: 836: if( fval!=0) {
 10989  0190  0845               	movf	(sprintf@fval+2)^(0+128),w
 10990  0191  0444               	iorwf	(sprintf@fval+1)^(0+128),w
 10991  0192  0443               	iorwf	sprintf@fval^(0+128),w
 10992  0193  1903               	skipnz
 10993  0194  2A5B               	goto	l864
 10994                           
 10995                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 10996  0195  30C3               	movlw	low (sprintf@fval| 0)
 10997  0196  0086               	movwf	6
 10998  0197  0187               	clrf	7
 10999  0198  3F40               	moviw [0]fsr1
 11000  0199  00A5               	movwf	??_sprintf^(0+128)
 11001  019A  3F41               	moviw [1]fsr1
 11002  019B  00A6               	movwf	(??_sprintf^(0+128)+1)
 11003  019C  3F42               	moviw [2]fsr1
 11004  019D  00A7               	movwf	(??_sprintf^(0+128)+2)
 11005  019E  3F43               	moviw [3]fsr1
 11006  019F  00A8               	movwf	(??_sprintf^(0+128)+3)
 11007  01A0  300F               	movlw	15
 11008  01A1                     u6755:	
 11009  01A1  36A8               	lsrf	(??_sprintf^(0+128)+3),f
 11010  01A2  0CA7               	rrf	(??_sprintf^(0+128)+2),f
 11011  01A3  0CA6               	rrf	(??_sprintf^(0+128)+1),f
 11012  01A4  0CA5               	rrf	??_sprintf^(0+128),f
 11013  01A5  0B89               	decfsz	9,f
 11014  01A6  29A1               	goto	u6755
 11015  01A7  30FF               	movlw	255
 11016  01A8  0525               	andwf	??_sprintf^(0+128),w
 11017  01A9  00A9               	movwf	(??_sprintf+4)^(0+128)
 11018  01AA  3000               	movlw	0
 11019  01AB  0526               	andwf	(??_sprintf+1)^(0+128),w
 11020  01AC  00AA               	movwf	(??_sprintf+5)^(0+128)
 11021  01AD  0829               	movf	(??_sprintf+4)^(0+128),w
 11022  01AE  3E82               	addlw	130
 11023  01AF  00BF               	movwf	sprintf@exp^(0+128)
 11024  01B0  30FF               	movlw	255
 11025  01B1  3D2A               	addwfc	(??_sprintf+5)^(0+128),w
 11026  01B2  00C0               	movwf	(sprintf@exp+1)^(0+128)
 11027                           
 11028                           ;doprnt.c: 838: exp--;
 11029  01B3  30FF               	movlw	255
 11030  01B4  07BF               	addwf	sprintf@exp^(0+128),f
 11031  01B5  30FF               	movlw	255
 11032  01B6  3DC0               	addwfc	(sprintf@exp+1)^(0+128),f
 11033                           
 11034                           ;doprnt.c: 839: exp *= 3;
 11035  01B7  3003               	movlw	3
 11036  01B8  0140               	movlb	0	; select bank0
 11037  01B9  00AD               	movwf	___wmul@multiplier
 11038  01BA  3000               	movlw	0
 11039  01BB  00AE               	movwf	___wmul@multiplier+1
 11040  01BC  0141               	movlb	1	; select bank1
 11041  01BD  0840               	movf	(sprintf@exp+1)^(0+128),w
 11042  01BE  0140               	movlb	0	; select bank0
 11043  01BF  00B0               	movwf	___wmul@multiplicand+1
 11044  01C0  0141               	movlb	1	; select bank1
 11045  01C1  083F               	movf	sprintf@exp^(0+128),w
 11046  01C2  0140               	movlb	0	; select bank0
 11047  01C3  00AF               	movwf	___wmul@multiplicand
 11048  01C4  3191  215F  3180   	fcall	___wmul
 11049  01C7  0140               	movlb	0	; select bank0
 11050  01C8  082E               	movf	?___wmul+1,w
 11051  01C9  0141               	movlb	1	; select bank1
 11052  01CA  00C0               	movwf	(sprintf@exp+1)^(0+128)
 11053  01CB  0140               	movlb	0	; select bank0
 11054  01CC  082D               	movf	?___wmul,w
 11055  01CD  0141               	movlb	1	; select bank1
 11056  01CE  00BF               	movwf	sprintf@exp^(0+128)
 11057                           
 11058                           ;doprnt.c: 840: exp /= 10;
 11059  01CF  300A               	movlw	10
 11060  01D0  0140               	movlb	0	; select bank0
 11061  01D1  00A4               	movwf	___awdiv@divisor
 11062  01D2  3000               	movlw	0
 11063  01D3  00A5               	movwf	___awdiv@divisor+1
 11064  01D4  0141               	movlb	1	; select bank1
 11065  01D5  0840               	movf	(sprintf@exp+1)^(0+128),w
 11066  01D6  0140               	movlb	0	; select bank0
 11067  01D7  00A7               	movwf	___awdiv@dividend+1
 11068  01D8  0141               	movlb	1	; select bank1
 11069  01D9  083F               	movf	sprintf@exp^(0+128),w
 11070  01DA  0140               	movlb	0	; select bank0
 11071  01DB  00A6               	movwf	___awdiv@dividend
 11072  01DC  3194  2440  3180   	fcall	___awdiv
 11073  01DF  0140               	movlb	0	; select bank0
 11074  01E0  0825               	movf	?___awdiv+1,w
 11075  01E1  0141               	movlb	1	; select bank1
 11076  01E2  00C0               	movwf	(sprintf@exp+1)^(0+128)
 11077  01E3  0140               	movlb	0	; select bank0
 11078  01E4  0824               	movf	?___awdiv,w
 11079  01E5  0141               	movlb	1	; select bank1
 11080  01E6  00BF               	movwf	sprintf@exp^(0+128)
 11081                           
 11082                           ;doprnt.c: 841: if(exp < 0)
 11083  01E7  1FC0               	btfss	(sprintf@exp+1)^(0+128),7
 11084  01E8  29ED               	goto	l5947
 11085                           
 11086                           ;doprnt.c: 842: exp--;
 11087  01E9  30FF               	movlw	255
 11088  01EA  07BF               	addwf	sprintf@exp^(0+128),f
 11089  01EB  30FF               	movlw	255
 11090  01EC  3DC0               	addwfc	(sprintf@exp+1)^(0+128),f
 11091  01ED                     l5947:	
 11092                           
 11093                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 11094  01ED  033F               	decf	sprintf@exp^(0+128),w
 11095  01EE  3AFF               	xorlw	255
 11096  01EF  318D  25BA  3180   	fcall	_scale
 11097  01F2  0140               	movlb	0	; select bank0
 11098  01F3  0843               	movf	?_scale,w
 11099  01F4  0141               	movlb	1	; select bank1
 11100  01F5  00B7               	movwf	sprintf@tmpval^(0+128)
 11101  01F6  0140               	movlb	0	; select bank0
 11102  01F7  0844               	movf	?_scale+1,w
 11103  01F8  0141               	movlb	1	; select bank1
 11104  01F9  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11105  01FA  0140               	movlb	0	; select bank0
 11106  01FB  0845               	movf	?_scale+2,w
 11107  01FC  0141               	movlb	1	; select bank1
 11108  01FD  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11109                           
 11110                           ;doprnt.c: 847: tmpval.integ *= fval;
 11111  01FE  0843               	movf	sprintf@fval^(0+128),w
 11112  01FF  0140               	movlb	0	; select bank0
 11113  0200  00B3               	movwf	___ftmul@f1
 11114  0201  0141               	movlb	1	; select bank1
 11115  0202  0844               	movf	(sprintf@fval+1)^(0+128),w
 11116  0203  0140               	movlb	0	; select bank0
 11117  0204  00B4               	movwf	___ftmul@f1+1
 11118  0205  0141               	movlb	1	; select bank1
 11119  0206  0845               	movf	(sprintf@fval+2)^(0+128),w
 11120  0207  0140               	movlb	0	; select bank0
 11121  0208  00B5               	movwf	___ftmul@f1+2
 11122  0209  0141               	movlb	1	; select bank1
 11123  020A  0837               	movf	sprintf@tmpval^(0+128),w
 11124  020B  0140               	movlb	0	; select bank0
 11125  020C  00B6               	movwf	___ftmul@f2
 11126  020D  0141               	movlb	1	; select bank1
 11127  020E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11128  020F  0140               	movlb	0	; select bank0
 11129  0210  00B7               	movwf	___ftmul@f2+1
 11130  0211  0141               	movlb	1	; select bank1
 11131  0212  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11132  0213  0140               	movlb	0	; select bank0
 11133  0214  00B8               	movwf	___ftmul@f2+2
 11134  0215  3188  20D7  3180   	fcall	___ftmul
 11135  0218  0140               	movlb	0	; select bank0
 11136  0219  0833               	movf	?___ftmul,w
 11137  021A  0141               	movlb	1	; select bank1
 11138  021B  00B7               	movwf	sprintf@tmpval^(0+128)
 11139  021C  0140               	movlb	0	; select bank0
 11140  021D  0834               	movf	?___ftmul+1,w
 11141  021E  0141               	movlb	1	; select bank1
 11142  021F  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11143  0220  0140               	movlb	0	; select bank0
 11144  0221  0835               	movf	?___ftmul+2,w
 11145  0222  0141               	movlb	1	; select bank1
 11146  0223  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11147                           
 11148                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 11149  0224  0837               	movf	sprintf@tmpval^(0+128),w
 11150  0225  0140               	movlb	0	; select bank0
 11151  0226  00A0               	movwf	___ftge@ff1
 11152  0227  0141               	movlb	1	; select bank1
 11153  0228  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11154  0229  0140               	movlb	0	; select bank0
 11155  022A  00A1               	movwf	___ftge@ff1+1
 11156  022B  0141               	movlb	1	; select bank1
 11157  022C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11158  022D  0140               	movlb	0	; select bank0
 11159  022E  00A2               	movwf	___ftge@ff1+2
 11160  022F  3000               	movlw	0
 11161  0230  00A3               	movwf	___ftge@ff2
 11162  0231  3080               	movlw	128
 11163  0232  00A4               	movwf	___ftge@ff2+1
 11164  0233  303F               	movlw	63
 11165  0234  00A5               	movwf	___ftge@ff2+2
 11166  0235  3192  22EB  3180   	fcall	___ftge
 11167  0238  1803               	btfsc	3,0
 11168  0239  2A3F               	goto	l5955
 11169                           
 11170                           ;doprnt.c: 849: exp--;
 11171  023A  30FF               	movlw	255
 11172  023B  0141               	movlb	1	; select bank1
 11173  023C  07BF               	addwf	sprintf@exp^(0+128),f
 11174  023D  30FF               	movlw	255
 11175  023E  2A5A               	goto	L4
 11176  023F                     l5955:	
 11177                           
 11178                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 11179  023F  0141               	movlb	1	; select bank1
 11180  0240  0837               	movf	sprintf@tmpval^(0+128),w
 11181  0241  0140               	movlb	0	; select bank0
 11182  0242  00A0               	movwf	___ftge@ff1
 11183  0243  0141               	movlb	1	; select bank1
 11184  0244  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11185  0245  0140               	movlb	0	; select bank0
 11186  0246  00A1               	movwf	___ftge@ff1+1
 11187  0247  0141               	movlb	1	; select bank1
 11188  0248  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11189  0249  0140               	movlb	0	; select bank0
 11190  024A  00A2               	movwf	___ftge@ff1+2
 11191  024B  3000               	movlw	0
 11192  024C  00A3               	movwf	___ftge@ff2
 11193  024D  3020               	movlw	32
 11194  024E  00A4               	movwf	___ftge@ff2+1
 11195  024F  3041               	movlw	65
 11196  0250  00A5               	movwf	___ftge@ff2+2
 11197  0251  3192  22EB  3180   	fcall	___ftge
 11198  0254  1C03               	btfss	3,0
 11199  0255  2A5B               	goto	l864
 11200                           
 11201                           ;doprnt.c: 851: exp++;
 11202  0256  3001               	movlw	1
 11203  0257  0141               	movlb	1	; select bank1
 11204  0258  07BF               	addwf	sprintf@exp^(0+128),f
 11205  0259  3000               	movlw	0
 11206  025A                     L4:	
 11207  025A  3DC0               	addwfc	(sprintf@exp+1)^(0+128),f
 11208  025B                     l864:	
 11209                           
 11210                           ;doprnt.c: 852: }
 11211                           ;doprnt.c: 1112: if(prec <= 12)
 11212  025B  0141               	movlb	1	; select bank1
 11213  025C  0847               	movf	(sprintf@prec+1)^(0+128),w
 11214  025D  3A80               	xorlw	128
 11215  025E  00A5               	movwf	??_sprintf^(0+128)
 11216  025F  3080               	movlw	128
 11217  0260  0225               	subwf	??_sprintf^(0+128),w
 11218  0261  1D03               	skipz
 11219  0262  2A65               	goto	u6795
 11220  0263  300D               	movlw	13
 11221  0264  0246               	subwf	sprintf@prec^(0+128),w
 11222  0265                     u6795:	
 11223  0265  1803               	skipnc
 11224  0266  2A8E               	goto	l5961
 11225                           
 11226                           ;doprnt.c: 1113: fval += fround(prec);
 11227  0267  0141               	movlb	1	; select bank1
 11228  0268  0846               	movf	sprintf@prec^(0+128),w
 11229  0269  318C  2454  3180   	fcall	_fround
 11230  026C  0140               	movlb	0	; select bank0
 11231  026D  0843               	movf	?_fround,w
 11232  026E  00D1               	movwf	___ftadd@f1
 11233  026F  0844               	movf	?_fround+1,w
 11234  0270  00D2               	movwf	___ftadd@f1+1
 11235  0271  0845               	movf	?_fround+2,w
 11236  0272  00D3               	movwf	___ftadd@f1+2
 11237  0273  0141               	movlb	1	; select bank1
 11238  0274  0843               	movf	sprintf@fval^(0+128),w
 11239  0275  0140               	movlb	0	; select bank0
 11240  0276  00D4               	movwf	___ftadd@f2
 11241  0277  0141               	movlb	1	; select bank1
 11242  0278  0844               	movf	(sprintf@fval+1)^(0+128),w
 11243  0279  0140               	movlb	0	; select bank0
 11244  027A  00D5               	movwf	___ftadd@f2+1
 11245  027B  0141               	movlb	1	; select bank1
 11246  027C  0845               	movf	(sprintf@fval+2)^(0+128),w
 11247  027D  0140               	movlb	0	; select bank0
 11248  027E  00D6               	movwf	___ftadd@f2+2
 11249  027F  318A  2241  3180   	fcall	___ftadd
 11250  0282  0140               	movlb	0	; select bank0
 11251  0283  0851               	movf	?___ftadd,w
 11252  0284  0141               	movlb	1	; select bank1
 11253  0285  00C3               	movwf	sprintf@fval^(0+128)
 11254  0286  0140               	movlb	0	; select bank0
 11255  0287  0852               	movf	?___ftadd+1,w
 11256  0288  0141               	movlb	1	; select bank1
 11257  0289  00C4               	movwf	(sprintf@fval+1)^(0+128)
 11258  028A  0140               	movlb	0	; select bank0
 11259  028B  0853               	movf	?___ftadd+2,w
 11260  028C  0141               	movlb	1	; select bank1
 11261  028D  00C5               	movwf	(sprintf@fval+2)^(0+128)
 11262  028E                     l5961:	
 11263                           
 11264                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 11265  028E  0141               	movlb	1	; select bank1
 11266  028F  0840               	movf	(sprintf@exp+1)^(0+128),w
 11267  0290  3A80               	xorlw	128
 11268  0291  00A5               	movwf	??_sprintf^(0+128)
 11269  0292  3080               	movlw	128
 11270  0293  0225               	subwf	??_sprintf^(0+128),w
 11271  0294  1D03               	skipz
 11272  0295  2A98               	goto	u6805
 11273  0296  300A               	movlw	10
 11274  0297  023F               	subwf	sprintf@exp^(0+128),w
 11275  0298                     u6805:	
 11276  0298  1803               	skipnc
 11277  0299  2AC1               	goto	l5969
 11278  029A  0141               	movlb	1	; select bank1
 11279  029B  0845               	movf	(sprintf@fval+2)^(0+128),w
 11280  029C  0444               	iorwf	(sprintf@fval+1)^(0+128),w
 11281  029D  0443               	iorwf	sprintf@fval^(0+128),w
 11282  029E  1903               	skipnz
 11283  029F  2B20               	goto	l5983
 11284  02A0  0843               	movf	sprintf@fval^(0+128),w
 11285  02A1  0140               	movlb	0	; select bank0
 11286  02A2  00DE               	movwf	___fttol@f1
 11287  02A3  0141               	movlb	1	; select bank1
 11288  02A4  0844               	movf	(sprintf@fval+1)^(0+128),w
 11289  02A5  0140               	movlb	0	; select bank0
 11290  02A6  00DF               	movwf	___fttol@f1+1
 11291  02A7  0141               	movlb	1	; select bank1
 11292  02A8  0845               	movf	(sprintf@fval+2)^(0+128),w
 11293  02A9  0140               	movlb	0	; select bank0
 11294  02AA  00E0               	movwf	___fttol@f1+2
 11295  02AB  3195  259D  3180   	fcall	___fttol
 11296  02AE  0140               	movlb	0	; select bank0
 11297  02AF  0861               	movf	?___fttol+3,w
 11298  02B0  0460               	iorwf	?___fttol+2,w
 11299  02B1  045F               	iorwf	?___fttol+1,w
 11300  02B2  045E               	iorwf	?___fttol,w
 11301  02B3  1D03               	skipz
 11302  02B4  2B20               	goto	l5983
 11303  02B5  0141               	movlb	1	; select bank1
 11304  02B6  0840               	movf	(sprintf@exp+1)^(0+128),w
 11305  02B7  3A80               	xorlw	128
 11306  02B8  00A5               	movwf	??_sprintf^(0+128)
 11307  02B9  3080               	movlw	128
 11308  02BA  0225               	subwf	??_sprintf^(0+128),w
 11309  02BB  1D03               	skipz
 11310  02BC  2ABF               	goto	u6835
 11311  02BD  3002               	movlw	2
 11312  02BE  023F               	subwf	sprintf@exp^(0+128),w
 11313  02BF                     u6835:	
 11314  02BF  1C03               	skipc
 11315  02C0  2B20               	goto	l5983
 11316  02C1                     l5969:	
 11317                           
 11318                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 11319  02C1  0141               	movlb	1	; select bank1
 11320  02C2  0837               	movf	sprintf@tmpval^(0+128),w
 11321  02C3  0140               	movlb	0	; select bank0
 11322  02C4  00A0               	movwf	___ftge@ff1
 11323  02C5  0141               	movlb	1	; select bank1
 11324  02C6  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11325  02C7  0140               	movlb	0	; select bank0
 11326  02C8  00A1               	movwf	___ftge@ff1+1
 11327  02C9  0141               	movlb	1	; select bank1
 11328  02CA  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11329  02CB  0140               	movlb	0	; select bank0
 11330  02CC  00A2               	movwf	___ftge@ff1+2
 11331  02CD  3070               	movlw	112
 11332  02CE  00A3               	movwf	___ftge@ff2
 11333  02CF  3089               	movlw	137
 11334  02D0  00A4               	movwf	___ftge@ff2+1
 11335  02D1  3040               	movlw	64
 11336  02D2  00A5               	movwf	___ftge@ff2+2
 11337  02D3  3192  22EB  3180   	fcall	___ftge
 11338  02D6  1803               	btfsc	3,0
 11339  02D7  2ADA               	goto	l5973
 11340                           
 11341                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 11342  02D8  30F7               	movlw	247
 11343  02D9  2ADB               	goto	L5
 11344  02DA                     l5973:	
 11345                           ;doprnt.c: 1122: }else{
 11346                           
 11347                           
 11348                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 11349  02DA  30F8               	movlw	248
 11350  02DB                     L5:	
 11351  02DB  0141               	movlb	1	; select bank1
 11352  02DC  07BF               	addwf	sprintf@exp^(0+128),f
 11353  02DD  30FF               	movlw	255
 11354  02DE  3DC0               	addwfc	(sprintf@exp+1)^(0+128),f
 11355                           
 11356                           ;doprnt.c: 1124: }
 11357                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 11358  02DF  083F               	movf	sprintf@exp^(0+128),w
 11359  02E0  318D  25BA  3180   	fcall	_scale
 11360  02E3  0140               	movlb	0	; select bank0
 11361  02E4  0843               	movf	?_scale,w
 11362  02E5  0141               	movlb	1	; select bank1
 11363  02E6  00B7               	movwf	sprintf@tmpval^(0+128)
 11364  02E7  0140               	movlb	0	; select bank0
 11365  02E8  0844               	movf	?_scale+1,w
 11366  02E9  0141               	movlb	1	; select bank1
 11367  02EA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11368  02EB  0140               	movlb	0	; select bank0
 11369  02EC  0845               	movf	?_scale+2,w
 11370  02ED  0141               	movlb	1	; select bank1
 11371  02EE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11372                           
 11373                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 11374  02EF  0843               	movf	sprintf@fval^(0+128),w
 11375  02F0  0140               	movlb	0	; select bank0
 11376  02F1  00A0               	movwf	__tdiv_to_l_@f1
 11377  02F2  0141               	movlb	1	; select bank1
 11378  02F3  0844               	movf	(sprintf@fval+1)^(0+128),w
 11379  02F4  0140               	movlb	0	; select bank0
 11380  02F5  00A1               	movwf	__tdiv_to_l_@f1+1
 11381  02F6  0141               	movlb	1	; select bank1
 11382  02F7  0845               	movf	(sprintf@fval+2)^(0+128),w
 11383  02F8  0140               	movlb	0	; select bank0
 11384  02F9  00A2               	movwf	__tdiv_to_l_@f1+2
 11385  02FA  0141               	movlb	1	; select bank1
 11386  02FB  0837               	movf	sprintf@tmpval^(0+128),w
 11387  02FC  0140               	movlb	0	; select bank0
 11388  02FD  00A3               	movwf	__tdiv_to_l_@f2
 11389  02FE  0141               	movlb	1	; select bank1
 11390  02FF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11391  0300  0140               	movlb	0	; select bank0
 11392  0301  00A4               	movwf	__tdiv_to_l_@f2+1
 11393  0302  0141               	movlb	1	; select bank1
 11394  0303  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11395  0304  0140               	movlb	0	; select bank0
 11396  0305  00A5               	movwf	__tdiv_to_l_@f2+2
 11397  0306  3189  218B  3180   	fcall	__tdiv_to_l_
 11398  0309  0140               	movlb	0	; select bank0
 11399  030A  0823               	movf	?__tdiv_to_l_+3,w
 11400  030B  0141               	movlb	1	; select bank1
 11401  030C  00BE               	movwf	(sprintf@val+3)^(0+128)
 11402  030D  0140               	movlb	0	; select bank0
 11403  030E  0822               	movf	?__tdiv_to_l_+2,w
 11404  030F  0141               	movlb	1	; select bank1
 11405  0310  00BD               	movwf	(sprintf@val+2)^(0+128)
 11406  0311  0140               	movlb	0	; select bank0
 11407  0312  0821               	movf	?__tdiv_to_l_+1,w
 11408  0313  0141               	movlb	1	; select bank1
 11409  0314  00BC               	movwf	(sprintf@val+1)^(0+128)
 11410  0315  0140               	movlb	0	; select bank0
 11411  0316  0820               	movf	?__tdiv_to_l_,w
 11412  0317  0141               	movlb	1	; select bank1
 11413  0318  00BB               	movwf	sprintf@val^(0+128)
 11414                           
 11415                           ;doprnt.c: 1129: fval = 0.0;
 11416  0319  3000               	movlw	0
 11417  031A  00C3               	movwf	sprintf@fval^(0+128)
 11418  031B  3000               	movlw	0
 11419  031C  00C4               	movwf	(sprintf@fval+1)^(0+128)
 11420  031D  3000               	movlw	0
 11421  031E  00C5               	movwf	(sprintf@fval+2)^(0+128)
 11422                           
 11423                           ;doprnt.c: 1130: } else {
 11424  031F  2B75               	goto	l5987
 11425  0320                     l5983:	
 11426                           
 11427                           ;doprnt.c: 1131: val = (unsigned long)fval;
 11428  0320  0141               	movlb	1	; select bank1
 11429  0321  0843               	movf	sprintf@fval^(0+128),w
 11430  0322  0140               	movlb	0	; select bank0
 11431  0323  00DE               	movwf	___fttol@f1
 11432  0324  0141               	movlb	1	; select bank1
 11433  0325  0844               	movf	(sprintf@fval+1)^(0+128),w
 11434  0326  0140               	movlb	0	; select bank0
 11435  0327  00DF               	movwf	___fttol@f1+1
 11436  0328  0141               	movlb	1	; select bank1
 11437  0329  0845               	movf	(sprintf@fval+2)^(0+128),w
 11438  032A  0140               	movlb	0	; select bank0
 11439  032B  00E0               	movwf	___fttol@f1+2
 11440  032C  3195  259D  3180   	fcall	___fttol
 11441  032F  0140               	movlb	0	; select bank0
 11442  0330  0861               	movf	?___fttol+3,w
 11443  0331  0141               	movlb	1	; select bank1
 11444  0332  00BE               	movwf	(sprintf@val+3)^(0+128)
 11445  0333  0140               	movlb	0	; select bank0
 11446  0334  0860               	movf	?___fttol+2,w
 11447  0335  0141               	movlb	1	; select bank1
 11448  0336  00BD               	movwf	(sprintf@val+2)^(0+128)
 11449  0337  0140               	movlb	0	; select bank0
 11450  0338  085F               	movf	?___fttol+1,w
 11451  0339  0141               	movlb	1	; select bank1
 11452  033A  00BC               	movwf	(sprintf@val+1)^(0+128)
 11453  033B  0140               	movlb	0	; select bank0
 11454  033C  085E               	movf	?___fttol,w
 11455  033D  0141               	movlb	1	; select bank1
 11456  033E  00BB               	movwf	sprintf@val^(0+128)
 11457                           
 11458                           ;doprnt.c: 1132: fval -= (double)val;
 11459  033F  083E               	movf	(sprintf@val+3)^(0+128),w
 11460  0340  0140               	movlb	0	; select bank0
 11461  0341  00A8               	movwf	___lltoft@c+3
 11462  0342  0141               	movlb	1	; select bank1
 11463  0343  083D               	movf	(sprintf@val+2)^(0+128),w
 11464  0344  0140               	movlb	0	; select bank0
 11465  0345  00A7               	movwf	___lltoft@c+2
 11466  0346  0141               	movlb	1	; select bank1
 11467  0347  083C               	movf	(sprintf@val+1)^(0+128),w
 11468  0348  0140               	movlb	0	; select bank0
 11469  0349  00A6               	movwf	___lltoft@c+1
 11470  034A  0141               	movlb	1	; select bank1
 11471  034B  083B               	movf	sprintf@val^(0+128),w
 11472  034C  0140               	movlb	0	; select bank0
 11473  034D  00A5               	movwf	___lltoft@c
 11474  034E  3188  2003  3180   	fcall	___lltoft
 11475  0351  0140               	movlb	0	; select bank0
 11476  0352  0825               	movf	?___lltoft,w
 11477  0353  00DE               	movwf	___ftsub@f2
 11478  0354  0826               	movf	?___lltoft+1,w
 11479  0355  00DF               	movwf	___ftsub@f2+1
 11480  0356  0827               	movf	?___lltoft+2,w
 11481  0357  00E0               	movwf	___ftsub@f2+2
 11482  0358  0141               	movlb	1	; select bank1
 11483  0359  0843               	movf	sprintf@fval^(0+128),w
 11484  035A  0140               	movlb	0	; select bank0
 11485  035B  00E1               	movwf	___ftsub@f1
 11486  035C  0141               	movlb	1	; select bank1
 11487  035D  0844               	movf	(sprintf@fval+1)^(0+128),w
 11488  035E  0140               	movlb	0	; select bank0
 11489  035F  00E2               	movwf	___ftsub@f1+1
 11490  0360  0141               	movlb	1	; select bank1
 11491  0361  0845               	movf	(sprintf@fval+2)^(0+128),w
 11492  0362  0140               	movlb	0	; select bank0
 11493  0363  00E3               	movwf	___ftsub@f1+2
 11494  0364  319F  27E2  3180   	fcall	___ftsub
 11495  0367  0140               	movlb	0	; select bank0
 11496  0368  085E               	movf	?___ftsub,w
 11497  0369  0141               	movlb	1	; select bank1
 11498  036A  00C3               	movwf	sprintf@fval^(0+128)
 11499  036B  0140               	movlb	0	; select bank0
 11500  036C  085F               	movf	?___ftsub+1,w
 11501  036D  0141               	movlb	1	; select bank1
 11502  036E  00C4               	movwf	(sprintf@fval+1)^(0+128)
 11503  036F  0140               	movlb	0	; select bank0
 11504  0370  0860               	movf	?___ftsub+2,w
 11505  0371  0141               	movlb	1	; select bank1
 11506  0372  00C5               	movwf	(sprintf@fval+2)^(0+128)
 11507                           
 11508                           ;doprnt.c: 1133: exp = 0;
 11509  0373  01BF               	clrf	sprintf@exp^(0+128)
 11510  0374  01C0               	clrf	(sprintf@exp+1)^(0+128)
 11511  0375                     l5987:	
 11512                           
 11513                           ;doprnt.c: 1134: }
 11514                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11515  0375  01CA               	clrf	sprintf@c^(0+128)
 11516  0376  0ACA               	incf	sprintf@c^(0+128),f
 11517  0377  300A               	movlw	10
 11518  0378  064A               	xorwf	sprintf@c^(0+128),w
 11519  0379  1903               	btfsc	3,2
 11520  037A  2BA8               	goto	l5999
 11521  037B                     l5993:	
 11522                           
 11523                           ;doprnt.c: 1137: if(val < dpowers[c])
 11524  037B  084A               	movf	sprintf@c^(0+128),w
 11525  037C  00A5               	movwf	??_sprintf^(0+128)
 11526  037D  01A6               	clrf	(??_sprintf^(0+128)+1)
 11527  037E  35A5               	lslf	??_sprintf^(0+128),f
 11528  037F  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 11529  0380  35A5               	lslf	??_sprintf^(0+128),f
 11530  0381  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 11531  0382  3080               	movlw	low (_dpowers| (0+32768))
 11532  0383  0725               	addwf	??_sprintf^(0+128),w
 11533  0384  0084               	movwf	4
 11534  0385  3090               	movlw	high (_dpowers| (0+32768))
 11535  0386  3D26               	addwfc	(??_sprintf+1)^(0+128),w
 11536  0387  0085               	movwf	5
 11537  0388  3F00               	moviw [0]fsr0
 11538  0389  00A7               	movwf	(??_sprintf+2)^(0+128)
 11539  038A  3F01               	moviw [1]fsr0
 11540  038B  00A8               	movwf	((??_sprintf+2)^(0+128)+1)
 11541  038C  3F02               	moviw [2]fsr0
 11542  038D  00A9               	movwf	((??_sprintf+2)^(0+128)+2)
 11543  038E  3F03               	moviw [3]fsr0
 11544  038F  00AA               	movwf	((??_sprintf+2)^(0+128)+3)
 11545  0390  082A               	movf	(??_sprintf+5)^(0+128),w
 11546  0391  023E               	subwf	(sprintf@val+3)^(0+128),w
 11547  0392  1D03               	skipz
 11548  0393  2B9E               	goto	u6865
 11549  0394  0829               	movf	(??_sprintf+4)^(0+128),w
 11550  0395  023D               	subwf	(sprintf@val+2)^(0+128),w
 11551  0396  1D03               	skipz
 11552  0397  2B9E               	goto	u6865
 11553  0398  0828               	movf	(??_sprintf+3)^(0+128),w
 11554  0399  023C               	subwf	(sprintf@val+1)^(0+128),w
 11555  039A  1D03               	skipz
 11556  039B  2B9E               	goto	u6865
 11557  039C  0827               	movf	(??_sprintf+2)^(0+128),w
 11558  039D  023B               	subwf	sprintf@val^(0+128),w
 11559  039E                     u6865:	
 11560  039E  1C03               	btfss	3,0
 11561  039F  2BA8               	goto	l5999
 11562                           
 11563                           ;doprnt.c: 1138: break;
 11564  03A0  3001               	movlw	1
 11565  03A1  00A5               	movwf	??_sprintf^(0+128)
 11566  03A2  0825               	movf	??_sprintf^(0+128),w
 11567  03A3  07CA               	addwf	sprintf@c^(0+128),f
 11568  03A4  300A               	movlw	10
 11569  03A5  064A               	xorwf	sprintf@c^(0+128),w
 11570  03A6  1D03               	btfss	3,2
 11571  03A7  2B7B               	goto	l5993
 11572  03A8                     l5999:	
 11573                           
 11574                           ;doprnt.c: 1142: width -= prec + c + exp;
 11575  03A8  084A               	movf	sprintf@c^(0+128),w
 11576  03A9  00A5               	movwf	??_sprintf^(0+128)
 11577  03AA  01A6               	clrf	(??_sprintf^(0+128)+1)
 11578  03AB  1BA5               	btfsc	??_sprintf^(0+128),7
 11579  03AC  03A6               	decf	(??_sprintf^(0+128)+1),f
 11580  03AD  0846               	movf	sprintf@prec^(0+128),w
 11581  03AE  0725               	addwf	??_sprintf^(0+128),w
 11582  03AF  00A7               	movwf	(??_sprintf+2)^(0+128)
 11583  03B0  0847               	movf	(sprintf@prec+1)^(0+128),w
 11584  03B1  3D26               	addwfc	(??_sprintf+1)^(0+128),w
 11585  03B2  00A8               	movwf	(??_sprintf+3)^(0+128)
 11586  03B3  083F               	movf	sprintf@exp^(0+128),w
 11587  03B4  0727               	addwf	(??_sprintf+2)^(0+128),w
 11588  03B5  00A9               	movwf	(??_sprintf+4)^(0+128)
 11589  03B6  0840               	movf	(sprintf@exp+1)^(0+128),w
 11590  03B7  3D28               	addwfc	(??_sprintf+3)^(0+128),w
 11591  03B8  00AA               	movwf	(??_sprintf+5)^(0+128)
 11592  03B9  0829               	movf	(??_sprintf+4)^(0+128),w
 11593  03BA  02C1               	subwf	sprintf@width^(0+128),f
 11594  03BB  082A               	movf	(??_sprintf+5)^(0+128),w
 11595  03BC  3BC2               	subwfb	(sprintf@width+1)^(0+128),f
 11596                           
 11597                           ;doprnt.c: 1143: if(
 11598                           ;doprnt.c: 1147: prec)
 11599  03BD  0846               	movf	sprintf@prec^(0+128),w
 11600  03BE  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11601  03BF  1903               	btfsc	3,2
 11602  03C0  2BC5               	goto	l6003
 11603                           
 11604                           ;doprnt.c: 1148: width--;
 11605  03C1  30FF               	movlw	255
 11606  03C2  07C1               	addwf	sprintf@width^(0+128),f
 11607  03C3  30FF               	movlw	255
 11608  03C4  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 11609  03C5                     l6003:	
 11610                           
 11611                           ;doprnt.c: 1149: if(flag & 0x03)
 11612  03C5  3003               	movlw	3
 11613  03C6  0548               	andwf	sprintf@flag^(0+128),w
 11614  03C7  00A5               	movwf	??_sprintf^(0+128)
 11615  03C8  3000               	movlw	0
 11616  03C9  0549               	andwf	(sprintf@flag+1)^(0+128),w
 11617  03CA  00A6               	movwf	(??_sprintf+1)^(0+128)
 11618  03CB  0825               	movf	??_sprintf^(0+128),w
 11619  03CC  0426               	iorwf	(??_sprintf^(0+128)+1),w
 11620  03CD  1903               	btfsc	3,2
 11621  03CE  2BD3               	goto	l6007
 11622                           
 11623                           ;doprnt.c: 1150: width--;
 11624  03CF  30FF               	movlw	255
 11625  03D0  07C1               	addwf	sprintf@width^(0+128),f
 11626  03D1  30FF               	movlw	255
 11627  03D2  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 11628  03D3                     l6007:	
 11629                           
 11630                           ;doprnt.c: 1153: if(flag & 0x04) {
 11631  03D3  1D48               	btfss	sprintf@flag^(0+128),2
 11632  03D4  2C1A               	goto	l6039
 11633                           
 11634                           ;doprnt.c: 1155: if(flag & 0x02)
 11635  03D5  1CC8               	btfss	sprintf@flag^(0+128),1
 11636  03D6  2BE1               	goto	l886
 11637                           
 11638                           ;doprnt.c: 1159: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 11639  03D7  1848               	btfsc	sprintf@flag^(0+128),0
 11640  03D8  2BDB               	goto	l6015
 11641  03D9  302B               	movlw	43
 11642  03DA  2BDC               	goto	L6
 11643  03DB                     l6015:	
 11644  03DB  302D               	movlw	45
 11645  03DC                     L6:	
 11646  03DC  00AE               	movwf	_sprintf$1610^(0+128)
 11647  03DD  3000               	movlw	0
 11648  03DE  00AF               	movwf	(_sprintf$1610^(0+128)+1)
 11649  03DF  082E               	movf	_sprintf$1610^(0+128),w
 11650  03E0  2BE4               	goto	L12
 11651  03E1                     l886:	
 11652                           
 11653                           ;doprnt.c: 1161: else
 11654                           ;doprnt.c: 1164: if(flag & 0x01)
 11655  03E1  1C48               	btfss	sprintf@flag^(0+128),0
 11656  03E2  2BEE               	goto	l6031
 11657                           
 11658                           ;doprnt.c: 1165: ((*sp++ = (' ')));
 11659  03E3  3020               	movlw	32
 11660  03E4                     L12:	
 11661  03E4  00A5               	movwf	??_sprintf^(0+128)
 11662  03E5  084B               	movf	sprintf@sp^(0+128),w
 11663  03E6  0086               	movwf	6
 11664  03E7  0187               	clrf	7
 11665  03E8  0825               	movf	??_sprintf^(0+128),w
 11666  03E9  0081               	movwf	1
 11667  03EA  3001               	movlw	1
 11668  03EB  00A5               	movwf	??_sprintf^(0+128)
 11669  03EC  0825               	movf	??_sprintf^(0+128),w
 11670  03ED  07CB               	addwf	sprintf@sp^(0+128),f
 11671  03EE                     l6031:	
 11672                           ;doprnt.c: 1168: while(width > 0) {
 11673                           
 11674  03EE  0842               	movf	(sprintf@width+1)^(0+128),w
 11675  03EF  3A80               	xorlw	128
 11676  03F0  00A5               	movwf	??_sprintf^(0+128)
 11677  03F1  3080               	movlw	128
 11678  03F2  0225               	subwf	??_sprintf^(0+128),w
 11679  03F3  1D03               	skipz
 11680  03F4  2BF7               	goto	u6945
 11681  03F5  3001               	movlw	1
 11682  03F6  0241               	subwf	sprintf@width^(0+128),w
 11683  03F7                     u6945:	
 11684  03F7  1C03               	btfss	3,0
 11685  03F8  2C40               	goto	l6063
 11686                           
 11687                           ;doprnt.c: 1169: ((*sp++ = ('0')));
 11688  03F9  3030               	movlw	48
 11689  03FA  0141               	movlb	1	; select bank1
 11690  03FB  00A5               	movwf	??_sprintf^(0+128)
 11691  03FC  084B               	movf	sprintf@sp^(0+128),w
 11692  03FD  0086               	movwf	6
 11693  03FE  0187               	clrf	7
 11694  03FF  0825               	movf	??_sprintf^(0+128),w
 11695  0400  0081               	movwf	1
 11696  0401  3001               	movlw	1
 11697  0402  00A5               	movwf	??_sprintf^(0+128)
 11698  0403  0825               	movf	??_sprintf^(0+128),w
 11699  0404  07CB               	addwf	sprintf@sp^(0+128),f
 11700                           
 11701                           ;doprnt.c: 1170: width--;
 11702  0405  30FF               	movlw	255
 11703  0406  07C1               	addwf	sprintf@width^(0+128),f
 11704  0407  30FF               	movlw	255
 11705  0408  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 11706  0409  2BEE               	goto	l6031
 11707  040A                     l6033:	
 11708                           ;doprnt.c: 1175: {
 11709                           ;doprnt.c: 1180: while(width > 0) {
 11710                           
 11711                           ;doprnt.c: 1171: }
 11712                           ;doprnt.c: 1173: } else
 11713                           
 11714                           
 11715                           ;doprnt.c: 1181: ((*sp++ = (' ')));
 11716  040A  3020               	movlw	32
 11717  040B  0141               	movlb	1	; select bank1
 11718  040C  00A5               	movwf	??_sprintf^(0+128)
 11719  040D  084B               	movf	sprintf@sp^(0+128),w
 11720  040E  0086               	movwf	6
 11721  040F  0187               	clrf	7
 11722  0410  0825               	movf	??_sprintf^(0+128),w
 11723  0411  0081               	movwf	1
 11724  0412  3001               	movlw	1
 11725  0413  00A5               	movwf	??_sprintf^(0+128)
 11726  0414  0825               	movf	??_sprintf^(0+128),w
 11727  0415  07CB               	addwf	sprintf@sp^(0+128),f
 11728                           
 11729                           ;doprnt.c: 1182: width--;
 11730  0416  30FF               	movlw	255
 11731  0417  07C1               	addwf	sprintf@width^(0+128),f
 11732  0418  30FF               	movlw	255
 11733  0419  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 11734  041A                     l6039:	
 11735  041A  0141               	movlb	1	; select bank1
 11736  041B  0842               	movf	(sprintf@width+1)^(0+128),w
 11737  041C  3A80               	xorlw	128
 11738  041D  00A5               	movwf	??_sprintf^(0+128)
 11739  041E  3080               	movlw	128
 11740  041F  0225               	subwf	??_sprintf^(0+128),w
 11741  0420  1D03               	skipz
 11742  0421  2C24               	goto	u6955
 11743  0422  3001               	movlw	1
 11744  0423  0241               	subwf	sprintf@width^(0+128),w
 11745  0424                     u6955:	
 11746  0424  1803               	skipnc
 11747  0425  2C0A               	goto	l6033
 11748                           
 11749                           ;doprnt.c: 1183: }
 11750                           ;doprnt.c: 1186: if(flag & 0x02)
 11751  0426  0141               	movlb	1	; select bank1
 11752  0427  1CC8               	btfss	sprintf@flag^(0+128),1
 11753  0428  2C33               	goto	l900
 11754                           
 11755                           ;doprnt.c: 1190: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 11756  0429  1848               	btfsc	sprintf@flag^(0+128),0
 11757  042A  2C2D               	goto	l6045
 11758  042B  302B               	movlw	43
 11759  042C  2C2E               	goto	L7
 11760  042D                     l6045:	
 11761  042D  302D               	movlw	45
 11762  042E                     L7:	
 11763  042E  00B0               	movwf	_sprintf$1611^(0+128)
 11764  042F  3000               	movlw	0
 11765  0430  00B1               	movwf	(_sprintf$1611^(0+128)+1)
 11766  0431  0830               	movf	_sprintf$1611^(0+128),w
 11767  0432  2C36               	goto	L14
 11768  0433                     l900:	
 11769                           
 11770                           ;doprnt.c: 1192: else if(flag & 0x01)
 11771  0433  1C48               	btfss	sprintf@flag^(0+128),0
 11772  0434  2C40               	goto	l6063
 11773                           
 11774                           ;doprnt.c: 1193: ((*sp++ = (' ')));
 11775  0435  3020               	movlw	32
 11776  0436                     L14:	
 11777  0436  00A5               	movwf	??_sprintf^(0+128)
 11778  0437  084B               	movf	sprintf@sp^(0+128),w
 11779  0438  0086               	movwf	6
 11780  0439  0187               	clrf	7
 11781  043A  0825               	movf	??_sprintf^(0+128),w
 11782  043B  0081               	movwf	1
 11783  043C  3001               	movlw	1
 11784  043D  00A5               	movwf	??_sprintf^(0+128)
 11785  043E  0825               	movf	??_sprintf^(0+128),w
 11786  043F  07CB               	addwf	sprintf@sp^(0+128),f
 11787  0440                     l6063:	
 11788  0440  30FF               	movlw	255
 11789  0441  0141               	movlb	1	; select bank1
 11790  0442  00A5               	movwf	??_sprintf^(0+128)
 11791  0443  0825               	movf	??_sprintf^(0+128),w
 11792  0444  07CA               	addwf	sprintf@c^(0+128),f
 11793  0445  0A4A               	incf	sprintf@c^(0+128),w
 11794  0446  1903               	btfsc	3,2
 11795  0447  2CC0               	goto	l6071
 11796                           
 11797                           ;doprnt.c: 1200: {
 11798                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 11799                           
 11800                           ;doprnt.c: 1195: }
 11801                           ;doprnt.c: 1196: while(c--) {
 11802  0448  084A               	movf	sprintf@c^(0+128),w
 11803  0449  00A5               	movwf	??_sprintf^(0+128)
 11804  044A  01A6               	clrf	(??_sprintf^(0+128)+1)
 11805  044B  35A5               	lslf	??_sprintf^(0+128),f
 11806  044C  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 11807  044D  35A5               	lslf	??_sprintf^(0+128),f
 11808  044E  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 11809  044F  3080               	movlw	low (_dpowers| (0+32768))
 11810  0450  0725               	addwf	??_sprintf^(0+128),w
 11811  0451  0084               	movwf	4
 11812  0452  3090               	movlw	high (_dpowers| (0+32768))
 11813  0453  3D26               	addwfc	(??_sprintf+1)^(0+128),w
 11814  0454  0085               	movwf	5
 11815  0455  3F00               	moviw [0]fsr0
 11816  0456  0140               	movlb	0	; select bank0
 11817  0457  00A0               	movwf	___lldiv@divisor
 11818  0458  3F01               	moviw [1]fsr0
 11819  0459  00A1               	movwf	___lldiv@divisor+1
 11820  045A  3F02               	moviw [2]fsr0
 11821  045B  00A2               	movwf	___lldiv@divisor+2
 11822  045C  3F03               	moviw [3]fsr0
 11823  045D  00A3               	movwf	___lldiv@divisor+3
 11824  045E  0141               	movlb	1	; select bank1
 11825  045F  083E               	movf	(sprintf@val+3)^(0+128),w
 11826  0460  0140               	movlb	0	; select bank0
 11827  0461  00A7               	movwf	___lldiv@dividend+3
 11828  0462  0141               	movlb	1	; select bank1
 11829  0463  083D               	movf	(sprintf@val+2)^(0+128),w
 11830  0464  0140               	movlb	0	; select bank0
 11831  0465  00A6               	movwf	___lldiv@dividend+2
 11832  0466  0141               	movlb	1	; select bank1
 11833  0467  083C               	movf	(sprintf@val+1)^(0+128),w
 11834  0468  0140               	movlb	0	; select bank0
 11835  0469  00A5               	movwf	___lldiv@dividend+1
 11836  046A  0141               	movlb	1	; select bank1
 11837  046B  083B               	movf	sprintf@val^(0+128),w
 11838  046C  0140               	movlb	0	; select bank0
 11839  046D  00A4               	movwf	___lldiv@dividend
 11840  046E  3194  2492  3180   	fcall	___lldiv
 11841  0471  0140               	movlb	0	; select bank0
 11842  0472  0823               	movf	?___lldiv+3,w
 11843  0473  0141               	movlb	1	; select bank1
 11844  0474  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 11845  0475  0140               	movlb	0	; select bank0
 11846  0476  0822               	movf	?___lldiv+2,w
 11847  0477  0141               	movlb	1	; select bank1
 11848  0478  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11849  0479  0140               	movlb	0	; select bank0
 11850  047A  0821               	movf	?___lldiv+1,w
 11851  047B  0141               	movlb	1	; select bank1
 11852  047C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11853  047D  0140               	movlb	0	; select bank0
 11854  047E  0820               	movf	?___lldiv,w
 11855  047F  0141               	movlb	1	; select bank1
 11856  0480  00B7               	movwf	sprintf@tmpval^(0+128)
 11857                           
 11858                           ;doprnt.c: 1202: tmpval.vd %= 10;
 11859  0481  3000               	movlw	0
 11860  0482  0140               	movlb	0	; select bank0
 11861  0483  00B0               	movwf	___llmod@divisor+3
 11862  0484  3000               	movlw	0
 11863  0485  00AF               	movwf	___llmod@divisor+2
 11864  0486  3000               	movlw	0
 11865  0487  00AE               	movwf	___llmod@divisor+1
 11866  0488  300A               	movlw	10
 11867  0489  00AD               	movwf	___llmod@divisor
 11868  048A  0141               	movlb	1	; select bank1
 11869  048B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 11870  048C  0140               	movlb	0	; select bank0
 11871  048D  00B4               	movwf	___llmod@dividend+3
 11872  048E  0141               	movlb	1	; select bank1
 11873  048F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 11874  0490  0140               	movlb	0	; select bank0
 11875  0491  00B3               	movwf	___llmod@dividend+2
 11876  0492  0141               	movlb	1	; select bank1
 11877  0493  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 11878  0494  0140               	movlb	0	; select bank0
 11879  0495  00B2               	movwf	___llmod@dividend+1
 11880  0496  0141               	movlb	1	; select bank1
 11881  0497  0837               	movf	sprintf@tmpval^(0+128),w
 11882  0498  0140               	movlb	0	; select bank0
 11883  0499  00B1               	movwf	___llmod@dividend
 11884  049A  3193  2369  3180   	fcall	___llmod
 11885  049D  0140               	movlb	0	; select bank0
 11886  049E  0830               	movf	?___llmod+3,w
 11887  049F  0141               	movlb	1	; select bank1
 11888  04A0  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 11889  04A1  0140               	movlb	0	; select bank0
 11890  04A2  082F               	movf	?___llmod+2,w
 11891  04A3  0141               	movlb	1	; select bank1
 11892  04A4  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 11893  04A5  0140               	movlb	0	; select bank0
 11894  04A6  082E               	movf	?___llmod+1,w
 11895  04A7  0141               	movlb	1	; select bank1
 11896  04A8  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 11897  04A9  0140               	movlb	0	; select bank0
 11898  04AA  082D               	movf	?___llmod,w
 11899  04AB  0141               	movlb	1	; select bank1
 11900  04AC  00B7               	movwf	sprintf@tmpval^(0+128)
 11901                           
 11902                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 11903  04AD  0837               	movf	sprintf@tmpval^(0+128),w
 11904  04AE  3E30               	addlw	48
 11905  04AF  2C36               	goto	L14
 11906  04B0                     l6065:	
 11907                           ;doprnt.c: 1204: }
 11908                           ;doprnt.c: 1206: }
 11909                           ;doprnt.c: 1207: while(exp > 0) {
 11910                           
 11911                           
 11912                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 11913  04B0  3030               	movlw	48
 11914  04B1  0141               	movlb	1	; select bank1
 11915  04B2  00A5               	movwf	??_sprintf^(0+128)
 11916  04B3  084B               	movf	sprintf@sp^(0+128),w
 11917  04B4  0086               	movwf	6
 11918  04B5  0187               	clrf	7
 11919  04B6  0825               	movf	??_sprintf^(0+128),w
 11920  04B7  0081               	movwf	1
 11921  04B8  3001               	movlw	1
 11922  04B9  00A5               	movwf	??_sprintf^(0+128)
 11923  04BA  0825               	movf	??_sprintf^(0+128),w
 11924  04BB  07CB               	addwf	sprintf@sp^(0+128),f
 11925                           
 11926                           ;doprnt.c: 1209: exp--;
 11927  04BC  30FF               	movlw	255
 11928  04BD  07BF               	addwf	sprintf@exp^(0+128),f
 11929  04BE  30FF               	movlw	255
 11930  04BF  3DC0               	addwfc	(sprintf@exp+1)^(0+128),f
 11931  04C0                     l6071:	
 11932  04C0  0840               	movf	(sprintf@exp+1)^(0+128),w
 11933  04C1  3A80               	xorlw	128
 11934  04C2  00A5               	movwf	??_sprintf^(0+128)
 11935  04C3  3080               	movlw	128
 11936  04C4  0225               	subwf	??_sprintf^(0+128),w
 11937  04C5  1D03               	skipz
 11938  04C6  2CC9               	goto	u7005
 11939  04C7  3001               	movlw	1
 11940  04C8  023F               	subwf	sprintf@exp^(0+128),w
 11941  04C9                     u7005:	
 11942  04C9  1803               	skipnc
 11943  04CA  2CB0               	goto	l6065
 11944                           
 11945                           ;doprnt.c: 1210: }
 11946                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11947  04CB  0141               	movlb	1	; select bank1
 11948  04CC  0847               	movf	(sprintf@prec+1)^(0+128),w
 11949  04CD  3A80               	xorlw	128
 11950  04CE  00A5               	movwf	??_sprintf^(0+128)
 11951  04CF  3080               	movlw	128
 11952  04D0  0225               	subwf	??_sprintf^(0+128),w
 11953  04D1  1D03               	skipz
 11954  04D2  2CD5               	goto	u7015
 11955  04D3  3009               	movlw	9
 11956  04D4  0246               	subwf	sprintf@prec^(0+128),w
 11957  04D5                     u7015:	
 11958  04D5  1C03               	skipc
 11959  04D6  2CDA               	goto	l6077
 11960                           
 11961                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 11962  04D7  3008               	movlw	8
 11963  04D8  0141               	movlb	1	; select bank1
 11964  04D9  2CDC               	goto	L8
 11965  04DA                     l6077:	
 11966                           
 11967                           ;doprnt.c: 1213: else
 11968                           ;doprnt.c: 1214: c = prec;
 11969  04DA  0141               	movlb	1	; select bank1
 11970  04DB  0846               	movf	sprintf@prec^(0+128),w
 11971  04DC                     L8:	
 11972  04DC  00A5               	movwf	??_sprintf^(0+128)
 11973  04DD  0825               	movf	??_sprintf^(0+128),w
 11974  04DE  00CA               	movwf	sprintf@c^(0+128)
 11975                           
 11976                           ;doprnt.c: 1215: prec -= c;
 11977  04DF  084A               	movf	sprintf@c^(0+128),w
 11978  04E0  00A5               	movwf	??_sprintf^(0+128)
 11979  04E1  01A6               	clrf	(??_sprintf^(0+128)+1)
 11980  04E2  1BA5               	btfsc	??_sprintf^(0+128),7
 11981  04E3  03A6               	decf	(??_sprintf^(0+128)+1),f
 11982  04E4  0825               	movf	??_sprintf^(0+128),w
 11983  04E5  02C6               	subwf	sprintf@prec^(0+128),f
 11984  04E6  0826               	movf	(??_sprintf+1)^(0+128),w
 11985  04E7  3BC7               	subwfb	(sprintf@prec+1)^(0+128),f
 11986                           
 11987                           ;doprnt.c: 1219: if(c)
 11988  04E8  084A               	movf	sprintf@c^(0+128),w
 11989  04E9  1903               	btfsc	3,2
 11990  04EA  2CF6               	goto	l6085
 11991                           
 11992                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 11993  04EB  302E               	movlw	46
 11994  04EC  00A5               	movwf	??_sprintf^(0+128)
 11995  04ED  084B               	movf	sprintf@sp^(0+128),w
 11996  04EE  0086               	movwf	6
 11997  04EF  0187               	clrf	7
 11998  04F0  0825               	movf	??_sprintf^(0+128),w
 11999  04F1  0081               	movwf	1
 12000  04F2  3001               	movlw	1
 12001  04F3  00A5               	movwf	??_sprintf^(0+128)
 12002  04F4  0825               	movf	??_sprintf^(0+128),w
 12003  04F5  07CB               	addwf	sprintf@sp^(0+128),f
 12004  04F6                     l6085:	
 12005                           
 12006                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 12007  04F6  084A               	movf	sprintf@c^(0+128),w
 12008  04F7  318D  25BA  3180   	fcall	_scale
 12009  04FA  0140               	movlb	0	; select bank0
 12010  04FB  0843               	movf	?_scale,w
 12011  04FC  0141               	movlb	1	; select bank1
 12012  04FD  00AB               	movwf	_sprintf$2150^(0+128)
 12013  04FE  0140               	movlb	0	; select bank0
 12014  04FF  0844               	movf	?_scale+1,w
 12015  0500  0141               	movlb	1	; select bank1
 12016  0501  00AC               	movwf	(_sprintf$2150+1)^(0+128)
 12017  0502  0140               	movlb	0	; select bank0
 12018  0503  0845               	movf	?_scale+2,w
 12019  0504  0141               	movlb	1	; select bank1
 12020  0505  00AD               	movwf	(_sprintf$2150+2)^(0+128)
 12021                           
 12022                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 12023  0506  082B               	movf	_sprintf$2150^(0+128),w
 12024  0507  0140               	movlb	0	; select bank0
 12025  0508  00B6               	movwf	___ftmul@f2
 12026  0509  0141               	movlb	1	; select bank1
 12027  050A  082C               	movf	(_sprintf$2150+1)^(0+128),w
 12028  050B  0140               	movlb	0	; select bank0
 12029  050C  00B7               	movwf	___ftmul@f2+1
 12030  050D  0141               	movlb	1	; select bank1
 12031  050E  082D               	movf	(_sprintf$2150+2)^(0+128),w
 12032  050F  0140               	movlb	0	; select bank0
 12033  0510  00B8               	movwf	___ftmul@f2+2
 12034  0511  0141               	movlb	1	; select bank1
 12035  0512  0843               	movf	sprintf@fval^(0+128),w
 12036  0513  0140               	movlb	0	; select bank0
 12037  0514  00B3               	movwf	___ftmul@f1
 12038  0515  0141               	movlb	1	; select bank1
 12039  0516  0844               	movf	(sprintf@fval+1)^(0+128),w
 12040  0517  0140               	movlb	0	; select bank0
 12041  0518  00B4               	movwf	___ftmul@f1+1
 12042  0519  0141               	movlb	1	; select bank1
 12043  051A  0845               	movf	(sprintf@fval+2)^(0+128),w
 12044  051B  0140               	movlb	0	; select bank0
 12045  051C  00B5               	movwf	___ftmul@f1+2
 12046  051D  3188  20D7  3180   	fcall	___ftmul
 12047  0520  0140               	movlb	0	; select bank0
 12048  0521  0833               	movf	?___ftmul,w
 12049  0522  00DE               	movwf	___fttol@f1
 12050  0523  0834               	movf	?___ftmul+1,w
 12051  0524  00DF               	movwf	___fttol@f1+1
 12052  0525  0835               	movf	?___ftmul+2,w
 12053  0526  00E0               	movwf	___fttol@f1+2
 12054  0527  3195  259D  3180   	fcall	___fttol
 12055  052A  0140               	movlb	0	; select bank0
 12056  052B  0861               	movf	?___fttol+3,w
 12057  052C  0141               	movlb	1	; select bank1
 12058  052D  00BE               	movwf	(sprintf@val+3)^(0+128)
 12059  052E  0140               	movlb	0	; select bank0
 12060  052F  0860               	movf	?___fttol+2,w
 12061  0530  0141               	movlb	1	; select bank1
 12062  0531  00BD               	movwf	(sprintf@val+2)^(0+128)
 12063  0532  0140               	movlb	0	; select bank0
 12064  0533  085F               	movf	?___fttol+1,w
 12065  0534  0141               	movlb	1	; select bank1
 12066  0535  00BC               	movwf	(sprintf@val+1)^(0+128)
 12067  0536  0140               	movlb	0	; select bank0
 12068  0537  085E               	movf	?___fttol,w
 12069  0538                     L9:	
 12070  0538  0141               	movlb	1	; select bank1
 12071  0539  00BB               	movwf	sprintf@val^(0+128)
 12072  053A  30FF               	movlw	255
 12073  053B  00A5               	movwf	??_sprintf^(0+128)
 12074  053C  0825               	movf	??_sprintf^(0+128),w
 12075  053D  07CA               	addwf	sprintf@c^(0+128),f
 12076  053E  0A4A               	incf	sprintf@c^(0+128),w
 12077  053F  1903               	btfsc	3,2
 12078  0540  2DF9               	goto	l6107
 12079                           
 12080                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 12081                           
 12082                           ;doprnt.c: 1228: while(c--) {
 12083  0541  084A               	movf	sprintf@c^(0+128),w
 12084  0542  00A5               	movwf	??_sprintf^(0+128)
 12085  0543  01A6               	clrf	(??_sprintf^(0+128)+1)
 12086  0544  35A5               	lslf	??_sprintf^(0+128),f
 12087  0545  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 12088  0546  35A5               	lslf	??_sprintf^(0+128),f
 12089  0547  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 12090  0548  3080               	movlw	low (_dpowers| (0+32768))
 12091  0549  0725               	addwf	??_sprintf^(0+128),w
 12092  054A  0084               	movwf	4
 12093  054B  3090               	movlw	high (_dpowers| (0+32768))
 12094  054C  3D26               	addwfc	(??_sprintf+1)^(0+128),w
 12095  054D  0085               	movwf	5
 12096  054E  3F00               	moviw [0]fsr0
 12097  054F  0140               	movlb	0	; select bank0
 12098  0550  00A0               	movwf	___lldiv@divisor
 12099  0551  3F01               	moviw [1]fsr0
 12100  0552  00A1               	movwf	___lldiv@divisor+1
 12101  0553  3F02               	moviw [2]fsr0
 12102  0554  00A2               	movwf	___lldiv@divisor+2
 12103  0555  3F03               	moviw [3]fsr0
 12104  0556  00A3               	movwf	___lldiv@divisor+3
 12105  0557  0141               	movlb	1	; select bank1
 12106  0558  083E               	movf	(sprintf@val+3)^(0+128),w
 12107  0559  0140               	movlb	0	; select bank0
 12108  055A  00A7               	movwf	___lldiv@dividend+3
 12109  055B  0141               	movlb	1	; select bank1
 12110  055C  083D               	movf	(sprintf@val+2)^(0+128),w
 12111  055D  0140               	movlb	0	; select bank0
 12112  055E  00A6               	movwf	___lldiv@dividend+2
 12113  055F  0141               	movlb	1	; select bank1
 12114  0560  083C               	movf	(sprintf@val+1)^(0+128),w
 12115  0561  0140               	movlb	0	; select bank0
 12116  0562  00A5               	movwf	___lldiv@dividend+1
 12117  0563  0141               	movlb	1	; select bank1
 12118  0564  083B               	movf	sprintf@val^(0+128),w
 12119  0565  0140               	movlb	0	; select bank0
 12120  0566  00A4               	movwf	___lldiv@dividend
 12121  0567  3194  2492  3180   	fcall	___lldiv
 12122  056A  0140               	movlb	0	; select bank0
 12123  056B  0823               	movf	?___lldiv+3,w
 12124  056C  0141               	movlb	1	; select bank1
 12125  056D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 12126  056E  0140               	movlb	0	; select bank0
 12127  056F  0822               	movf	?___lldiv+2,w
 12128  0570  0141               	movlb	1	; select bank1
 12129  0571  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 12130  0572  0140               	movlb	0	; select bank0
 12131  0573  0821               	movf	?___lldiv+1,w
 12132  0574  0141               	movlb	1	; select bank1
 12133  0575  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 12134  0576  0140               	movlb	0	; select bank0
 12135  0577  0820               	movf	?___lldiv,w
 12136  0578  0141               	movlb	1	; select bank1
 12137  0579  00B7               	movwf	sprintf@tmpval^(0+128)
 12138                           
 12139                           ;doprnt.c: 1230: tmpval.vd %= 10;
 12140  057A  3000               	movlw	0
 12141  057B  0140               	movlb	0	; select bank0
 12142  057C  00B0               	movwf	___llmod@divisor+3
 12143  057D  3000               	movlw	0
 12144  057E  00AF               	movwf	___llmod@divisor+2
 12145  057F  3000               	movlw	0
 12146  0580  00AE               	movwf	___llmod@divisor+1
 12147  0581  300A               	movlw	10
 12148  0582  00AD               	movwf	___llmod@divisor
 12149  0583  0141               	movlb	1	; select bank1
 12150  0584  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 12151  0585  0140               	movlb	0	; select bank0
 12152  0586  00B4               	movwf	___llmod@dividend+3
 12153  0587  0141               	movlb	1	; select bank1
 12154  0588  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 12155  0589  0140               	movlb	0	; select bank0
 12156  058A  00B3               	movwf	___llmod@dividend+2
 12157  058B  0141               	movlb	1	; select bank1
 12158  058C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 12159  058D  0140               	movlb	0	; select bank0
 12160  058E  00B2               	movwf	___llmod@dividend+1
 12161  058F  0141               	movlb	1	; select bank1
 12162  0590  0837               	movf	sprintf@tmpval^(0+128),w
 12163  0591  0140               	movlb	0	; select bank0
 12164  0592  00B1               	movwf	___llmod@dividend
 12165  0593  3193  2369  3180   	fcall	___llmod
 12166  0596  0140               	movlb	0	; select bank0
 12167  0597  0830               	movf	?___llmod+3,w
 12168  0598  0141               	movlb	1	; select bank1
 12169  0599  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 12170  059A  0140               	movlb	0	; select bank0
 12171  059B  082F               	movf	?___llmod+2,w
 12172  059C  0141               	movlb	1	; select bank1
 12173  059D  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 12174  059E  0140               	movlb	0	; select bank0
 12175  059F  082E               	movf	?___llmod+1,w
 12176  05A0  0141               	movlb	1	; select bank1
 12177  05A1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 12178  05A2  0140               	movlb	0	; select bank0
 12179  05A3  082D               	movf	?___llmod,w
 12180  05A4  0141               	movlb	1	; select bank1
 12181  05A5  00B7               	movwf	sprintf@tmpval^(0+128)
 12182                           
 12183                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 12184  05A6  0837               	movf	sprintf@tmpval^(0+128),w
 12185  05A7  3E30               	addlw	48
 12186  05A8  00A5               	movwf	??_sprintf^(0+128)
 12187  05A9  084B               	movf	sprintf@sp^(0+128),w
 12188  05AA  0086               	movwf	6
 12189  05AB  0187               	clrf	7
 12190  05AC  0825               	movf	??_sprintf^(0+128),w
 12191  05AD  0081               	movwf	1
 12192  05AE  3001               	movlw	1
 12193  05AF  00A5               	movwf	??_sprintf^(0+128)
 12194  05B0  0825               	movf	??_sprintf^(0+128),w
 12195  05B1  07CB               	addwf	sprintf@sp^(0+128),f
 12196                           
 12197                           ;doprnt.c: 1232: val %= dpowers[c];
 12198  05B2  084A               	movf	sprintf@c^(0+128),w
 12199  05B3  00A5               	movwf	??_sprintf^(0+128)
 12200  05B4  01A6               	clrf	(??_sprintf^(0+128)+1)
 12201  05B5  35A5               	lslf	??_sprintf^(0+128),f
 12202  05B6  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 12203  05B7  35A5               	lslf	??_sprintf^(0+128),f
 12204  05B8  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 12205  05B9  3080               	movlw	low (_dpowers| (0+32768))
 12206  05BA  0725               	addwf	??_sprintf^(0+128),w
 12207  05BB  0084               	movwf	4
 12208  05BC  3090               	movlw	high (_dpowers| (0+32768))
 12209  05BD  3D26               	addwfc	(??_sprintf+1)^(0+128),w
 12210  05BE  0085               	movwf	5
 12211  05BF  3F00               	moviw [0]fsr0
 12212  05C0  0140               	movlb	0	; select bank0
 12213  05C1  00AD               	movwf	___llmod@divisor
 12214  05C2  3F01               	moviw [1]fsr0
 12215  05C3  00AE               	movwf	___llmod@divisor+1
 12216  05C4  3F02               	moviw [2]fsr0
 12217  05C5  00AF               	movwf	___llmod@divisor+2
 12218  05C6  3F03               	moviw [3]fsr0
 12219  05C7  00B0               	movwf	___llmod@divisor+3
 12220  05C8  0141               	movlb	1	; select bank1
 12221  05C9  083E               	movf	(sprintf@val+3)^(0+128),w
 12222  05CA  0140               	movlb	0	; select bank0
 12223  05CB  00B4               	movwf	___llmod@dividend+3
 12224  05CC  0141               	movlb	1	; select bank1
 12225  05CD  083D               	movf	(sprintf@val+2)^(0+128),w
 12226  05CE  0140               	movlb	0	; select bank0
 12227  05CF  00B3               	movwf	___llmod@dividend+2
 12228  05D0  0141               	movlb	1	; select bank1
 12229  05D1  083C               	movf	(sprintf@val+1)^(0+128),w
 12230  05D2  0140               	movlb	0	; select bank0
 12231  05D3  00B2               	movwf	___llmod@dividend+1
 12232  05D4  0141               	movlb	1	; select bank1
 12233  05D5  083B               	movf	sprintf@val^(0+128),w
 12234  05D6  0140               	movlb	0	; select bank0
 12235  05D7  00B1               	movwf	___llmod@dividend
 12236  05D8  3193  2369  3180   	fcall	___llmod
 12237  05DB  0140               	movlb	0	; select bank0
 12238  05DC  0830               	movf	?___llmod+3,w
 12239  05DD  0141               	movlb	1	; select bank1
 12240  05DE  00BE               	movwf	(sprintf@val+3)^(0+128)
 12241  05DF  0140               	movlb	0	; select bank0
 12242  05E0  082F               	movf	?___llmod+2,w
 12243  05E1  0141               	movlb	1	; select bank1
 12244  05E2  00BD               	movwf	(sprintf@val+2)^(0+128)
 12245  05E3  0140               	movlb	0	; select bank0
 12246  05E4  082E               	movf	?___llmod+1,w
 12247  05E5  0141               	movlb	1	; select bank1
 12248  05E6  00BC               	movwf	(sprintf@val+1)^(0+128)
 12249  05E7  0140               	movlb	0	; select bank0
 12250  05E8  082D               	movf	?___llmod,w
 12251  05E9  2D38               	goto	L9
 12252  05EA                     l6101:	
 12253                           ;doprnt.c: 1233: }
 12254                           ;doprnt.c: 1235: while(prec) {
 12255                           
 12256                           
 12257                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 12258  05EA  3030               	movlw	48
 12259  05EB  00A5               	movwf	??_sprintf^(0+128)
 12260  05EC  084B               	movf	sprintf@sp^(0+128),w
 12261  05ED  0086               	movwf	6
 12262  05EE  0187               	clrf	7
 12263  05EF  0825               	movf	??_sprintf^(0+128),w
 12264  05F0  0081               	movwf	1
 12265  05F1  3001               	movlw	1
 12266  05F2  00A5               	movwf	??_sprintf^(0+128)
 12267  05F3  0825               	movf	??_sprintf^(0+128),w
 12268  05F4  07CB               	addwf	sprintf@sp^(0+128),f
 12269                           
 12270                           ;doprnt.c: 1237: prec--;
 12271  05F5  30FF               	movlw	255
 12272  05F6  07C6               	addwf	sprintf@prec^(0+128),f
 12273  05F7  30FF               	movlw	255
 12274  05F8  3DC7               	addwfc	(sprintf@prec+1)^(0+128),f
 12275  05F9                     l6107:	
 12276  05F9  0846               	movf	sprintf@prec^(0+128),w
 12277  05FA  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 12278  05FB  1903               	btfsc	3,2
 12279  05FC  2856               	goto	l6219
 12280  05FD  2DEA               	goto	l6101
 12281  05FE                     l6109:	
 12282                           ;doprnt.c: 1238: }
 12283                           ;doprnt.c: 1245: continue;
 12284                           
 12285                           
 12286                           ;doprnt.c: 1246: }
 12287                           ;doprnt.c: 1253: {
 12288                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 12289  05FE  0836               	movf	sprintf@ap^(0+128),w
 12290  05FF  0086               	movwf	6
 12291  0600  0187               	clrf	7
 12292  0601  3F40               	moviw [0]fsr1
 12293  0602  00A5               	movwf	??_sprintf^(0+128)
 12294  0603  3F41               	moviw [1]fsr1
 12295  0604  00A6               	movwf	(??_sprintf^(0+128)+1)
 12296  0605  0825               	movf	??_sprintf^(0+128),w
 12297  0606  00BB               	movwf	sprintf@val^(0+128)
 12298  0607  0826               	movf	(??_sprintf+1)^(0+128),w
 12299  0608  00BC               	movwf	(sprintf@val+1)^(0+128)
 12300  0609  0D89               	rlf	9,f
 12301  060A  3B89               	subwfb	9,f
 12302  060B  0989               	comf	9,f
 12303  060C  00BD               	movwf	(sprintf@val+2)^(0+128)
 12304  060D  00BE               	movwf	(sprintf@val+3)^(0+128)
 12305  060E  3002               	movlw	2
 12306  060F  00A5               	movwf	??_sprintf^(0+128)
 12307  0610  0825               	movf	??_sprintf^(0+128),w
 12308  0611  07B6               	addwf	sprintf@ap^(0+128),f
 12309                           
 12310                           ;doprnt.c: 1261: if((long)val < 0) {
 12311  0612  1FBE               	btfss	(sprintf@val+3)^(0+128),7
 12312  0613  2E23               	goto	l6119
 12313                           
 12314                           ;doprnt.c: 1262: flag |= 0x03;
 12315  0614  3003               	movlw	3
 12316  0615  04C8               	iorwf	sprintf@flag^(0+128),f
 12317  0616  3000               	movlw	0
 12318  0617  04C9               	iorwf	(sprintf@flag+1)^(0+128),f
 12319                           
 12320                           ;doprnt.c: 1263: val = -val;
 12321  0618  09BB               	comf	sprintf@val^(0+128),f
 12322  0619  09BC               	comf	(sprintf@val+1)^(0+128),f
 12323  061A  09BD               	comf	(sprintf@val+2)^(0+128),f
 12324  061B  09BE               	comf	(sprintf@val+3)^(0+128),f
 12325  061C  0ABB               	incf	sprintf@val^(0+128),f
 12326  061D  1903               	skipnz
 12327  061E  0ABC               	incf	(sprintf@val+1)^(0+128),f
 12328  061F  1903               	skipnz
 12329  0620  0ABD               	incf	(sprintf@val+2)^(0+128),f
 12330  0621  1903               	skipnz
 12331  0622  0ABE               	incf	(sprintf@val+3)^(0+128),f
 12332  0623                     l6119:	
 12333                           
 12334                           ;doprnt.c: 1264: }
 12335                           ;doprnt.c: 1266: }
 12336                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 12337  0623  0846               	movf	sprintf@prec^(0+128),w
 12338  0624  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 12339  0625  1D03               	btfss	3,2
 12340  0626  2E31               	goto	l6125
 12341  0627  083E               	movf	(sprintf@val+3)^(0+128),w
 12342  0628  043D               	iorwf	(sprintf@val+2)^(0+128),w
 12343  0629  043C               	iorwf	(sprintf@val+1)^(0+128),w
 12344  062A  043B               	iorwf	sprintf@val^(0+128),w
 12345  062B  1D03               	skipz
 12346  062C  2E31               	goto	l6125
 12347                           
 12348                           ;doprnt.c: 1291: prec++;
 12349  062D  3001               	movlw	1
 12350  062E  07C6               	addwf	sprintf@prec^(0+128),f
 12351  062F  3000               	movlw	0
 12352  0630  3DC7               	addwfc	(sprintf@prec+1)^(0+128),f
 12353  0631                     l6125:	
 12354                           
 12355                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12356  0631  01CA               	clrf	sprintf@c^(0+128)
 12357  0632  0ACA               	incf	sprintf@c^(0+128),f
 12358  0633  300A               	movlw	10
 12359  0634  064A               	xorwf	sprintf@c^(0+128),w
 12360  0635  1903               	btfsc	3,2
 12361  0636  2E64               	goto	l6137
 12362  0637                     l6131:	
 12363                           
 12364                           ;doprnt.c: 1306: if(val < dpowers[c])
 12365  0637  084A               	movf	sprintf@c^(0+128),w
 12366  0638  00A5               	movwf	??_sprintf^(0+128)
 12367  0639  01A6               	clrf	(??_sprintf^(0+128)+1)
 12368  063A  35A5               	lslf	??_sprintf^(0+128),f
 12369  063B  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 12370  063C  35A5               	lslf	??_sprintf^(0+128),f
 12371  063D  0DA6               	rlf	(??_sprintf^(0+128)+1),f
 12372  063E  3080               	movlw	low (_dpowers| (0+32768))
 12373  063F  0725               	addwf	??_sprintf^(0+128),w
 12374  0640  0084               	movwf	4
 12375  0641  3090               	movlw	high (_dpowers| (0+32768))
 12376  0642  3D26               	addwfc	(??_sprintf+1)^(0+128),w
 12377  0643  0085               	movwf	5
 12378  0644  3F00               	moviw [0]fsr0
 12379  0645  00A7               	movwf	(??_sprintf+2)^(0+128)
 12380  0646  3F01               	moviw [1]fsr0
 12381  0647  00A8               	movwf	((??_sprintf+2)^(0+128)+1)
 12382  0648  3F02               	moviw [2]fsr0
 12383  0649  00A9               	movwf	((??_sprintf+2)^(0+128)+2)
 12384  064A  3F03               	moviw [3]fsr0
 12385  064B  00AA               	movwf	((??_sprintf+2)^(0+128)+3)
 12386  064C  082A               	movf	(??_sprintf+5)^(0+128),w
 12387  064D  023E               	subwf	(sprintf@val+3)^(0+128),w
 12388  064E  1D03               	skipz
 12389  064F  2E5A               	goto	u7095
 12390  0650  0829               	movf	(??_sprintf+4)^(0+128),w
 12391  0651  023D               	subwf	(sprintf@val+2)^(0+128),w
 12392  0652  1D03               	skipz
 12393  0653  2E5A               	goto	u7095
 12394  0654  0828               	movf	(??_sprintf+3)^(0+128),w
 12395  0655  023C               	subwf	(sprintf@val+1)^(0+128),w
 12396  0656  1D03               	skipz
 12397  0657  2E5A               	goto	u7095
 12398  0658  0827               	movf	(??_sprintf+2)^(0+128),w
 12399  0659  023B               	subwf	sprintf@val^(0+128),w
 12400  065A                     u7095:	
 12401  065A  1C03               	btfss	3,0
 12402  065B  2E64               	goto	l6137
 12403                           
 12404                           ;doprnt.c: 1307: break;
 12405  065C  3001               	movlw	1
 12406  065D  00A5               	movwf	??_sprintf^(0+128)
 12407  065E  0825               	movf	??_sprintf^(0+128),w
 12408  065F  07CA               	addwf	sprintf@c^(0+128),f
 12409  0660  300A               	movlw	10
 12410  0661  064A               	xorwf	sprintf@c^(0+128),w
 12411  0662  1D03               	btfss	3,2
 12412  0663  2E37               	goto	l6131
 12413  0664                     l6137:	
 12414                           
 12415                           ;doprnt.c: 1339: if(c < prec)
 12416  0664  084A               	movf	sprintf@c^(0+128),w
 12417  0665  00A5               	movwf	??_sprintf^(0+128)
 12418  0666  01A6               	clrf	(??_sprintf^(0+128)+1)
 12419  0667  1BA5               	btfsc	??_sprintf^(0+128),7
 12420  0668  03A6               	decf	(??_sprintf^(0+128)+1),f
 12421  0669  0826               	movf	(??_sprintf+1)^(0+128),w
 12422  066A  3A80               	xorlw	128
 12423  066B  00A7               	movwf	(??_sprintf+2)^(0+128)
 12424  066C  0847               	movf	(sprintf@prec+1)^(0+128),w
 12425  066D  3A80               	xorlw	128
 12426  066E  0227               	subwf	(??_sprintf+2)^(0+128),w
 12427  066F  1D03               	skipz
 12428  0670  2E73               	goto	u7115
 12429  0671  0846               	movf	sprintf@prec^(0+128),w
 12430  0672  0225               	subwf	??_sprintf^(0+128),w
 12431  0673                     u7115:	
 12432  0673  1803               	skipnc
 12433  0674  2E7B               	goto	l6141
 12434                           
 12435                           ;doprnt.c: 1340: c = prec;
 12436  0675  0141               	movlb	1	; select bank1
 12437  0676  0846               	movf	sprintf@prec^(0+128),w
 12438  0677  00A5               	movwf	??_sprintf^(0+128)
 12439  0678  0825               	movf	??_sprintf^(0+128),w
 12440  0679  00CA               	movwf	sprintf@c^(0+128)
 12441  067A  2E93               	goto	l928
 12442  067B                     l6141:	
 12443                           
 12444                           ;doprnt.c: 1341: else if(prec < c)
 12445  067B  0141               	movlb	1	; select bank1
 12446  067C  084A               	movf	sprintf@c^(0+128),w
 12447  067D  00A5               	movwf	??_sprintf^(0+128)
 12448  067E  01A6               	clrf	(??_sprintf^(0+128)+1)
 12449  067F  1BA5               	btfsc	??_sprintf^(0+128),7
 12450  0680  03A6               	decf	(??_sprintf^(0+128)+1),f
 12451  0681  0847               	movf	(sprintf@prec+1)^(0+128),w
 12452  0682  3A80               	xorlw	128
 12453  0683  00A7               	movwf	(??_sprintf+2)^(0+128)
 12454  0684  0826               	movf	(??_sprintf+1)^(0+128),w
 12455  0685  3A80               	xorlw	128
 12456  0686  0227               	subwf	(??_sprintf+2)^(0+128),w
 12457  0687  1D03               	skipz
 12458  0688  2E8B               	goto	u7125
 12459  0689  0825               	movf	??_sprintf^(0+128),w
 12460  068A  0246               	subwf	sprintf@prec^(0+128),w
 12461  068B                     u7125:	
 12462  068B  1803               	skipnc
 12463  068C  2E93               	goto	l928
 12464                           
 12465                           ;doprnt.c: 1342: prec = c;
 12466  068D  0141               	movlb	1	; select bank1
 12467  068E  084A               	movf	sprintf@c^(0+128),w
 12468  068F  00C6               	movwf	sprintf@prec^(0+128)
 12469  0690  01C7               	clrf	(sprintf@prec+1)^(0+128)
 12470  0691  1BC6               	btfsc	sprintf@prec^(0+128),7
 12471  0692  03C7               	decf	(sprintf@prec+1)^(0+128),f
 12472  0693                     l928:	
 12473                           
 12474                           ;doprnt.c: 1345: if(width && flag & 0x03)
 12475  0693  0141               	movlb	1	; select bank1
 12476  0694  0841               	movf	sprintf@width^(0+128),w
 12477  0695  0442               	iorwf	(sprintf@width+1)^(0+128),w
 12478  0696  1903               	btfsc	3,2
 12479  0697  2EA6               	goto	l6149
 12480  0698  3003               	movlw	3
 12481  0699  0548               	andwf	sprintf@flag^(0+128),w
 12482  069A  00A5               	movwf	??_sprintf^(0+128)
 12483  069B  3000               	movlw	0
 12484  069C  0549               	andwf	(sprintf@flag+1)^(0+128),w
 12485  069D  00A6               	movwf	(??_sprintf+1)^(0+128)
 12486  069E  0825               	movf	??_sprintf^(0+128),w
 12487  069F  0426               	iorwf	(??_sprintf^(0+128)+1),w
 12488  06A0  1903               	btfsc	3,2
 12489  06A1  2EA6               	goto	l6149
 12490                           
 12491                           ;doprnt.c: 1346: width--;
 12492  06A2  30FF               	movlw	255
 12493  06A3  07C1               	addwf	sprintf@width^(0+128),f
 12494  06A4  30FF               	movlw	255
 12495  06A5  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 12496  06A6                     l6149:	
 12497                           
 12498                           ;doprnt.c: 1348: if(flag & 0x4000) {
 12499  06A6  1F49               	btfss	(sprintf@flag+1)^(0+128),6
 12500  06A7  2EBD               	goto	l6157
 12501                           
 12502                           ;doprnt.c: 1349: if(width > prec)
 12503  06A8  0847               	movf	(sprintf@prec+1)^(0+128),w
 12504  06A9  3A80               	xorlw	128
 12505  06AA  00A5               	movwf	??_sprintf^(0+128)
 12506  06AB  0842               	movf	(sprintf@width+1)^(0+128),w
 12507  06AC  3A80               	xorlw	128
 12508  06AD  0225               	subwf	??_sprintf^(0+128),w
 12509  06AE  1D03               	skipz
 12510  06AF  2EB2               	goto	u7165
 12511  06B0  0841               	movf	sprintf@width^(0+128),w
 12512  06B1  0246               	subwf	sprintf@prec^(0+128),w
 12513  06B2                     u7165:	
 12514  06B2  1803               	skipnc
 12515  06B3  2EBA               	goto	l6155
 12516                           
 12517                           ;doprnt.c: 1350: width -= prec;
 12518  06B4  0141               	movlb	1	; select bank1
 12519  06B5  0846               	movf	sprintf@prec^(0+128),w
 12520  06B6  02C1               	subwf	sprintf@width^(0+128),f
 12521  06B7  0847               	movf	(sprintf@prec+1)^(0+128),w
 12522  06B8  3BC2               	subwfb	(sprintf@width+1)^(0+128),f
 12523  06B9  2EBD               	goto	l6157
 12524  06BA                     l6155:	
 12525                           
 12526                           ;doprnt.c: 1351: else
 12527                           ;doprnt.c: 1352: width = 0;
 12528  06BA  0141               	movlb	1	; select bank1
 12529  06BB  01C1               	clrf	sprintf@width^(0+128)
 12530  06BC  01C2               	clrf	(sprintf@width+1)^(0+128)
 12531  06BD                     l6157:	
 12532                           
 12533                           ;doprnt.c: 1353: }
 12534                           ;doprnt.c: 1381: if(width > c)
 12535  06BD  084A               	movf	sprintf@c^(0+128),w
 12536  06BE  00A5               	movwf	??_sprintf^(0+128)
 12537  06BF  01A6               	clrf	(??_sprintf^(0+128)+1)
 12538  06C0  1BA5               	btfsc	??_sprintf^(0+128),7
 12539  06C1  03A6               	decf	(??_sprintf^(0+128)+1),f
 12540  06C2  0826               	movf	(??_sprintf+1)^(0+128),w
 12541  06C3  3A80               	xorlw	128
 12542  06C4  00A7               	movwf	(??_sprintf+2)^(0+128)
 12543  06C5  0842               	movf	(sprintf@width+1)^(0+128),w
 12544  06C6  3A80               	xorlw	128
 12545  06C7  0227               	subwf	(??_sprintf+2)^(0+128),w
 12546  06C8  1D03               	skipz
 12547  06C9  2ECC               	goto	u7175
 12548  06CA  0841               	movf	sprintf@width^(0+128),w
 12549  06CB  0225               	subwf	??_sprintf^(0+128),w
 12550  06CC                     u7175:	
 12551  06CC  1803               	skipnc
 12552  06CD  2ED9               	goto	l6161
 12553                           
 12554                           ;doprnt.c: 1382: width -= c;
 12555  06CE  0141               	movlb	1	; select bank1
 12556  06CF  084A               	movf	sprintf@c^(0+128),w
 12557  06D0  00A5               	movwf	??_sprintf^(0+128)
 12558  06D1  01A6               	clrf	(??_sprintf^(0+128)+1)
 12559  06D2  1BA5               	btfsc	??_sprintf^(0+128),7
 12560  06D3  03A6               	decf	(??_sprintf^(0+128)+1),f
 12561  06D4  0825               	movf	??_sprintf^(0+128),w
 12562  06D5  02C1               	subwf	sprintf@width^(0+128),f
 12563  06D6  0826               	movf	(??_sprintf+1)^(0+128),w
 12564  06D7  3BC2               	subwfb	(sprintf@width+1)^(0+128),f
 12565  06D8  2EDC               	goto	l6163
 12566  06D9                     l6161:	
 12567                           
 12568                           ;doprnt.c: 1383: else
 12569                           ;doprnt.c: 1384: width = 0;
 12570  06D9  0141               	movlb	1	; select bank1
 12571  06DA  01C1               	clrf	sprintf@width^(0+128)
 12572  06DB  01C2               	clrf	(sprintf@width+1)^(0+128)
 12573  06DC                     l6163:	
 12574                           
 12575                           ;doprnt.c: 1387: if(flag & 0x04) {
 12576  06DC  1D48               	btfss	sprintf@flag^(0+128),2
 12577  06DD  2F0B               	goto	l6189
 12578                           
 12579                           ;doprnt.c: 1389: if(flag & 0x02)
 12580  06DE  1CC8               	btfss	sprintf@flag^(0+128),1
 12581  06DF  2EEA               	goto	l937
 12582                           
 12583                           ;doprnt.c: 1390: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 12584  06E0  1848               	btfsc	sprintf@flag^(0+128),0
 12585  06E1  2EE4               	goto	l6171
 12586  06E2  302B               	movlw	43
 12587  06E3  2EE5               	goto	L10
 12588  06E4                     l6171:	
 12589  06E4  302D               	movlw	45
 12590  06E5                     L10:	
 12591  06E5  00B2               	movwf	_sprintf$1612^(0+128)
 12592  06E6  3000               	movlw	0
 12593  06E7  00B3               	movwf	(_sprintf$1612^(0+128)+1)
 12594  06E8  0832               	movf	_sprintf$1612^(0+128),w
 12595  06E9  2EED               	goto	L13
 12596  06EA                     l937:	
 12597                           
 12598                           ;doprnt.c: 1396: else
 12599                           ;doprnt.c: 1399: if(flag & 0x01)
 12600  06EA  1C48               	btfss	sprintf@flag^(0+128),0
 12601  06EB  2EF7               	goto	l6181
 12602                           
 12603                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 12604  06EC  3020               	movlw	32
 12605  06ED                     L13:	
 12606  06ED  00A5               	movwf	??_sprintf^(0+128)
 12607  06EE  084B               	movf	sprintf@sp^(0+128),w
 12608  06EF  0086               	movwf	6
 12609  06F0  0187               	clrf	7
 12610  06F1  0825               	movf	??_sprintf^(0+128),w
 12611  06F2  0081               	movwf	1
 12612  06F3  3001               	movlw	1
 12613  06F4  00A5               	movwf	??_sprintf^(0+128)
 12614  06F5  0825               	movf	??_sprintf^(0+128),w
 12615  06F6  07CB               	addwf	sprintf@sp^(0+128),f
 12616  06F7                     l6181:	
 12617                           
 12618                           ;doprnt.c: 1415: if(width)
 12619  06F7  0841               	movf	sprintf@width^(0+128),w
 12620  06F8  0442               	iorwf	(sprintf@width+1)^(0+128),w
 12621  06F9  1903               	btfsc	3,2
 12622  06FA  2F3B               	goto	l6217
 12623                           
 12624                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 12625                           
 12626                           ;doprnt.c: 1416: do
 12627  06FB  3030               	movlw	48
 12628  06FC  00A5               	movwf	??_sprintf^(0+128)
 12629  06FD  084B               	movf	sprintf@sp^(0+128),w
 12630  06FE  0086               	movwf	6
 12631  06FF  0187               	clrf	7
 12632  0700  0825               	movf	??_sprintf^(0+128),w
 12633  0701  0081               	movwf	1
 12634  0702  3001               	movlw	1
 12635  0703  00A5               	movwf	??_sprintf^(0+128)
 12636  0704  0825               	movf	??_sprintf^(0+128),w
 12637  0705  07CB               	addwf	sprintf@sp^(0+128),f
 12638                           
 12639                           ;doprnt.c: 1418: while(--width);
 12640  0706  30FF               	movlw	255
 12641  0707  07C1               	addwf	sprintf@width^(0+128),f
 12642  0708  30FF               	movlw	255
 12643  0709  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 12644  070A  2EF7               	goto	l6181
 12645  070B                     l6189:	
 12646                           ;doprnt.c: 1420: } else
 12647                           
 12648                           
 12649                           ;doprnt.c: 1422: {
 12650                           ;doprnt.c: 1424: if(width
 12651                           ;doprnt.c: 1428: )
 12652  070B  0841               	movf	sprintf@width^(0+128),w
 12653  070C  0442               	iorwf	(sprintf@width+1)^(0+128),w
 12654  070D  1903               	btfsc	3,2
 12655  070E  2F22               	goto	l948
 12656  070F                     l6191:	
 12657                           ;doprnt.c: 1429: do
 12658                           
 12659                           
 12660                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 12661  070F  3020               	movlw	32
 12662  0710  00A5               	movwf	??_sprintf^(0+128)
 12663  0711  084B               	movf	sprintf@sp^(0+128),w
 12664  0712  0086               	movwf	6
 12665  0713  0187               	clrf	7
 12666  0714  0825               	movf	??_sprintf^(0+128),w
 12667  0715  0081               	movwf	1
 12668  0716  3001               	movlw	1
 12669  0717  00A5               	movwf	??_sprintf^(0+128)
 12670  0718  0825               	movf	??_sprintf^(0+128),w
 12671  0719  07CB               	addwf	sprintf@sp^(0+128),f
 12672                           
 12673                           ;doprnt.c: 1431: while(--width);
 12674  071A  30FF               	movlw	255
 12675  071B  07C1               	addwf	sprintf@width^(0+128),f
 12676  071C  30FF               	movlw	255
 12677  071D  3DC2               	addwfc	(sprintf@width+1)^(0+128),f
 12678  071E  0841               	movf	sprintf@width^(0+128),w
 12679  071F  0442               	iorwf	(sprintf@width+1)^(0+128),w
 12680  0720  1D03               	btfss	3,2
 12681  0721  2F0F               	goto	l6191
 12682  0722                     l948:	
 12683                           
 12684                           ;doprnt.c: 1434: if(flag & 0x02)
 12685  0722  1CC8               	btfss	sprintf@flag^(0+128),1
 12686  0723  2F2E               	goto	l951
 12687                           
 12688                           ;doprnt.c: 1435: ((*sp++ = (flag & 0x01 ? '-' : '+')));
 12689  0724  1848               	btfsc	sprintf@flag^(0+128),0
 12690  0725  2F28               	goto	l6201
 12691  0726  302B               	movlw	43
 12692  0727  2F29               	goto	L11
 12693  0728                     l6201:	
 12694  0728  302D               	movlw	45
 12695  0729                     L11:	
 12696  0729  00B4               	movwf	_sprintf$1613^(0+128)
 12697  072A  3000               	movlw	0
 12698  072B  00B5               	movwf	(_sprintf$1613^(0+128)+1)
 12699  072C  0834               	movf	_sprintf$1613^(0+128),w
 12700  072D  2F31               	goto	L15
 12701  072E                     l951:	
 12702                           
 12703                           ;doprnt.c: 1443: else if(flag & 0x01)
 12704  072E  1C48               	btfss	sprintf@flag^(0+128),0
 12705  072F  2F3B               	goto	l6217
 12706                           
 12707                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 12708  0730  3020               	movlw	32
 12709  0731                     L15:	
 12710  0731  00A5               	movwf	??_sprintf^(0+128)
 12711  0732  084B               	movf	sprintf@sp^(0+128),w
 12712  0733  0086               	movwf	6
 12713  0734  0187               	clrf	7
 12714  0735  0825               	movf	??_sprintf^(0+128),w
 12715  0736  0081               	movwf	1
 12716  0737  3001               	movlw	1
 12717  0738  00A5               	movwf	??_sprintf^(0+128)
 12718  0739  0825               	movf	??_sprintf^(0+128),w
 12719  073A  07CB               	addwf	sprintf@sp^(0+128),f
 12720  073B                     l6217:	
 12721  073B  30FF               	movlw	255
 12722  073C  07C6               	addwf	sprintf@prec^(0+128),f
 12723  073D  30FF               	movlw	255
 12724  073E  3DC7               	addwfc	(sprintf@prec+1)^(0+128),f
 12725  073F  0A46               	incf	sprintf@prec^(0+128),w
 12726  0740  1903               	btfsc	3,2
 12727  0741  0A47               	incf	(sprintf@prec+1)^(0+128),w
 12728  0742  1903               	btfsc	3,2
 12729  0743  2856               	goto	l6219
 12730                           
 12731                           ;doprnt.c: 1478: {
 12732                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 12733                           
 12734                           ;doprnt.c: 1469: }
 12735                           ;doprnt.c: 1474: while(prec--) {
 12736  0744  3000               	movlw	0
 12737  0745  0140               	movlb	0	; select bank0
 12738  0746  00B0               	movwf	___llmod@divisor+3
 12739  0747  3000               	movlw	0
 12740  0748  00AF               	movwf	___llmod@divisor+2
 12741  0749  3000               	movlw	0
 12742  074A  00AE               	movwf	___llmod@divisor+1
 12743  074B  300A               	movlw	10
 12744  074C  00AD               	movwf	___llmod@divisor
 12745  074D  0141               	movlb	1	; select bank1
 12746  074E  0847               	movf	(sprintf@prec+1)^(0+128),w
 12747  074F  0085               	movwf	5
 12748  0750  0846               	movf	sprintf@prec^(0+128),w
 12749  0751  0084               	movwf	4
 12750  0752  3584               	lslf	4,f
 12751  0753  0D85               	rlf	5,f
 12752  0754  3584               	lslf	4,f
 12753  0755  0D85               	rlf	5,f
 12754  0756  3080               	movlw	low (_dpowers| (0+32768))
 12755  0757  0784               	addwf	4,f
 12756  0758  3090               	movlw	high (_dpowers| (0+32768))
 12757  0759  3D85               	addwfc	5,f
 12758  075A  3F00               	moviw [0]fsr0
 12759  075B  0140               	movlb	0	; select bank0
 12760  075C  00A0               	movwf	___lldiv@divisor
 12761  075D  3F01               	moviw [1]fsr0
 12762  075E  00A1               	movwf	___lldiv@divisor+1
 12763  075F  3F02               	moviw [2]fsr0
 12764  0760  00A2               	movwf	___lldiv@divisor+2
 12765  0761  3F03               	moviw [3]fsr0
 12766  0762  00A3               	movwf	___lldiv@divisor+3
 12767  0763  0141               	movlb	1	; select bank1
 12768  0764  083E               	movf	(sprintf@val+3)^(0+128),w
 12769  0765  0140               	movlb	0	; select bank0
 12770  0766  00A7               	movwf	___lldiv@dividend+3
 12771  0767  0141               	movlb	1	; select bank1
 12772  0768  083D               	movf	(sprintf@val+2)^(0+128),w
 12773  0769  0140               	movlb	0	; select bank0
 12774  076A  00A6               	movwf	___lldiv@dividend+2
 12775  076B  0141               	movlb	1	; select bank1
 12776  076C  083C               	movf	(sprintf@val+1)^(0+128),w
 12777  076D  0140               	movlb	0	; select bank0
 12778  076E  00A5               	movwf	___lldiv@dividend+1
 12779  076F  0141               	movlb	1	; select bank1
 12780  0770  083B               	movf	sprintf@val^(0+128),w
 12781  0771  0140               	movlb	0	; select bank0
 12782  0772  00A4               	movwf	___lldiv@dividend
 12783  0773  3194  2492  3180   	fcall	___lldiv
 12784  0776  0140               	movlb	0	; select bank0
 12785  0777  0823               	movf	?___lldiv+3,w
 12786  0778  00B4               	movwf	___llmod@dividend+3
 12787  0779  0822               	movf	?___lldiv+2,w
 12788  077A  00B3               	movwf	___llmod@dividend+2
 12789  077B  0821               	movf	?___lldiv+1,w
 12790  077C  00B2               	movwf	___llmod@dividend+1
 12791  077D  0820               	movf	?___lldiv,w
 12792  077E  00B1               	movwf	___llmod@dividend
 12793  077F  3193  2369  3180   	fcall	___llmod
 12794  0782  0140               	movlb	0	; select bank0
 12795  0783  082D               	movf	?___llmod,w
 12796  0784  3E30               	addlw	48
 12797  0785  0141               	movlb	1	; select bank1
 12798  0786  00A5               	movwf	??_sprintf^(0+128)
 12799  0787  0825               	movf	??_sprintf^(0+128),w
 12800  0788  00CA               	movwf	sprintf@c^(0+128)
 12801                           
 12802                           ;doprnt.c: 1523: }
 12803                           ;doprnt.c: 1524: ((*sp++ = (c)));
 12804  0789  084A               	movf	sprintf@c^(0+128),w
 12805  078A  2F31               	goto	L15
 12806  078B                     l6221:	
 12807                           ;doprnt.c: 1525: }
 12808                           ;doprnt.c: 1533: }
 12809                           ;doprnt.c: 1535: alldone:
 12810                           
 12811                           
 12812                           ;doprnt.c: 1538: *sp = 0;
 12813  078B  084B               	movf	sprintf@sp^(0+128),w
 12814  078C  0086               	movwf	6
 12815  078D  0187               	clrf	7
 12816  078E  0181               	clrf	1
 12817  078F  0008               	return
 12818  0790                     __end_of_sprintf:	
 12819                           ;doprnt.c: 1540: return 0;
 12820                           ;	Return value of _sprintf is never used
 12821                           
 12822                           
 12823                           	psect	text42
 12824  0DBA                     __ptext42:	
 12825 ;; *************** function _scale *****************
 12826 ;; Defined at:
 12827 ;;		line 425 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;  scl             1    wreg     char 
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;  scl             1   43[BANK0 ] char 
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  3   35[BANK0 ] char 
 12834 ;; Registers used:
 12835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12841 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12844 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12845 ;;Total ram usage:        9 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; Hardware stack levels required when called:    5
 12848 ;; This function calls:
 12849 ;;		___awdiv
 12850 ;;		___awmod
 12851 ;;		___ftmul
 12852 ;;		___wmul
 12853 ;; This function is called by:
 12854 ;;		_sprintf
 12855 ;; This function uses a non-reentrant model
 12856 ;;
 12857                           
 12858                           
 12859                           ;psect for function _scale
 12860  0DBA                     _scale:	
 12861                           
 12862                           ;incstack = 0
 12863                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12864                           ;scale@scl stored from wreg
 12865  0DBA  0140               	movlb	0	; select bank0
 12866  0DBB  00CB               	movwf	scale@scl
 12867                           
 12868                           ;doprnt.c: 428: if(scl < 0) {
 12869  0DBC  1FCB               	btfss	scale@scl,7
 12870  0DBD  2EE0               	goto	l5361
 12871                           
 12872                           ;doprnt.c: 429: scl = -scl;
 12873  0DBE  09CB               	comf	scale@scl,f
 12874  0DBF  0ACB               	incf	scale@scl,f
 12875                           
 12876                           ;doprnt.c: 430: if(scl>=110)
 12877  0DC0  084B               	movf	scale@scl,w
 12878  0DC1  3A80               	xorlw	128
 12879  0DC2  3E12               	addlw	-238
 12880  0DC3  1C03               	skipc
 12881  0DC4  2E64               	goto	l5351
 12882                           
 12883                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12884  0DC5  300A               	movlw	10
 12885  0DC6  00A4               	movwf	___awdiv@divisor
 12886  0DC7  3000               	movlw	0
 12887  0DC8  00A5               	movwf	___awdiv@divisor+1
 12888  0DC9  084B               	movf	scale@scl,w
 12889  0DCA  00A2               	movwf	___awmod@dividend
 12890  0DCB  01A3               	clrf	___awmod@dividend+1
 12891  0DCC  1BA2               	btfsc	___awmod@dividend,7
 12892  0DCD  03A3               	decf	___awmod@dividend+1,f
 12893  0DCE  3064               	movlw	100
 12894  0DCF  00A0               	movwf	___awmod@divisor
 12895  0DD0  3000               	movlw	0
 12896  0DD1  00A1               	movwf	___awmod@divisor+1
 12897  0DD2  3193  23AC  318D   	fcall	___awmod
 12898  0DD5  0140               	movlb	0	; select bank0
 12899  0DD6  0821               	movf	?___awmod+1,w
 12900  0DD7  00A7               	movwf	___awdiv@dividend+1
 12901  0DD8  0820               	movf	?___awmod,w
 12902  0DD9  00A6               	movwf	___awdiv@dividend
 12903  0DDA  3194  2440  318D   	fcall	___awdiv
 12904  0DDD  0140               	movlb	0	; select bank0
 12905  0DDE  0824               	movf	?___awdiv,w
 12906  0DDF  3E09               	addlw	9
 12907  0DE0  00AD               	movwf	___wmul@multiplier
 12908  0DE1  3000               	movlw	0
 12909  0DE2  3D25               	addwfc	?___awdiv+1,w
 12910  0DE3  00AE               	movwf	___wmul@multiplier+1
 12911  0DE4  3003               	movlw	3
 12912  0DE5  00AF               	movwf	___wmul@multiplicand
 12913  0DE6  3000               	movlw	0
 12914  0DE7  00B0               	movwf	___wmul@multiplicand+1
 12915  0DE8  3191  215F  318D   	fcall	___wmul
 12916  0DEB  0140               	movlb	0	; select bank0
 12917  0DEC  082E               	movf	?___wmul+1,w
 12918  0DED  0085               	movwf	5
 12919  0DEE  082D               	movf	?___wmul,w
 12920  0DEF  0084               	movwf	4
 12921  0DF0  30A8               	movlw	low (__npowers_| (0+32768))
 12922  0DF1  0784               	addwf	4,f
 12923  0DF2  3090               	movlw	high (__npowers_| (0+32768))
 12924  0DF3  3D85               	addwfc	5,f
 12925  0DF4  3F00               	moviw [0]fsr0
 12926  0DF5  00B3               	movwf	___ftmul@f1
 12927  0DF6  3F01               	moviw [1]fsr0
 12928  0DF7  00B4               	movwf	___ftmul@f1+1
 12929  0DF8  3F02               	moviw [2]fsr0
 12930  0DF9  00B5               	movwf	___ftmul@f1+2
 12931  0DFA  3064               	movlw	100
 12932  0DFB  00A4               	movwf	___awdiv@divisor
 12933  0DFC  3000               	movlw	0
 12934  0DFD  00A5               	movwf	___awdiv@divisor+1
 12935  0DFE  084B               	movf	scale@scl,w
 12936  0DFF  00A6               	movwf	___awdiv@dividend
 12937  0E00  01A7               	clrf	___awdiv@dividend+1
 12938  0E01  1BA6               	btfsc	___awdiv@dividend,7
 12939  0E02  03A7               	decf	___awdiv@dividend+1,f
 12940  0E03  3194  2440  318D   	fcall	___awdiv
 12941  0E06  0140               	movlb	0	; select bank0
 12942  0E07  0824               	movf	?___awdiv,w
 12943  0E08  3E12               	addlw	18
 12944  0E09  00AD               	movwf	___wmul@multiplier
 12945  0E0A  3000               	movlw	0
 12946  0E0B  3D25               	addwfc	?___awdiv+1,w
 12947  0E0C  00AE               	movwf	___wmul@multiplier+1
 12948  0E0D  3003               	movlw	3
 12949  0E0E  00AF               	movwf	___wmul@multiplicand
 12950  0E0F  3000               	movlw	0
 12951  0E10  00B0               	movwf	___wmul@multiplicand+1
 12952  0E11  3191  215F  318D   	fcall	___wmul
 12953  0E14  0140               	movlb	0	; select bank0
 12954  0E15  082E               	movf	?___wmul+1,w
 12955  0E16  0085               	movwf	5
 12956  0E17  082D               	movf	?___wmul,w
 12957  0E18  0084               	movwf	4
 12958  0E19  30A8               	movlw	low (__npowers_| (0+32768))
 12959  0E1A  0784               	addwf	4,f
 12960  0E1B  3090               	movlw	high (__npowers_| (0+32768))
 12961  0E1C  3D85               	addwfc	5,f
 12962  0E1D  3F00               	moviw [0]fsr0
 12963  0E1E  00B6               	movwf	___ftmul@f2
 12964  0E1F  3F01               	moviw [1]fsr0
 12965  0E20  00B7               	movwf	___ftmul@f2+1
 12966  0E21  3F02               	moviw [2]fsr0
 12967  0E22  00B8               	movwf	___ftmul@f2+2
 12968  0E23  3188  20D7  318D   	fcall	___ftmul
 12969  0E26  0140               	movlb	0	; select bank0
 12970  0E27  0833               	movf	?___ftmul,w
 12971  0E28  00C8               	movwf	_scale$2149
 12972  0E29  0834               	movf	?___ftmul+1,w
 12973  0E2A  00C9               	movwf	_scale$2149+1
 12974  0E2B  0835               	movf	?___ftmul+2,w
 12975  0E2C  00CA               	movwf	_scale$2149+2
 12976                           
 12977                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 12978  0E2D  084B               	movf	scale@scl,w
 12979  0E2E  00A2               	movwf	___awmod@dividend
 12980  0E2F  01A3               	clrf	___awmod@dividend+1
 12981  0E30  1BA2               	btfsc	___awmod@dividend,7
 12982  0E31  03A3               	decf	___awmod@dividend+1,f
 12983  0E32  300A               	movlw	10
 12984  0E33  00A0               	movwf	___awmod@divisor
 12985  0E34  3000               	movlw	0
 12986  0E35  00A1               	movwf	___awmod@divisor+1
 12987  0E36  3193  23AC  318D   	fcall	___awmod
 12988  0E39  0140               	movlb	0	; select bank0
 12989  0E3A  0821               	movf	?___awmod+1,w
 12990  0E3B  00AE               	movwf	___wmul@multiplier+1
 12991  0E3C  0820               	movf	?___awmod,w
 12992  0E3D  00AD               	movwf	___wmul@multiplier
 12993  0E3E  3003               	movlw	3
 12994  0E3F  00AF               	movwf	___wmul@multiplicand
 12995  0E40  3000               	movlw	0
 12996  0E41  00B0               	movwf	___wmul@multiplicand+1
 12997  0E42  3191  215F  318D   	fcall	___wmul
 12998  0E45  0140               	movlb	0	; select bank0
 12999  0E46  082E               	movf	?___wmul+1,w
 13000  0E47  0085               	movwf	5
 13001  0E48  082D               	movf	?___wmul,w
 13002  0E49  0084               	movwf	4
 13003  0E4A  30A8               	movlw	low (__npowers_| (0+32768))
 13004  0E4B  0784               	addwf	4,f
 13005  0E4C  3090               	movlw	high (__npowers_| (0+32768))
 13006  0E4D  3D85               	addwfc	5,f
 13007  0E4E  3F00               	moviw [0]fsr0
 13008  0E4F  00B3               	movwf	___ftmul@f1
 13009  0E50  3F01               	moviw [1]fsr0
 13010  0E51  00B4               	movwf	___ftmul@f1+1
 13011  0E52  3F02               	moviw [2]fsr0
 13012  0E53  00B5               	movwf	___ftmul@f1+2
 13013  0E54  0848               	movf	_scale$2149,w
 13014  0E55  00B6               	movwf	___ftmul@f2
 13015  0E56  0849               	movf	_scale$2149+1,w
 13016  0E57  00B7               	movwf	___ftmul@f2+1
 13017  0E58  084A               	movf	_scale$2149+2,w
 13018  0E59  00B8               	movwf	___ftmul@f2+2
 13019  0E5A  3188  20D7         	fcall	___ftmul
 13020  0E5C  0140               	movlb	0	; select bank0
 13021  0E5D  0833               	movf	?___ftmul,w
 13022  0E5E  00C3               	movwf	?_scale
 13023  0E5F  0834               	movf	?___ftmul+1,w
 13024  0E60  00C4               	movwf	?_scale+1
 13025  0E61  0835               	movf	?___ftmul+2,w
 13026  0E62  00C5               	movwf	?_scale+2
 13027  0E63  0008               	return
 13028  0E64                     l5351:	
 13029                           
 13030                           ;doprnt.c: 432: else if(scl > 10)
 13031  0E64  084B               	movf	scale@scl,w
 13032  0E65  3A80               	xorlw	128
 13033  0E66  3E75               	addlw	-139
 13034  0E67  1C03               	skipc
 13035  0E68  2EC3               	goto	l5357
 13036                           
 13037                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 13038  0E69  084B               	movf	scale@scl,w
 13039  0E6A  00A2               	movwf	___awmod@dividend
 13040  0E6B  01A3               	clrf	___awmod@dividend+1
 13041  0E6C  1BA2               	btfsc	___awmod@dividend,7
 13042  0E6D  03A3               	decf	___awmod@dividend+1,f
 13043  0E6E  300A               	movlw	10
 13044  0E6F  00A0               	movwf	___awmod@divisor
 13045  0E70  3000               	movlw	0
 13046  0E71  00A1               	movwf	___awmod@divisor+1
 13047  0E72  3193  23AC  318D   	fcall	___awmod
 13048  0E75  0140               	movlb	0	; select bank0
 13049  0E76  0821               	movf	?___awmod+1,w
 13050  0E77  00AE               	movwf	___wmul@multiplier+1
 13051  0E78  0820               	movf	?___awmod,w
 13052  0E79  00AD               	movwf	___wmul@multiplier
 13053  0E7A  3003               	movlw	3
 13054  0E7B  00AF               	movwf	___wmul@multiplicand
 13055  0E7C  3000               	movlw	0
 13056  0E7D  00B0               	movwf	___wmul@multiplicand+1
 13057  0E7E  3191  215F  318D   	fcall	___wmul
 13058  0E81  0140               	movlb	0	; select bank0
 13059  0E82  082E               	movf	?___wmul+1,w
 13060  0E83  0085               	movwf	5
 13061  0E84  082D               	movf	?___wmul,w
 13062  0E85  0084               	movwf	4
 13063  0E86  30A8               	movlw	low (__npowers_| (0+32768))
 13064  0E87  0784               	addwf	4,f
 13065  0E88  3090               	movlw	high (__npowers_| (0+32768))
 13066  0E89  3D85               	addwfc	5,f
 13067  0E8A  3F00               	moviw [0]fsr0
 13068  0E8B  00B3               	movwf	___ftmul@f1
 13069  0E8C  3F01               	moviw [1]fsr0
 13070  0E8D  00B4               	movwf	___ftmul@f1+1
 13071  0E8E  3F02               	moviw [2]fsr0
 13072  0E8F  00B5               	movwf	___ftmul@f1+2
 13073  0E90  300A               	movlw	10
 13074  0E91  00A4               	movwf	___awdiv@divisor
 13075  0E92  3000               	movlw	0
 13076  0E93  00A5               	movwf	___awdiv@divisor+1
 13077  0E94  084B               	movf	scale@scl,w
 13078  0E95  00A6               	movwf	___awdiv@dividend
 13079  0E96  01A7               	clrf	___awdiv@dividend+1
 13080  0E97  1BA6               	btfsc	___awdiv@dividend,7
 13081  0E98  03A7               	decf	___awdiv@dividend+1,f
 13082  0E99  3194  2440  318D   	fcall	___awdiv
 13083  0E9C  0140               	movlb	0	; select bank0
 13084  0E9D  0824               	movf	?___awdiv,w
 13085  0E9E  3E09               	addlw	9
 13086  0E9F  00AD               	movwf	___wmul@multiplier
 13087  0EA0  3000               	movlw	0
 13088  0EA1  3D25               	addwfc	?___awdiv+1,w
 13089  0EA2  00AE               	movwf	___wmul@multiplier+1
 13090  0EA3  3003               	movlw	3
 13091  0EA4  00AF               	movwf	___wmul@multiplicand
 13092  0EA5  3000               	movlw	0
 13093  0EA6  00B0               	movwf	___wmul@multiplicand+1
 13094  0EA7  3191  215F  318D   	fcall	___wmul
 13095  0EAA  0140               	movlb	0	; select bank0
 13096  0EAB  082E               	movf	?___wmul+1,w
 13097  0EAC  0085               	movwf	5
 13098  0EAD  082D               	movf	?___wmul,w
 13099  0EAE  0084               	movwf	4
 13100  0EAF  30A8               	movlw	low (__npowers_| (0+32768))
 13101  0EB0  0784               	addwf	4,f
 13102  0EB1  3090               	movlw	high (__npowers_| (0+32768))
 13103  0EB2  3D85               	addwfc	5,f
 13104  0EB3  3F00               	moviw [0]fsr0
 13105  0EB4  00B6               	movwf	___ftmul@f2
 13106  0EB5  3F01               	moviw [1]fsr0
 13107  0EB6  00B7               	movwf	___ftmul@f2+1
 13108  0EB7  3F02               	moviw [2]fsr0
 13109  0EB8  00B8               	movwf	___ftmul@f2+2
 13110  0EB9  3188  20D7         	fcall	___ftmul
 13111  0EBB  0140               	movlb	0	; select bank0
 13112  0EBC  0833               	movf	?___ftmul,w
 13113  0EBD  00C3               	movwf	?_scale
 13114  0EBE  0834               	movf	?___ftmul+1,w
 13115  0EBF  00C4               	movwf	?_scale+1
 13116  0EC0  0835               	movf	?___ftmul+2,w
 13117  0EC1  00C5               	movwf	?_scale+2
 13118  0EC2  0008               	return
 13119  0EC3                     l5357:	
 13120                           
 13121                           ;doprnt.c: 434: return _npowers_[scl];
 13122  0EC3  084B               	movf	scale@scl,w
 13123  0EC4  00C6               	movwf	??_scale
 13124  0EC5  01C7               	clrf	??_scale+1
 13125  0EC6  0846               	movf	??_scale,w
 13126  0EC7  00AD               	movwf	___wmul@multiplier
 13127  0EC8  0847               	movf	??_scale+1,w
 13128  0EC9  00AE               	movwf	___wmul@multiplier+1
 13129  0ECA  3003               	movlw	3
 13130  0ECB  00AF               	movwf	___wmul@multiplicand
 13131  0ECC  3000               	movlw	0
 13132  0ECD  00B0               	movwf	___wmul@multiplicand+1
 13133  0ECE  3191  215F         	fcall	___wmul
 13134  0ED0  0140               	movlb	0	; select bank0
 13135  0ED1  082E               	movf	?___wmul+1,w
 13136  0ED2  0085               	movwf	5
 13137  0ED3  082D               	movf	?___wmul,w
 13138  0ED4  0084               	movwf	4
 13139  0ED5  30A8               	movlw	low (__npowers_| (0+32768))
 13140  0ED6  0784               	addwf	4,f
 13141  0ED7  3090               	movlw	high (__npowers_| (0+32768))
 13142  0ED8  3D85               	addwfc	5,f
 13143  0ED9  3F00               	moviw [0]fsr0
 13144  0EDA  00C3               	movwf	?_scale
 13145  0EDB  3F01               	moviw [1]fsr0
 13146  0EDC  00C4               	movwf	?_scale+1
 13147  0EDD  3F02               	moviw [2]fsr0
 13148  0EDE  00C5               	movwf	?_scale+2
 13149  0EDF  0008               	return
 13150  0EE0                     l5361:	
 13151                           
 13152                           ;doprnt.c: 435: }
 13153                           ;doprnt.c: 436: if(scl>=110)
 13154  0EE0  084B               	movf	scale@scl,w
 13155  0EE1  3A80               	xorlw	128
 13156  0EE2  3E12               	addlw	-238
 13157  0EE3  1C03               	skipc
 13158  0EE4  2F84               	goto	l5369
 13159                           
 13160                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13161  0EE5  300A               	movlw	10
 13162  0EE6  00A4               	movwf	___awdiv@divisor
 13163  0EE7  3000               	movlw	0
 13164  0EE8  00A5               	movwf	___awdiv@divisor+1
 13165  0EE9  084B               	movf	scale@scl,w
 13166  0EEA  00A2               	movwf	___awmod@dividend
 13167  0EEB  01A3               	clrf	___awmod@dividend+1
 13168  0EEC  1BA2               	btfsc	___awmod@dividend,7
 13169  0EED  03A3               	decf	___awmod@dividend+1,f
 13170  0EEE  3064               	movlw	100
 13171  0EEF  00A0               	movwf	___awmod@divisor
 13172  0EF0  3000               	movlw	0
 13173  0EF1  00A1               	movwf	___awmod@divisor+1
 13174  0EF2  3193  23AC  318D   	fcall	___awmod
 13175  0EF5  0140               	movlb	0	; select bank0
 13176  0EF6  0821               	movf	?___awmod+1,w
 13177  0EF7  00A7               	movwf	___awdiv@dividend+1
 13178  0EF8  0820               	movf	?___awmod,w
 13179  0EF9  00A6               	movwf	___awdiv@dividend
 13180  0EFA  3194  2440  318D   	fcall	___awdiv
 13181  0EFD  0140               	movlb	0	; select bank0
 13182  0EFE  0824               	movf	?___awdiv,w
 13183  0EFF  3E09               	addlw	9
 13184  0F00  00AD               	movwf	___wmul@multiplier
 13185  0F01  3000               	movlw	0
 13186  0F02  3D25               	addwfc	?___awdiv+1,w
 13187  0F03  00AE               	movwf	___wmul@multiplier+1
 13188  0F04  3003               	movlw	3
 13189  0F05  00AF               	movwf	___wmul@multiplicand
 13190  0F06  3000               	movlw	0
 13191  0F07  00B0               	movwf	___wmul@multiplicand+1
 13192  0F08  3191  215F  318D   	fcall	___wmul
 13193  0F0B  0140               	movlb	0	; select bank0
 13194  0F0C  082E               	movf	?___wmul+1,w
 13195  0F0D  0085               	movwf	5
 13196  0F0E  082D               	movf	?___wmul,w
 13197  0F0F  0084               	movwf	4
 13198  0F10  30CF               	movlw	low (__powers_| (0+32768))
 13199  0F11  0784               	addwf	4,f
 13200  0F12  3090               	movlw	high (__powers_| (0+32768))
 13201  0F13  3D85               	addwfc	5,f
 13202  0F14  3F00               	moviw [0]fsr0
 13203  0F15  00B3               	movwf	___ftmul@f1
 13204  0F16  3F01               	moviw [1]fsr0
 13205  0F17  00B4               	movwf	___ftmul@f1+1
 13206  0F18  3F02               	moviw [2]fsr0
 13207  0F19  00B5               	movwf	___ftmul@f1+2
 13208  0F1A  3064               	movlw	100
 13209  0F1B  00A4               	movwf	___awdiv@divisor
 13210  0F1C  3000               	movlw	0
 13211  0F1D  00A5               	movwf	___awdiv@divisor+1
 13212  0F1E  084B               	movf	scale@scl,w
 13213  0F1F  00A6               	movwf	___awdiv@dividend
 13214  0F20  01A7               	clrf	___awdiv@dividend+1
 13215  0F21  1BA6               	btfsc	___awdiv@dividend,7
 13216  0F22  03A7               	decf	___awdiv@dividend+1,f
 13217  0F23  3194  2440  318D   	fcall	___awdiv
 13218  0F26  0140               	movlb	0	; select bank0
 13219  0F27  0824               	movf	?___awdiv,w
 13220  0F28  3E12               	addlw	18
 13221  0F29  00AD               	movwf	___wmul@multiplier
 13222  0F2A  3000               	movlw	0
 13223  0F2B  3D25               	addwfc	?___awdiv+1,w
 13224  0F2C  00AE               	movwf	___wmul@multiplier+1
 13225  0F2D  3003               	movlw	3
 13226  0F2E  00AF               	movwf	___wmul@multiplicand
 13227  0F2F  3000               	movlw	0
 13228  0F30  00B0               	movwf	___wmul@multiplicand+1
 13229  0F31  3191  215F  318D   	fcall	___wmul
 13230  0F34  0140               	movlb	0	; select bank0
 13231  0F35  082E               	movf	?___wmul+1,w
 13232  0F36  0085               	movwf	5
 13233  0F37  082D               	movf	?___wmul,w
 13234  0F38  0084               	movwf	4
 13235  0F39  30CF               	movlw	low (__powers_| (0+32768))
 13236  0F3A  0784               	addwf	4,f
 13237  0F3B  3090               	movlw	high (__powers_| (0+32768))
 13238  0F3C  3D85               	addwfc	5,f
 13239  0F3D  3F00               	moviw [0]fsr0
 13240  0F3E  00B6               	movwf	___ftmul@f2
 13241  0F3F  3F01               	moviw [1]fsr0
 13242  0F40  00B7               	movwf	___ftmul@f2+1
 13243  0F41  3F02               	moviw [2]fsr0
 13244  0F42  00B8               	movwf	___ftmul@f2+2
 13245  0F43  3188  20D7  318D   	fcall	___ftmul
 13246  0F46  0140               	movlb	0	; select bank0
 13247  0F47  0833               	movf	?___ftmul,w
 13248  0F48  00C8               	movwf	_scale$2149
 13249  0F49  0834               	movf	?___ftmul+1,w
 13250  0F4A  00C9               	movwf	_scale$2149+1
 13251  0F4B  0835               	movf	?___ftmul+2,w
 13252  0F4C  00CA               	movwf	_scale$2149+2
 13253                           
 13254                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 13255  0F4D  084B               	movf	scale@scl,w
 13256  0F4E  00A2               	movwf	___awmod@dividend
 13257  0F4F  01A3               	clrf	___awmod@dividend+1
 13258  0F50  1BA2               	btfsc	___awmod@dividend,7
 13259  0F51  03A3               	decf	___awmod@dividend+1,f
 13260  0F52  300A               	movlw	10
 13261  0F53  00A0               	movwf	___awmod@divisor
 13262  0F54  3000               	movlw	0
 13263  0F55  00A1               	movwf	___awmod@divisor+1
 13264  0F56  3193  23AC  318D   	fcall	___awmod
 13265  0F59  0140               	movlb	0	; select bank0
 13266  0F5A  0821               	movf	?___awmod+1,w
 13267  0F5B  00AE               	movwf	___wmul@multiplier+1
 13268  0F5C  0820               	movf	?___awmod,w
 13269  0F5D  00AD               	movwf	___wmul@multiplier
 13270  0F5E  3003               	movlw	3
 13271  0F5F  00AF               	movwf	___wmul@multiplicand
 13272  0F60  3000               	movlw	0
 13273  0F61  00B0               	movwf	___wmul@multiplicand+1
 13274  0F62  3191  215F  318D   	fcall	___wmul
 13275  0F65  0140               	movlb	0	; select bank0
 13276  0F66  082E               	movf	?___wmul+1,w
 13277  0F67  0085               	movwf	5
 13278  0F68  082D               	movf	?___wmul,w
 13279  0F69  0084               	movwf	4
 13280  0F6A  30CF               	movlw	low (__powers_| (0+32768))
 13281  0F6B  0784               	addwf	4,f
 13282  0F6C  3090               	movlw	high (__powers_| (0+32768))
 13283  0F6D  3D85               	addwfc	5,f
 13284  0F6E  3F00               	moviw [0]fsr0
 13285  0F6F  00B3               	movwf	___ftmul@f1
 13286  0F70  3F01               	moviw [1]fsr0
 13287  0F71  00B4               	movwf	___ftmul@f1+1
 13288  0F72  3F02               	moviw [2]fsr0
 13289  0F73  00B5               	movwf	___ftmul@f1+2
 13290  0F74  0848               	movf	_scale$2149,w
 13291  0F75  00B6               	movwf	___ftmul@f2
 13292  0F76  0849               	movf	_scale$2149+1,w
 13293  0F77  00B7               	movwf	___ftmul@f2+1
 13294  0F78  084A               	movf	_scale$2149+2,w
 13295  0F79  00B8               	movwf	___ftmul@f2+2
 13296  0F7A  3188  20D7         	fcall	___ftmul
 13297  0F7C  0140               	movlb	0	; select bank0
 13298  0F7D  0833               	movf	?___ftmul,w
 13299  0F7E  00C3               	movwf	?_scale
 13300  0F7F  0834               	movf	?___ftmul+1,w
 13301  0F80  00C4               	movwf	?_scale+1
 13302  0F81  0835               	movf	?___ftmul+2,w
 13303  0F82  00C5               	movwf	?_scale+2
 13304  0F83  0008               	return
 13305  0F84                     l5369:	
 13306                           
 13307                           ;doprnt.c: 438: else if(scl > 10)
 13308  0F84  084B               	movf	scale@scl,w
 13309  0F85  3A80               	xorlw	128
 13310  0F86  3E75               	addlw	-139
 13311  0F87  1C03               	skipc
 13312  0F88  2FE3               	goto	l5375
 13313                           
 13314                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 13315  0F89  084B               	movf	scale@scl,w
 13316  0F8A  00A2               	movwf	___awmod@dividend
 13317  0F8B  01A3               	clrf	___awmod@dividend+1
 13318  0F8C  1BA2               	btfsc	___awmod@dividend,7
 13319  0F8D  03A3               	decf	___awmod@dividend+1,f
 13320  0F8E  300A               	movlw	10
 13321  0F8F  00A0               	movwf	___awmod@divisor
 13322  0F90  3000               	movlw	0
 13323  0F91  00A1               	movwf	___awmod@divisor+1
 13324  0F92  3193  23AC  318D   	fcall	___awmod
 13325  0F95  0140               	movlb	0	; select bank0
 13326  0F96  0821               	movf	?___awmod+1,w
 13327  0F97  00AE               	movwf	___wmul@multiplier+1
 13328  0F98  0820               	movf	?___awmod,w
 13329  0F99  00AD               	movwf	___wmul@multiplier
 13330  0F9A  3003               	movlw	3
 13331  0F9B  00AF               	movwf	___wmul@multiplicand
 13332  0F9C  3000               	movlw	0
 13333  0F9D  00B0               	movwf	___wmul@multiplicand+1
 13334  0F9E  3191  215F  318D   	fcall	___wmul
 13335  0FA1  0140               	movlb	0	; select bank0
 13336  0FA2  082E               	movf	?___wmul+1,w
 13337  0FA3  0085               	movwf	5
 13338  0FA4  082D               	movf	?___wmul,w
 13339  0FA5  0084               	movwf	4
 13340  0FA6  30CF               	movlw	low (__powers_| (0+32768))
 13341  0FA7  0784               	addwf	4,f
 13342  0FA8  3090               	movlw	high (__powers_| (0+32768))
 13343  0FA9  3D85               	addwfc	5,f
 13344  0FAA  3F00               	moviw [0]fsr0
 13345  0FAB  00B3               	movwf	___ftmul@f1
 13346  0FAC  3F01               	moviw [1]fsr0
 13347  0FAD  00B4               	movwf	___ftmul@f1+1
 13348  0FAE  3F02               	moviw [2]fsr0
 13349  0FAF  00B5               	movwf	___ftmul@f1+2
 13350  0FB0  300A               	movlw	10
 13351  0FB1  00A4               	movwf	___awdiv@divisor
 13352  0FB2  3000               	movlw	0
 13353  0FB3  00A5               	movwf	___awdiv@divisor+1
 13354  0FB4  084B               	movf	scale@scl,w
 13355  0FB5  00A6               	movwf	___awdiv@dividend
 13356  0FB6  01A7               	clrf	___awdiv@dividend+1
 13357  0FB7  1BA6               	btfsc	___awdiv@dividend,7
 13358  0FB8  03A7               	decf	___awdiv@dividend+1,f
 13359  0FB9  3194  2440  318D   	fcall	___awdiv
 13360  0FBC  0140               	movlb	0	; select bank0
 13361  0FBD  0824               	movf	?___awdiv,w
 13362  0FBE  3E09               	addlw	9
 13363  0FBF  00AD               	movwf	___wmul@multiplier
 13364  0FC0  3000               	movlw	0
 13365  0FC1  3D25               	addwfc	?___awdiv+1,w
 13366  0FC2  00AE               	movwf	___wmul@multiplier+1
 13367  0FC3  3003               	movlw	3
 13368  0FC4  00AF               	movwf	___wmul@multiplicand
 13369  0FC5  3000               	movlw	0
 13370  0FC6  00B0               	movwf	___wmul@multiplicand+1
 13371  0FC7  3191  215F  318D   	fcall	___wmul
 13372  0FCA  0140               	movlb	0	; select bank0
 13373  0FCB  082E               	movf	?___wmul+1,w
 13374  0FCC  0085               	movwf	5
 13375  0FCD  082D               	movf	?___wmul,w
 13376  0FCE  0084               	movwf	4
 13377  0FCF  30CF               	movlw	low (__powers_| (0+32768))
 13378  0FD0  0784               	addwf	4,f
 13379  0FD1  3090               	movlw	high (__powers_| (0+32768))
 13380  0FD2  3D85               	addwfc	5,f
 13381  0FD3  3F00               	moviw [0]fsr0
 13382  0FD4  00B6               	movwf	___ftmul@f2
 13383  0FD5  3F01               	moviw [1]fsr0
 13384  0FD6  00B7               	movwf	___ftmul@f2+1
 13385  0FD7  3F02               	moviw [2]fsr0
 13386  0FD8  00B8               	movwf	___ftmul@f2+2
 13387  0FD9  3188  20D7         	fcall	___ftmul
 13388  0FDB  0140               	movlb	0	; select bank0
 13389  0FDC  0833               	movf	?___ftmul,w
 13390  0FDD  00C3               	movwf	?_scale
 13391  0FDE  0834               	movf	?___ftmul+1,w
 13392  0FDF  00C4               	movwf	?_scale+1
 13393  0FE0  0835               	movf	?___ftmul+2,w
 13394  0FE1  00C5               	movwf	?_scale+2
 13395  0FE2  0008               	return
 13396  0FE3                     l5375:	
 13397                           
 13398                           ;doprnt.c: 440: return _powers_[scl];
 13399  0FE3  084B               	movf	scale@scl,w
 13400  0FE4  00C6               	movwf	??_scale
 13401  0FE5  01C7               	clrf	??_scale+1
 13402  0FE6  0846               	movf	??_scale,w
 13403  0FE7  00AD               	movwf	___wmul@multiplier
 13404  0FE8  0847               	movf	??_scale+1,w
 13405  0FE9  00AE               	movwf	___wmul@multiplier+1
 13406  0FEA  3003               	movlw	3
 13407  0FEB  00AF               	movwf	___wmul@multiplicand
 13408  0FEC  3000               	movlw	0
 13409  0FED  00B0               	movwf	___wmul@multiplicand+1
 13410  0FEE  3191  215F         	fcall	___wmul
 13411  0FF0  0140               	movlb	0	; select bank0
 13412  0FF1  082E               	movf	?___wmul+1,w
 13413  0FF2  0085               	movwf	5
 13414  0FF3  082D               	movf	?___wmul,w
 13415  0FF4  0084               	movwf	4
 13416  0FF5  30CF               	movlw	low (__powers_| (0+32768))
 13417  0FF6  0784               	addwf	4,f
 13418  0FF7  3090               	movlw	high (__powers_| (0+32768))
 13419  0FF8  3D85               	addwfc	5,f
 13420  0FF9  3F00               	moviw [0]fsr0
 13421  0FFA  00C3               	movwf	?_scale
 13422  0FFB  3F01               	moviw [1]fsr0
 13423  0FFC  00C4               	movwf	?_scale+1
 13424  0FFD  3F02               	moviw [2]fsr0
 13425  0FFE  00C5               	movwf	?_scale+2
 13426  0FFF  0008               	return
 13427  1000                     __end_of_scale:	
 13428                           
 13429                           	psect	text43
 13430  1E3E                     __ptext43:	
 13431 ;; *************** function _isdigit *****************
 13432 ;; Defined at:
 13433 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  c               1    wreg     unsigned char 
 13436 ;; Auto vars:     Size  Location     Type
 13437 ;;  c               1    5[COMMON] unsigned char 
 13438 ;; Return value:  Size  Location     Type
 13439 ;;		None               void
 13440 ;; Registers used:
 13441 ;;		wreg, status,2, status,0
 13442 ;; Tracked objects:
 13443 ;;		On entry : 0/0
 13444 ;;		On exit  : 0/0
 13445 ;;		Unchanged: 0/0
 13446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13451 ;;Total ram usage:        2 bytes
 13452 ;; Hardware stack levels used:    1
 13453 ;; Hardware stack levels required when called:    3
 13454 ;; This function calls:
 13455 ;;		Nothing
 13456 ;; This function is called by:
 13457 ;;		_sprintf
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           
 13462                           ;psect for function _isdigit
 13463  1E3E                     _isdigit:	
 13464                           
 13465                           ;incstack = 0
 13466                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13467                           ;isdigit@c stored from wreg
 13468  1E3E  00F5               	movwf	isdigit@c
 13469  1E3F  01F4               	clrf	_isdigit$1869
 13470  1E40  303A               	movlw	58
 13471  1E41  0275               	subwf	isdigit@c,w
 13472  1E42  1803               	skipnc
 13473  1E43  2E4A               	goto	l5387
 13474  1E44  3030               	movlw	48
 13475  1E45  0275               	subwf	isdigit@c,w
 13476  1E46  1C03               	skipc
 13477  1E47  2E4A               	goto	l5387
 13478  1E48  01F4               	clrf	_isdigit$1869
 13479  1E49  0AF4               	incf	_isdigit$1869,f
 13480  1E4A                     l5387:	
 13481  1E4A  0C74               	rrf	_isdigit$1869,w
 13482  1E4B  0008               	return
 13483  1E4C                     __end_of_isdigit:	
 13484                           
 13485                           	psect	text44
 13486  0C54                     __ptext44:	
 13487 ;; *************** function _fround *****************
 13488 ;; Defined at:
 13489 ;;		line 409 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;  prec            1    wreg     unsigned char 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  prec            1   48[BANK0 ] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  3   35[BANK0 ] unsigned char 
 13496 ;; Registers used:
 13497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13503 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13504 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13505 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13506 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13507 ;;Total ram usage:       14 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    5
 13510 ;; This function calls:
 13511 ;;		___awdiv
 13512 ;;		___awmod
 13513 ;;		___ftmul
 13514 ;;		___wmul
 13515 ;; This function is called by:
 13516 ;;		_sprintf
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520                           
 13521                           ;psect for function _fround
 13522  0C54                     _fround:	
 13523                           
 13524                           ;incstack = 0
 13525                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13526                           ;fround@prec stored from wreg
 13527  0C54  0140               	movlb	0	; select bank0
 13528  0C55  00D0               	movwf	fround@prec
 13529                           
 13530                           ;doprnt.c: 413: if(prec>=110)
 13531  0C56  306E               	movlw	110
 13532  0C57  0250               	subwf	fround@prec,w
 13533  0C58  1C03               	skipc
 13534  0C59  2D15               	goto	l5327
 13535                           
 13536                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13537  0C5A  300A               	movlw	10
 13538  0C5B  00A4               	movwf	___awdiv@divisor
 13539  0C5C  3000               	movlw	0
 13540  0C5D  00A5               	movwf	___awdiv@divisor+1
 13541  0C5E  0850               	movf	fround@prec,w
 13542  0C5F  00C6               	movwf	??_fround
 13543  0C60  01C7               	clrf	??_fround+1
 13544  0C61  0846               	movf	??_fround,w
 13545  0C62  00A2               	movwf	___awmod@dividend
 13546  0C63  0847               	movf	??_fround+1,w
 13547  0C64  00A3               	movwf	___awmod@dividend+1
 13548  0C65  3064               	movlw	100
 13549  0C66  00A0               	movwf	___awmod@divisor
 13550  0C67  3000               	movlw	0
 13551  0C68  00A1               	movwf	___awmod@divisor+1
 13552  0C69  3193  23AC  318C   	fcall	___awmod
 13553  0C6C  0140               	movlb	0	; select bank0
 13554  0C6D  0821               	movf	?___awmod+1,w
 13555  0C6E  00A7               	movwf	___awdiv@dividend+1
 13556  0C6F  0820               	movf	?___awmod,w
 13557  0C70  00A6               	movwf	___awdiv@dividend
 13558  0C71  3194  2440  318C   	fcall	___awdiv
 13559  0C74  0140               	movlb	0	; select bank0
 13560  0C75  0824               	movf	?___awdiv,w
 13561  0C76  3E09               	addlw	9
 13562  0C77  00AD               	movwf	___wmul@multiplier
 13563  0C78  3000               	movlw	0
 13564  0C79  3D25               	addwfc	?___awdiv+1,w
 13565  0C7A  00AE               	movwf	___wmul@multiplier+1
 13566  0C7B  3003               	movlw	3
 13567  0C7C  00AF               	movwf	___wmul@multiplicand
 13568  0C7D  3000               	movlw	0
 13569  0C7E  00B0               	movwf	___wmul@multiplicand+1
 13570  0C7F  3191  215F  318C   	fcall	___wmul
 13571  0C82  0140               	movlb	0	; select bank0
 13572  0C83  082E               	movf	?___wmul+1,w
 13573  0C84  0085               	movwf	5
 13574  0C85  082D               	movf	?___wmul,w
 13575  0C86  0084               	movwf	4
 13576  0C87  30A8               	movlw	low (__npowers_| (0+32768))
 13577  0C88  0784               	addwf	4,f
 13578  0C89  3090               	movlw	high (__npowers_| (0+32768))
 13579  0C8A  3D85               	addwfc	5,f
 13580  0C8B  3F00               	moviw [0]fsr0
 13581  0C8C  00B3               	movwf	___ftmul@f1
 13582  0C8D  3F01               	moviw [1]fsr0
 13583  0C8E  00B4               	movwf	___ftmul@f1+1
 13584  0C8F  3F02               	moviw [2]fsr0
 13585  0C90  00B5               	movwf	___ftmul@f1+2
 13586  0C91  3064               	movlw	100
 13587  0C92  00A4               	movwf	___awdiv@divisor
 13588  0C93  3000               	movlw	0
 13589  0C94  00A5               	movwf	___awdiv@divisor+1
 13590  0C95  0850               	movf	fround@prec,w
 13591  0C96  00C8               	movwf	??_fround+2
 13592  0C97  01C9               	clrf	??_fround+3
 13593  0C98  0848               	movf	??_fround+2,w
 13594  0C99  00A6               	movwf	___awdiv@dividend
 13595  0C9A  0849               	movf	??_fround+3,w
 13596  0C9B  00A7               	movwf	___awdiv@dividend+1
 13597  0C9C  3194  2440  318C   	fcall	___awdiv
 13598  0C9F  0140               	movlb	0	; select bank0
 13599  0CA0  0824               	movf	?___awdiv,w
 13600  0CA1  3E12               	addlw	18
 13601  0CA2  00AD               	movwf	___wmul@multiplier
 13602  0CA3  3000               	movlw	0
 13603  0CA4  3D25               	addwfc	?___awdiv+1,w
 13604  0CA5  00AE               	movwf	___wmul@multiplier+1
 13605  0CA6  3003               	movlw	3
 13606  0CA7  00AF               	movwf	___wmul@multiplicand
 13607  0CA8  3000               	movlw	0
 13608  0CA9  00B0               	movwf	___wmul@multiplicand+1
 13609  0CAA  3191  215F  318C   	fcall	___wmul
 13610  0CAD  0140               	movlb	0	; select bank0
 13611  0CAE  082E               	movf	?___wmul+1,w
 13612  0CAF  0085               	movwf	5
 13613  0CB0  082D               	movf	?___wmul,w
 13614  0CB1  0084               	movwf	4
 13615  0CB2  30A8               	movlw	low (__npowers_| (0+32768))
 13616  0CB3  0784               	addwf	4,f
 13617  0CB4  3090               	movlw	high (__npowers_| (0+32768))
 13618  0CB5  3D85               	addwfc	5,f
 13619  0CB6  3F00               	moviw [0]fsr0
 13620  0CB7  00B6               	movwf	___ftmul@f2
 13621  0CB8  3F01               	moviw [1]fsr0
 13622  0CB9  00B7               	movwf	___ftmul@f2+1
 13623  0CBA  3F02               	moviw [2]fsr0
 13624  0CBB  00B8               	movwf	___ftmul@f2+2
 13625  0CBC  3188  20D7  318C   	fcall	___ftmul
 13626  0CBF  0140               	movlb	0	; select bank0
 13627  0CC0  0833               	movf	?___ftmul,w
 13628  0CC1  00CD               	movwf	_fround$2147
 13629  0CC2  0834               	movf	?___ftmul+1,w
 13630  0CC3  00CE               	movwf	_fround$2147+1
 13631  0CC4  0835               	movf	?___ftmul+2,w
 13632  0CC5  00CF               	movwf	_fround$2147+2
 13633                           
 13634                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13635  0CC6  0850               	movf	fround@prec,w
 13636  0CC7  00C6               	movwf	??_fround
 13637  0CC8  01C7               	clrf	??_fround+1
 13638  0CC9  0846               	movf	??_fround,w
 13639  0CCA  00A2               	movwf	___awmod@dividend
 13640  0CCB  0847               	movf	??_fround+1,w
 13641  0CCC  00A3               	movwf	___awmod@dividend+1
 13642  0CCD  300A               	movlw	10
 13643  0CCE  00A0               	movwf	___awmod@divisor
 13644  0CCF  3000               	movlw	0
 13645  0CD0  00A1               	movwf	___awmod@divisor+1
 13646  0CD1  3193  23AC  318C   	fcall	___awmod
 13647  0CD4  0140               	movlb	0	; select bank0
 13648  0CD5  0821               	movf	?___awmod+1,w
 13649  0CD6  00AE               	movwf	___wmul@multiplier+1
 13650  0CD7  0820               	movf	?___awmod,w
 13651  0CD8  00AD               	movwf	___wmul@multiplier
 13652  0CD9  3003               	movlw	3
 13653  0CDA  00AF               	movwf	___wmul@multiplicand
 13654  0CDB  3000               	movlw	0
 13655  0CDC  00B0               	movwf	___wmul@multiplicand+1
 13656  0CDD  3191  215F  318C   	fcall	___wmul
 13657  0CE0  0140               	movlb	0	; select bank0
 13658  0CE1  082E               	movf	?___wmul+1,w
 13659  0CE2  0085               	movwf	5
 13660  0CE3  082D               	movf	?___wmul,w
 13661  0CE4  0084               	movwf	4
 13662  0CE5  30A8               	movlw	low (__npowers_| (0+32768))
 13663  0CE6  0784               	addwf	4,f
 13664  0CE7  3090               	movlw	high (__npowers_| (0+32768))
 13665  0CE8  3D85               	addwfc	5,f
 13666  0CE9  3F00               	moviw [0]fsr0
 13667  0CEA  00B3               	movwf	___ftmul@f1
 13668  0CEB  3F01               	moviw [1]fsr0
 13669  0CEC  00B4               	movwf	___ftmul@f1+1
 13670  0CED  3F02               	moviw [2]fsr0
 13671  0CEE  00B5               	movwf	___ftmul@f1+2
 13672  0CEF  084D               	movf	_fround$2147,w
 13673  0CF0  00B6               	movwf	___ftmul@f2
 13674  0CF1  084E               	movf	_fround$2147+1,w
 13675  0CF2  00B7               	movwf	___ftmul@f2+1
 13676  0CF3  084F               	movf	_fround$2147+2,w
 13677  0CF4  00B8               	movwf	___ftmul@f2+2
 13678  0CF5  3188  20D7  318C   	fcall	___ftmul
 13679  0CF8  0140               	movlb	0	; select bank0
 13680  0CF9  0833               	movf	?___ftmul,w
 13681  0CFA  00CA               	movwf	_fround$2148
 13682  0CFB  0834               	movf	?___ftmul+1,w
 13683  0CFC  00CB               	movwf	_fround$2148+1
 13684  0CFD  0835               	movf	?___ftmul+2,w
 13685  0CFE  00CC               	movwf	_fround$2148+2
 13686                           
 13687                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 13688  0CFF  3000               	movlw	0
 13689  0D00  00B3               	movwf	___ftmul@f1
 13690  0D01  3000               	movlw	0
 13691  0D02  00B4               	movwf	___ftmul@f1+1
 13692  0D03  303F               	movlw	63
 13693  0D04  00B5               	movwf	___ftmul@f1+2
 13694  0D05  084A               	movf	_fround$2148,w
 13695  0D06  00B6               	movwf	___ftmul@f2
 13696  0D07  084B               	movf	_fround$2148+1,w
 13697  0D08  00B7               	movwf	___ftmul@f2+1
 13698  0D09  084C               	movf	_fround$2148+2,w
 13699  0D0A  00B8               	movwf	___ftmul@f2+2
 13700  0D0B  3188  20D7         	fcall	___ftmul
 13701  0D0D  0140               	movlb	0	; select bank0
 13702  0D0E  0833               	movf	?___ftmul,w
 13703  0D0F  00C3               	movwf	?_fround
 13704  0D10  0834               	movf	?___ftmul+1,w
 13705  0D11  00C4               	movwf	?_fround+1
 13706  0D12  0835               	movf	?___ftmul+2,w
 13707  0D13  00C5               	movwf	?_fround+2
 13708  0D14  0008               	return
 13709  0D15                     l5327:	
 13710                           
 13711                           ;doprnt.c: 415: else if(prec > 10)
 13712  0D15  300B               	movlw	11
 13713  0D16  0250               	subwf	fround@prec,w
 13714  0D17  1C03               	skipc
 13715  0D18  2D8D               	goto	l5335
 13716                           
 13717                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13718  0D19  0850               	movf	fround@prec,w
 13719  0D1A  00C6               	movwf	??_fround
 13720  0D1B  01C7               	clrf	??_fround+1
 13721  0D1C  0846               	movf	??_fround,w
 13722  0D1D  00A2               	movwf	___awmod@dividend
 13723  0D1E  0847               	movf	??_fround+1,w
 13724  0D1F  00A3               	movwf	___awmod@dividend+1
 13725  0D20  300A               	movlw	10
 13726  0D21  00A0               	movwf	___awmod@divisor
 13727  0D22  3000               	movlw	0
 13728  0D23  00A1               	movwf	___awmod@divisor+1
 13729  0D24  3193  23AC  318C   	fcall	___awmod
 13730  0D27  0140               	movlb	0	; select bank0
 13731  0D28  0821               	movf	?___awmod+1,w
 13732  0D29  00AE               	movwf	___wmul@multiplier+1
 13733  0D2A  0820               	movf	?___awmod,w
 13734  0D2B  00AD               	movwf	___wmul@multiplier
 13735  0D2C  3003               	movlw	3
 13736  0D2D  00AF               	movwf	___wmul@multiplicand
 13737  0D2E  3000               	movlw	0
 13738  0D2F  00B0               	movwf	___wmul@multiplicand+1
 13739  0D30  3191  215F  318C   	fcall	___wmul
 13740  0D33  0140               	movlb	0	; select bank0
 13741  0D34  082E               	movf	?___wmul+1,w
 13742  0D35  0085               	movwf	5
 13743  0D36  082D               	movf	?___wmul,w
 13744  0D37  0084               	movwf	4
 13745  0D38  30A8               	movlw	low (__npowers_| (0+32768))
 13746  0D39  0784               	addwf	4,f
 13747  0D3A  3090               	movlw	high (__npowers_| (0+32768))
 13748  0D3B  3D85               	addwfc	5,f
 13749  0D3C  3F00               	moviw [0]fsr0
 13750  0D3D  00B3               	movwf	___ftmul@f1
 13751  0D3E  3F01               	moviw [1]fsr0
 13752  0D3F  00B4               	movwf	___ftmul@f1+1
 13753  0D40  3F02               	moviw [2]fsr0
 13754  0D41  00B5               	movwf	___ftmul@f1+2
 13755  0D42  300A               	movlw	10
 13756  0D43  00A4               	movwf	___awdiv@divisor
 13757  0D44  3000               	movlw	0
 13758  0D45  00A5               	movwf	___awdiv@divisor+1
 13759  0D46  0850               	movf	fround@prec,w
 13760  0D47  00C8               	movwf	??_fround+2
 13761  0D48  01C9               	clrf	??_fround+3
 13762  0D49  0848               	movf	??_fround+2,w
 13763  0D4A  00A6               	movwf	___awdiv@dividend
 13764  0D4B  0849               	movf	??_fround+3,w
 13765  0D4C  00A7               	movwf	___awdiv@dividend+1
 13766  0D4D  3194  2440  318C   	fcall	___awdiv
 13767  0D50  0140               	movlb	0	; select bank0
 13768  0D51  0824               	movf	?___awdiv,w
 13769  0D52  3E09               	addlw	9
 13770  0D53  00AD               	movwf	___wmul@multiplier
 13771  0D54  3000               	movlw	0
 13772  0D55  3D25               	addwfc	?___awdiv+1,w
 13773  0D56  00AE               	movwf	___wmul@multiplier+1
 13774  0D57  3003               	movlw	3
 13775  0D58  00AF               	movwf	___wmul@multiplicand
 13776  0D59  3000               	movlw	0
 13777  0D5A  00B0               	movwf	___wmul@multiplicand+1
 13778  0D5B  3191  215F  318C   	fcall	___wmul
 13779  0D5E  0140               	movlb	0	; select bank0
 13780  0D5F  082E               	movf	?___wmul+1,w
 13781  0D60  0085               	movwf	5
 13782  0D61  082D               	movf	?___wmul,w
 13783  0D62  0084               	movwf	4
 13784  0D63  30A8               	movlw	low (__npowers_| (0+32768))
 13785  0D64  0784               	addwf	4,f
 13786  0D65  3090               	movlw	high (__npowers_| (0+32768))
 13787  0D66  3D85               	addwfc	5,f
 13788  0D67  3F00               	moviw [0]fsr0
 13789  0D68  00B6               	movwf	___ftmul@f2
 13790  0D69  3F01               	moviw [1]fsr0
 13791  0D6A  00B7               	movwf	___ftmul@f2+1
 13792  0D6B  3F02               	moviw [2]fsr0
 13793  0D6C  00B8               	movwf	___ftmul@f2+2
 13794  0D6D  3188  20D7  318C   	fcall	___ftmul
 13795  0D70  0140               	movlb	0	; select bank0
 13796  0D71  0833               	movf	?___ftmul,w
 13797  0D72  00CD               	movwf	_fround$2147
 13798  0D73  0834               	movf	?___ftmul+1,w
 13799  0D74  00CE               	movwf	_fround$2147+1
 13800  0D75  0835               	movf	?___ftmul+2,w
 13801  0D76  00CF               	movwf	_fround$2147+2
 13802                           
 13803                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 13804  0D77  3000               	movlw	0
 13805  0D78  00B3               	movwf	___ftmul@f1
 13806  0D79  3000               	movlw	0
 13807  0D7A  00B4               	movwf	___ftmul@f1+1
 13808  0D7B  303F               	movlw	63
 13809  0D7C  00B5               	movwf	___ftmul@f1+2
 13810  0D7D  084D               	movf	_fround$2147,w
 13811  0D7E  00B6               	movwf	___ftmul@f2
 13812  0D7F  084E               	movf	_fround$2147+1,w
 13813  0D80  00B7               	movwf	___ftmul@f2+1
 13814  0D81  084F               	movf	_fround$2147+2,w
 13815  0D82  00B8               	movwf	___ftmul@f2+2
 13816  0D83  3188  20D7         	fcall	___ftmul
 13817  0D85  0140               	movlb	0	; select bank0
 13818  0D86  0833               	movf	?___ftmul,w
 13819  0D87  00C3               	movwf	?_fround
 13820  0D88  0834               	movf	?___ftmul+1,w
 13821  0D89  00C4               	movwf	?_fround+1
 13822  0D8A  0835               	movf	?___ftmul+2,w
 13823  0D8B  00C5               	movwf	?_fround+2
 13824  0D8C  0008               	return
 13825  0D8D                     l5335:	
 13826                           
 13827                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 13828  0D8D  3000               	movlw	0
 13829  0D8E  00B3               	movwf	___ftmul@f1
 13830  0D8F  3000               	movlw	0
 13831  0D90  00B4               	movwf	___ftmul@f1+1
 13832  0D91  303F               	movlw	63
 13833  0D92  00B5               	movwf	___ftmul@f1+2
 13834  0D93  0850               	movf	fround@prec,w
 13835  0D94  00C6               	movwf	??_fround
 13836  0D95  01C7               	clrf	??_fround+1
 13837  0D96  0846               	movf	??_fround,w
 13838  0D97  00AD               	movwf	___wmul@multiplier
 13839  0D98  0847               	movf	??_fround+1,w
 13840  0D99  00AE               	movwf	___wmul@multiplier+1
 13841  0D9A  3003               	movlw	3
 13842  0D9B  00AF               	movwf	___wmul@multiplicand
 13843  0D9C  3000               	movlw	0
 13844  0D9D  00B0               	movwf	___wmul@multiplicand+1
 13845  0D9E  3191  215F  318C   	fcall	___wmul
 13846  0DA1  0140               	movlb	0	; select bank0
 13847  0DA2  082E               	movf	?___wmul+1,w
 13848  0DA3  0085               	movwf	5
 13849  0DA4  082D               	movf	?___wmul,w
 13850  0DA5  0084               	movwf	4
 13851  0DA6  30A8               	movlw	low (__npowers_| (0+32768))
 13852  0DA7  0784               	addwf	4,f
 13853  0DA8  3090               	movlw	high (__npowers_| (0+32768))
 13854  0DA9  3D85               	addwfc	5,f
 13855  0DAA  3F00               	moviw [0]fsr0
 13856  0DAB  00B6               	movwf	___ftmul@f2
 13857  0DAC  3F01               	moviw [1]fsr0
 13858  0DAD  00B7               	movwf	___ftmul@f2+1
 13859  0DAE  3F02               	moviw [2]fsr0
 13860  0DAF  00B8               	movwf	___ftmul@f2+2
 13861  0DB0  3188  20D7         	fcall	___ftmul
 13862  0DB2  0140               	movlb	0	; select bank0
 13863  0DB3  0833               	movf	?___ftmul,w
 13864  0DB4  00C3               	movwf	?_fround
 13865  0DB5  0834               	movf	?___ftmul+1,w
 13866  0DB6  00C4               	movwf	?_fround+1
 13867  0DB7  0835               	movf	?___ftmul+2,w
 13868  0DB8  00C5               	movwf	?_fround+2
 13869  0DB9  0008               	return
 13870  0DBA                     __end_of_fround:	
 13871                           
 13872                           	psect	text45
 13873  115F                     __ptext45:	
 13874 ;; *************** function ___wmul *****************
 13875 ;; Defined at:
 13876 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;  multiplier      2   13[BANK0 ] unsigned int 
 13879 ;;  multiplicand    2   15[BANK0 ] unsigned int 
 13880 ;; Auto vars:     Size  Location     Type
 13881 ;;  product         2   17[BANK0 ] unsigned int 
 13882 ;; Return value:  Size  Location     Type
 13883 ;;                  2   13[BANK0 ] unsigned int 
 13884 ;; Registers used:
 13885 ;;		wreg, status,2, status,0
 13886 ;; Tracked objects:
 13887 ;;		On entry : 0/0
 13888 ;;		On exit  : 0/0
 13889 ;;		Unchanged: 0/0
 13890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13892 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13894 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13895 ;;Total ram usage:        6 bytes
 13896 ;; Hardware stack levels used:    1
 13897 ;; Hardware stack levels required when called:    3
 13898 ;; This function calls:
 13899 ;;		Nothing
 13900 ;; This function is called by:
 13901 ;;		_fround
 13902 ;;		_scale
 13903 ;;		_sprintf
 13904 ;; This function uses a non-reentrant model
 13905 ;;
 13906                           
 13907                           
 13908                           ;psect for function ___wmul
 13909  115F                     ___wmul:	
 13910                           
 13911                           ;incstack = 0
 13912                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13913  115F  0140               	movlb	0	; select bank0
 13914  1160  01B1               	clrf	___wmul@product
 13915  1161  01B2               	clrf	___wmul@product+1
 13916  1162                     l4981:	
 13917  1162  1C2D               	btfss	___wmul@multiplier,0
 13918  1163  2968               	goto	l1044
 13919  1164  082F               	movf	___wmul@multiplicand,w
 13920  1165  07B1               	addwf	___wmul@product,f
 13921  1166  0830               	movf	___wmul@multiplicand+1,w
 13922  1167  3DB2               	addwfc	___wmul@product+1,f
 13923  1168                     l1044:	
 13924  1168  3001               	movlw	1
 13925  1169                     u5325:	
 13926  1169  35AF               	lslf	___wmul@multiplicand,f
 13927  116A  0DB0               	rlf	___wmul@multiplicand+1,f
 13928  116B  0B89               	decfsz	9,f
 13929  116C  2969               	goto	u5325
 13930  116D  3001               	movlw	1
 13931  116E                     u5335:	
 13932  116E  36AE               	lsrf	___wmul@multiplier+1,f
 13933  116F  0CAD               	rrf	___wmul@multiplier,f
 13934  1170  0B89               	decfsz	9,f
 13935  1171  296E               	goto	u5335
 13936  1172  082D               	movf	___wmul@multiplier,w
 13937  1173  042E               	iorwf	___wmul@multiplier+1,w
 13938  1174  1D03               	btfss	3,2
 13939  1175  2962               	goto	l4981
 13940  1176  0832               	movf	___wmul@product+1,w
 13941  1177  00AE               	movwf	?___wmul+1
 13942  1178  0831               	movf	___wmul@product,w
 13943  1179  00AD               	movwf	?___wmul
 13944  117A  0008               	return
 13945  117B                     __end_of___wmul:	
 13946                           
 13947                           	psect	text46
 13948  08D7                     __ptext46:	
 13949 ;; *************** function ___ftmul *****************
 13950 ;; Defined at:
 13951 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;  f1              3   19[BANK0 ] float 
 13954 ;;  f2              3   22[BANK0 ] float 
 13955 ;; Auto vars:     Size  Location     Type
 13956 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
 13957 ;;  sign            1   34[BANK0 ] unsigned char 
 13958 ;;  cntr            1   33[BANK0 ] unsigned char 
 13959 ;;  exp             1   29[BANK0 ] unsigned char 
 13960 ;; Return value:  Size  Location     Type
 13961 ;;                  3   19[BANK0 ] float 
 13962 ;; Registers used:
 13963 ;;		wreg, status,2, status,0, pclath, cstack
 13964 ;; Tracked objects:
 13965 ;;		On entry : 0/0
 13966 ;;		On exit  : 0/0
 13967 ;;		Unchanged: 0/0
 13968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13970 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13972 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13973 ;;Total ram usage:       16 bytes
 13974 ;; Hardware stack levels used:    1
 13975 ;; Hardware stack levels required when called:    4
 13976 ;; This function calls:
 13977 ;;		___ftpack
 13978 ;; This function is called by:
 13979 ;;		_measureInput
 13980 ;;		_measureTemp
 13981 ;;		_printCapa
 13982 ;;		_fround
 13983 ;;		_scale
 13984 ;;		_sprintf
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           
 13989                           ;psect for function ___ftmul
 13990  08D7                     ___ftmul:	
 13991                           
 13992                           ;incstack = 0
 13993                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13994  08D7  0140               	movlb	0	; select bank0
 13995  08D8  0833               	movf	___ftmul@f1,w
 13996  08D9  00B9               	movwf	??___ftmul
 13997  08DA  0834               	movf	___ftmul@f1+1,w
 13998  08DB  00BA               	movwf	??___ftmul+1
 13999  08DC  0835               	movf	___ftmul@f1+2,w
 14000  08DD  00BB               	movwf	??___ftmul+2
 14001  08DE  1003               	clrc
 14002  08DF  0D3A               	rlf	??___ftmul+1,w
 14003  08E0  0D3B               	rlf	??___ftmul+2,w
 14004  08E1  00BC               	movwf	??___ftmul+3
 14005  08E2  083C               	movf	??___ftmul+3,w
 14006  08E3  00BD               	movwf	___ftmul@exp
 14007  08E4  083D               	movf	___ftmul@exp,w
 14008  08E5  1D03               	btfss	3,2
 14009  08E6  28EE               	goto	l5151
 14010  08E7  3000               	movlw	0
 14011  08E8  00B3               	movwf	?___ftmul
 14012  08E9  3000               	movlw	0
 14013  08EA  00B4               	movwf	?___ftmul+1
 14014  08EB  3000               	movlw	0
 14015  08EC  00B5               	movwf	?___ftmul+2
 14016  08ED  0008               	return
 14017  08EE                     l5151:	
 14018  08EE  0836               	movf	___ftmul@f2,w
 14019  08EF  00B9               	movwf	??___ftmul
 14020  08F0  0837               	movf	___ftmul@f2+1,w
 14021  08F1  00BA               	movwf	??___ftmul+1
 14022  08F2  0838               	movf	___ftmul@f2+2,w
 14023  08F3  00BB               	movwf	??___ftmul+2
 14024  08F4  1003               	clrc
 14025  08F5  0D3A               	rlf	??___ftmul+1,w
 14026  08F6  0D3B               	rlf	??___ftmul+2,w
 14027  08F7  00BC               	movwf	??___ftmul+3
 14028  08F8  083C               	movf	??___ftmul+3,w
 14029  08F9  00C2               	movwf	___ftmul@sign
 14030  08FA  0842               	movf	___ftmul@sign,w
 14031  08FB  1D03               	btfss	3,2
 14032  08FC  2904               	goto	l5157
 14033  08FD  3000               	movlw	0
 14034  08FE  00B3               	movwf	?___ftmul
 14035  08FF  3000               	movlw	0
 14036  0900  00B4               	movwf	?___ftmul+1
 14037  0901  3000               	movlw	0
 14038  0902  00B5               	movwf	?___ftmul+2
 14039  0903  0008               	return
 14040  0904                     l5157:	
 14041  0904  0842               	movf	___ftmul@sign,w
 14042  0905  3E7B               	addlw	123
 14043  0906  00B9               	movwf	??___ftmul
 14044  0907  0839               	movf	??___ftmul,w
 14045  0908  07BD               	addwf	___ftmul@exp,f
 14046  0909  0833               	movf	___ftmul@f1,w
 14047  090A  00B9               	movwf	??___ftmul
 14048  090B  0834               	movf	___ftmul@f1+1,w
 14049  090C  00BA               	movwf	??___ftmul+1
 14050  090D  0835               	movf	___ftmul@f1+2,w
 14051  090E  00BB               	movwf	??___ftmul+2
 14052  090F  3010               	movlw	16
 14053  0910                     u5795:	
 14054  0910  36BB               	lsrf	??___ftmul+2,f
 14055  0911  0CBA               	rrf	??___ftmul+1,f
 14056  0912  0CB9               	rrf	??___ftmul,f
 14057  0913  0B89               	decfsz	9,f
 14058  0914  2910               	goto	u5795
 14059  0915  0839               	movf	??___ftmul,w
 14060  0916  00BC               	movwf	??___ftmul+3
 14061  0917  083C               	movf	??___ftmul+3,w
 14062  0918  00C2               	movwf	___ftmul@sign
 14063  0919  0836               	movf	___ftmul@f2,w
 14064  091A  00B9               	movwf	??___ftmul
 14065  091B  0837               	movf	___ftmul@f2+1,w
 14066  091C  00BA               	movwf	??___ftmul+1
 14067  091D  0838               	movf	___ftmul@f2+2,w
 14068  091E  00BB               	movwf	??___ftmul+2
 14069  091F  3010               	movlw	16
 14070  0920                     u5805:	
 14071  0920  36BB               	lsrf	??___ftmul+2,f
 14072  0921  0CBA               	rrf	??___ftmul+1,f
 14073  0922  0CB9               	rrf	??___ftmul,f
 14074  0923  0B89               	decfsz	9,f
 14075  0924  2920               	goto	u5805
 14076  0925  0839               	movf	??___ftmul,w
 14077  0926  00BC               	movwf	??___ftmul+3
 14078  0927  083C               	movf	??___ftmul+3,w
 14079  0928  06C2               	xorwf	___ftmul@sign,f
 14080  0929  3080               	movlw	128
 14081  092A  00B9               	movwf	??___ftmul
 14082  092B  0839               	movf	??___ftmul,w
 14083  092C  05C2               	andwf	___ftmul@sign,f
 14084  092D  17B4               	bsf	___ftmul@f1+1,7
 14085  092E  17B7               	bsf	___ftmul@f2+1,7
 14086  092F  30FF               	movlw	255
 14087  0930  05B6               	andwf	___ftmul@f2,f
 14088  0931  30FF               	movlw	255
 14089  0932  05B7               	andwf	___ftmul@f2+1,f
 14090  0933  3000               	movlw	0
 14091  0934  05B8               	andwf	___ftmul@f2+2,f
 14092  0935  3000               	movlw	0
 14093  0936  00BE               	movwf	___ftmul@f3_as_product
 14094  0937  3000               	movlw	0
 14095  0938  00BF               	movwf	___ftmul@f3_as_product+1
 14096  0939  3000               	movlw	0
 14097  093A  00C0               	movwf	___ftmul@f3_as_product+2
 14098  093B  3007               	movlw	7
 14099  093C  00B9               	movwf	??___ftmul
 14100  093D  0839               	movf	??___ftmul,w
 14101  093E  00C1               	movwf	___ftmul@cntr
 14102  093F                     l5169:	
 14103  093F  1C33               	btfss	___ftmul@f1,0
 14104  0940  2947               	goto	l5173
 14105  0941  0836               	movf	___ftmul@f2,w
 14106  0942  07BE               	addwf	___ftmul@f3_as_product,f
 14107  0943  0837               	movf	___ftmul@f2+1,w
 14108  0944  3DBF               	addwfc	___ftmul@f3_as_product+1,f
 14109  0945  0838               	movf	___ftmul@f2+2,w
 14110  0946  3DC0               	addwfc	___ftmul@f3_as_product+2,f
 14111  0947                     l5173:	
 14112  0947  3001               	movlw	1
 14113  0948                     u5825:	
 14114  0948  36B5               	lsrf	___ftmul@f1+2,f
 14115  0949  0CB4               	rrf	___ftmul@f1+1,f
 14116  094A  0CB3               	rrf	___ftmul@f1,f
 14117  094B  0B89               	decfsz	9,f
 14118  094C  2948               	goto	u5825
 14119  094D  3001               	movlw	1
 14120  094E                     u5835:	
 14121  094E  35B6               	lslf	___ftmul@f2,f
 14122  094F  0DB7               	rlf	___ftmul@f2+1,f
 14123  0950  0DB8               	rlf	___ftmul@f2+2,f
 14124  0951  0B89               	decfsz	9,f
 14125  0952  294E               	goto	u5835
 14126  0953  3001               	movlw	1
 14127  0954  02C1               	subwf	___ftmul@cntr,f
 14128  0955  1D03               	btfss	3,2
 14129  0956  293F               	goto	l5169
 14130  0957  3009               	movlw	9
 14131  0958  00B9               	movwf	??___ftmul
 14132  0959  0839               	movf	??___ftmul,w
 14133  095A  00C1               	movwf	___ftmul@cntr
 14134  095B                     l5181:	
 14135  095B  1C33               	btfss	___ftmul@f1,0
 14136  095C  2963               	goto	l5185
 14137  095D  0836               	movf	___ftmul@f2,w
 14138  095E  07BE               	addwf	___ftmul@f3_as_product,f
 14139  095F  0837               	movf	___ftmul@f2+1,w
 14140  0960  3DBF               	addwfc	___ftmul@f3_as_product+1,f
 14141  0961  0838               	movf	___ftmul@f2+2,w
 14142  0962  3DC0               	addwfc	___ftmul@f3_as_product+2,f
 14143  0963                     l5185:	
 14144  0963  3001               	movlw	1
 14145  0964                     u5865:	
 14146  0964  36B5               	lsrf	___ftmul@f1+2,f
 14147  0965  0CB4               	rrf	___ftmul@f1+1,f
 14148  0966  0CB3               	rrf	___ftmul@f1,f
 14149  0967  0B89               	decfsz	9,f
 14150  0968  2964               	goto	u5865
 14151  0969  3001               	movlw	1
 14152  096A                     u5875:	
 14153  096A  36C0               	lsrf	___ftmul@f3_as_product+2,f
 14154  096B  0CBF               	rrf	___ftmul@f3_as_product+1,f
 14155  096C  0CBE               	rrf	___ftmul@f3_as_product,f
 14156  096D  0B89               	decfsz	9,f
 14157  096E  296A               	goto	u5875
 14158  096F  3001               	movlw	1
 14159  0970  02C1               	subwf	___ftmul@cntr,f
 14160  0971  1D03               	btfss	3,2
 14161  0972  295B               	goto	l5181
 14162  0973  083E               	movf	___ftmul@f3_as_product,w
 14163  0974  00A0               	movwf	___ftpack@arg
 14164  0975  083F               	movf	___ftmul@f3_as_product+1,w
 14165  0976  00A1               	movwf	___ftpack@arg+1
 14166  0977  0840               	movf	___ftmul@f3_as_product+2,w
 14167  0978  00A2               	movwf	___ftpack@arg+2
 14168  0979  083D               	movf	___ftmul@exp,w
 14169  097A  00B9               	movwf	??___ftmul
 14170  097B  0839               	movf	??___ftmul,w
 14171  097C  00A3               	movwf	___ftpack@exp
 14172  097D  0842               	movf	___ftmul@sign,w
 14173  097E  00BA               	movwf	??___ftmul+1
 14174  097F  083A               	movf	??___ftmul+1,w
 14175  0980  00A4               	movwf	___ftpack@sign
 14176  0981  3195  2538         	fcall	___ftpack
 14177  0983  0140               	movlb	0	; select bank0
 14178  0984  0820               	movf	?___ftpack,w
 14179  0985  00B3               	movwf	?___ftmul
 14180  0986  0821               	movf	?___ftpack+1,w
 14181  0987  00B4               	movwf	?___ftmul+1
 14182  0988  0822               	movf	?___ftpack+2,w
 14183  0989  00B5               	movwf	?___ftmul+2
 14184  098A  0008               	return
 14185  098B                     __end_of___ftmul:	
 14186                           
 14187                           	psect	text47
 14188  13AC                     __ptext47:	
 14189 ;; *************** function ___awmod *****************
 14190 ;; Defined at:
 14191 ;;		line 6 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  divisor         2    0[BANK0 ] int 
 14194 ;;  dividend        2    2[BANK0 ] int 
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;  sign            1    6[COMMON] unsigned char 
 14197 ;;  counter         1    5[COMMON] unsigned char 
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  2    0[BANK0 ] int 
 14200 ;; Registers used:
 14201 ;;		wreg, status,2, status,0
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14208 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14210 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14211 ;;Total ram usage:        7 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:    3
 14214 ;; This function calls:
 14215 ;;		Nothing
 14216 ;; This function is called by:
 14217 ;;		_fround
 14218 ;;		_scale
 14219 ;; This function uses a non-reentrant model
 14220 ;;
 14221                           
 14222                           
 14223                           ;psect for function ___awmod
 14224  13AC                     ___awmod:	
 14225                           
 14226                           ;incstack = 0
 14227                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14228  13AC  01F6               	clrf	___awmod@sign
 14229  13AD  0140               	movlb	0	; select bank0
 14230  13AE  1FA3               	btfss	___awmod@dividend+1,7
 14231  13AF  2BB7               	goto	l5045
 14232  13B0  09A2               	comf	___awmod@dividend,f
 14233  13B1  09A3               	comf	___awmod@dividend+1,f
 14234  13B2  0AA2               	incf	___awmod@dividend,f
 14235  13B3  1903               	skipnz
 14236  13B4  0AA3               	incf	___awmod@dividend+1,f
 14237  13B5  01F6               	clrf	___awmod@sign
 14238  13B6  0AF6               	incf	___awmod@sign,f
 14239  13B7                     l5045:	
 14240  13B7  1FA1               	btfss	___awmod@divisor+1,7
 14241  13B8  2BBE               	goto	l5049
 14242  13B9  09A0               	comf	___awmod@divisor,f
 14243  13BA  09A1               	comf	___awmod@divisor+1,f
 14244  13BB  0AA0               	incf	___awmod@divisor,f
 14245  13BC  1903               	skipnz
 14246  13BD  0AA1               	incf	___awmod@divisor+1,f
 14247  13BE                     l5049:	
 14248  13BE  0820               	movf	___awmod@divisor,w
 14249  13BF  0421               	iorwf	___awmod@divisor+1,w
 14250  13C0  1903               	btfsc	3,2
 14251  13C1  2BE5               	goto	l5067
 14252  13C2  01F5               	clrf	___awmod@counter
 14253  13C3  0AF5               	incf	___awmod@counter,f
 14254  13C4                     l5057:	
 14255  13C4  1BA1               	btfsc	___awmod@divisor+1,7
 14256  13C5  2BD0               	goto	l5059
 14257  13C6  3001               	movlw	1
 14258  13C7                     u5485:	
 14259  13C7  35A0               	lslf	___awmod@divisor,f
 14260  13C8  0DA1               	rlf	___awmod@divisor+1,f
 14261  13C9  0B89               	decfsz	9,f
 14262  13CA  2BC7               	goto	u5485
 14263  13CB  3001               	movlw	1
 14264  13CC  00F4               	movwf	??___awmod
 14265  13CD  0874               	movf	??___awmod,w
 14266  13CE  07F5               	addwf	___awmod@counter,f
 14267  13CF  2BC4               	goto	l5057
 14268  13D0                     l5059:	
 14269  13D0  0821               	movf	___awmod@divisor+1,w
 14270  13D1  0223               	subwf	___awmod@dividend+1,w
 14271  13D2  1D03               	skipz
 14272  13D3  2BD6               	goto	u5505
 14273  13D4  0820               	movf	___awmod@divisor,w
 14274  13D5  0222               	subwf	___awmod@dividend,w
 14275  13D6                     u5505:	
 14276  13D6  1C03               	skipc
 14277  13D7  2BDC               	goto	l5063
 14278  13D8  0820               	movf	___awmod@divisor,w
 14279  13D9  02A2               	subwf	___awmod@dividend,f
 14280  13DA  0821               	movf	___awmod@divisor+1,w
 14281  13DB  3BA3               	subwfb	___awmod@dividend+1,f
 14282  13DC                     l5063:	
 14283  13DC  3001               	movlw	1
 14284  13DD                     u5515:	
 14285  13DD  36A1               	lsrf	___awmod@divisor+1,f
 14286  13DE  0CA0               	rrf	___awmod@divisor,f
 14287  13DF  0B89               	decfsz	9,f
 14288  13E0  2BDD               	goto	u5515
 14289  13E1  3001               	movlw	1
 14290  13E2  02F5               	subwf	___awmod@counter,f
 14291  13E3  1D03               	btfss	3,2
 14292  13E4  2BD0               	goto	l5059
 14293  13E5                     l5067:	
 14294  13E5  0876               	movf	___awmod@sign,w
 14295  13E6  1903               	btfsc	3,2
 14296  13E7  2BED               	goto	l5071
 14297  13E8  09A2               	comf	___awmod@dividend,f
 14298  13E9  09A3               	comf	___awmod@dividend+1,f
 14299  13EA  0AA2               	incf	___awmod@dividend,f
 14300  13EB  1903               	skipnz
 14301  13EC  0AA3               	incf	___awmod@dividend+1,f
 14302  13ED                     l5071:	
 14303  13ED  0823               	movf	___awmod@dividend+1,w
 14304  13EE  00A1               	movwf	?___awmod+1
 14305  13EF  0822               	movf	___awmod@dividend,w
 14306  13F0  00A0               	movwf	?___awmod
 14307  13F1  0008               	return
 14308  13F2                     __end_of___awmod:	
 14309                           
 14310                           	psect	text48
 14311  1440                     __ptext48:	
 14312 ;; *************** function ___awdiv *****************
 14313 ;; Defined at:
 14314 ;;		line 6 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 14315 ;; Parameters:    Size  Location     Type
 14316 ;;  divisor         2    4[BANK0 ] int 
 14317 ;;  dividend        2    6[BANK0 ] int 
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;  quotient        2   11[BANK0 ] int 
 14320 ;;  sign            1   10[BANK0 ] unsigned char 
 14321 ;;  counter         1    9[BANK0 ] unsigned char 
 14322 ;; Return value:  Size  Location     Type
 14323 ;;                  2    4[BANK0 ] int 
 14324 ;; Registers used:
 14325 ;;		wreg, status,2, status,0
 14326 ;; Tracked objects:
 14327 ;;		On entry : 0/0
 14328 ;;		On exit  : 0/0
 14329 ;;		Unchanged: 0/0
 14330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14332 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14334 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14335 ;;Total ram usage:        9 bytes
 14336 ;; Hardware stack levels used:    1
 14337 ;; Hardware stack levels required when called:    3
 14338 ;; This function calls:
 14339 ;;		Nothing
 14340 ;; This function is called by:
 14341 ;;		_fround
 14342 ;;		_scale
 14343 ;;		_sprintf
 14344 ;; This function uses a non-reentrant model
 14345 ;;
 14346                           
 14347                           
 14348                           ;psect for function ___awdiv
 14349  1440                     ___awdiv:	
 14350                           
 14351                           ;incstack = 0
 14352                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14353  1440  0140               	movlb	0	; select bank0
 14354  1441  01AA               	clrf	___awdiv@sign
 14355  1442  1FA5               	btfss	___awdiv@divisor+1,7
 14356  1443  2C4B               	goto	l5001
 14357  1444  09A4               	comf	___awdiv@divisor,f
 14358  1445  09A5               	comf	___awdiv@divisor+1,f
 14359  1446  0AA4               	incf	___awdiv@divisor,f
 14360  1447  1903               	skipnz
 14361  1448  0AA5               	incf	___awdiv@divisor+1,f
 14362  1449  01AA               	clrf	___awdiv@sign
 14363  144A  0AAA               	incf	___awdiv@sign,f
 14364  144B                     l5001:	
 14365  144B  1FA7               	btfss	___awdiv@dividend+1,7
 14366  144C  2C56               	goto	l5007
 14367  144D  09A6               	comf	___awdiv@dividend,f
 14368  144E  09A7               	comf	___awdiv@dividend+1,f
 14369  144F  0AA6               	incf	___awdiv@dividend,f
 14370  1450  1903               	skipnz
 14371  1451  0AA7               	incf	___awdiv@dividend+1,f
 14372  1452  3001               	movlw	1
 14373  1453  00A8               	movwf	??___awdiv
 14374  1454  0828               	movf	??___awdiv,w
 14375  1455  06AA               	xorwf	___awdiv@sign,f
 14376  1456                     l5007:	
 14377  1456  01AB               	clrf	___awdiv@quotient
 14378  1457  01AC               	clrf	___awdiv@quotient+1
 14379  1458  0824               	movf	___awdiv@divisor,w
 14380  1459  0425               	iorwf	___awdiv@divisor+1,w
 14381  145A  1903               	btfsc	3,2
 14382  145B  2C85               	goto	l5029
 14383  145C  01A9               	clrf	___awdiv@counter
 14384  145D  0AA9               	incf	___awdiv@counter,f
 14385  145E                     l5017:	
 14386  145E  1BA5               	btfsc	___awdiv@divisor+1,7
 14387  145F  2C6A               	goto	l5019
 14388  1460  3001               	movlw	1
 14389  1461                     u5385:	
 14390  1461  35A4               	lslf	___awdiv@divisor,f
 14391  1462  0DA5               	rlf	___awdiv@divisor+1,f
 14392  1463  0B89               	decfsz	9,f
 14393  1464  2C61               	goto	u5385
 14394  1465  3001               	movlw	1
 14395  1466  00A8               	movwf	??___awdiv
 14396  1467  0828               	movf	??___awdiv,w
 14397  1468  07A9               	addwf	___awdiv@counter,f
 14398  1469  2C5E               	goto	l5017
 14399  146A                     l5019:	
 14400  146A  3001               	movlw	1
 14401  146B                     u5405:	
 14402  146B  35AB               	lslf	___awdiv@quotient,f
 14403  146C  0DAC               	rlf	___awdiv@quotient+1,f
 14404  146D  0B89               	decfsz	9,f
 14405  146E  2C6B               	goto	u5405
 14406  146F  0825               	movf	___awdiv@divisor+1,w
 14407  1470  0227               	subwf	___awdiv@dividend+1,w
 14408  1471  1D03               	skipz
 14409  1472  2C75               	goto	u5415
 14410  1473  0824               	movf	___awdiv@divisor,w
 14411  1474  0226               	subwf	___awdiv@dividend,w
 14412  1475                     u5415:	
 14413  1475  1C03               	skipc
 14414  1476  2C7C               	goto	l5025
 14415  1477  0824               	movf	___awdiv@divisor,w
 14416  1478  02A6               	subwf	___awdiv@dividend,f
 14417  1479  0825               	movf	___awdiv@divisor+1,w
 14418  147A  3BA7               	subwfb	___awdiv@dividend+1,f
 14419  147B  142B               	bsf	___awdiv@quotient,0
 14420  147C                     l5025:	
 14421  147C  3001               	movlw	1
 14422  147D                     u5425:	
 14423  147D  36A5               	lsrf	___awdiv@divisor+1,f
 14424  147E  0CA4               	rrf	___awdiv@divisor,f
 14425  147F  0B89               	decfsz	9,f
 14426  1480  2C7D               	goto	u5425
 14427  1481  3001               	movlw	1
 14428  1482  02A9               	subwf	___awdiv@counter,f
 14429  1483  1D03               	btfss	3,2
 14430  1484  2C6A               	goto	l5019
 14431  1485                     l5029:	
 14432  1485  082A               	movf	___awdiv@sign,w
 14433  1486  1903               	btfsc	3,2
 14434  1487  2C8D               	goto	l5033
 14435  1488  09AB               	comf	___awdiv@quotient,f
 14436  1489  09AC               	comf	___awdiv@quotient+1,f
 14437  148A  0AAB               	incf	___awdiv@quotient,f
 14438  148B  1903               	skipnz
 14439  148C  0AAC               	incf	___awdiv@quotient+1,f
 14440  148D                     l5033:	
 14441  148D  082C               	movf	___awdiv@quotient+1,w
 14442  148E  00A5               	movwf	?___awdiv+1
 14443  148F  082B               	movf	___awdiv@quotient,w
 14444  1490  00A4               	movwf	?___awdiv
 14445  1491  0008               	return
 14446  1492                     __end_of___awdiv:	
 14447                           
 14448                           	psect	text49
 14449  098B                     __ptext49:	
 14450 ;; *************** function __tdiv_to_l_ *****************
 14451 ;; Defined at:
 14452 ;;		line 60 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  f1              3    0[BANK0 ] float 
 14455 ;;  f2              3    3[BANK0 ] float 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;  quot            4   10[BANK0 ] unsigned long 
 14458 ;;  exp1            1   15[BANK0 ] unsigned char 
 14459 ;;  cntr            1   14[BANK0 ] unsigned char 
 14460 ;; Return value:  Size  Location     Type
 14461 ;;                  4    0[BANK0 ] unsigned long 
 14462 ;; Registers used:
 14463 ;;		wreg, status,2, status,0
 14464 ;; Tracked objects:
 14465 ;;		On entry : 0/0
 14466 ;;		On exit  : 0/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14469 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14470 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14471 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14472 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14473 ;;Total ram usage:       16 bytes
 14474 ;; Hardware stack levels used:    1
 14475 ;; Hardware stack levels required when called:    3
 14476 ;; This function calls:
 14477 ;;		Nothing
 14478 ;; This function is called by:
 14479 ;;		_sprintf
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           
 14484                           ;psect for function __tdiv_to_l_
 14485  098B                     __tdiv_to_l_:	
 14486                           
 14487                           ;incstack = 0
 14488                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 14489  098B  0140               	movlb	0	; select bank0
 14490  098C  0820               	movf	__tdiv_to_l_@f1,w
 14491  098D  00A6               	movwf	??__tdiv_to_l_
 14492  098E  0821               	movf	__tdiv_to_l_@f1+1,w
 14493  098F  00A7               	movwf	??__tdiv_to_l_+1
 14494  0990  0822               	movf	__tdiv_to_l_@f1+2,w
 14495  0991  00A8               	movwf	??__tdiv_to_l_+2
 14496  0992  1003               	clrc
 14497  0993  0D27               	rlf	??__tdiv_to_l_+1,w
 14498  0994  0D28               	rlf	??__tdiv_to_l_+2,w
 14499  0995  00A9               	movwf	??__tdiv_to_l_+3
 14500  0996  0829               	movf	??__tdiv_to_l_+3,w
 14501  0997  00AF               	movwf	__tdiv_to_l_@exp1
 14502  0998  082F               	movf	__tdiv_to_l_@exp1,w
 14503  0999  1D03               	btfss	3,2
 14504  099A  29A4               	goto	l5397
 14505  099B  3000               	movlw	0
 14506  099C  00A3               	movwf	?__tdiv_to_l_+3
 14507  099D  3000               	movlw	0
 14508  099E  00A2               	movwf	?__tdiv_to_l_+2
 14509  099F  3000               	movlw	0
 14510  09A0  00A1               	movwf	?__tdiv_to_l_+1
 14511  09A1  3000               	movlw	0
 14512  09A2  00A0               	movwf	?__tdiv_to_l_
 14513  09A3  0008               	return
 14514  09A4                     l5397:	
 14515  09A4  0823               	movf	__tdiv_to_l_@f2,w
 14516  09A5  00A6               	movwf	??__tdiv_to_l_
 14517  09A6  0824               	movf	__tdiv_to_l_@f2+1,w
 14518  09A7  00A7               	movwf	??__tdiv_to_l_+1
 14519  09A8  0825               	movf	__tdiv_to_l_@f2+2,w
 14520  09A9  00A8               	movwf	??__tdiv_to_l_+2
 14521  09AA  1003               	clrc
 14522  09AB  0D27               	rlf	??__tdiv_to_l_+1,w
 14523  09AC  0D28               	rlf	??__tdiv_to_l_+2,w
 14524  09AD  00A9               	movwf	??__tdiv_to_l_+3
 14525  09AE  0829               	movf	??__tdiv_to_l_+3,w
 14526  09AF  00AE               	movwf	__tdiv_to_l_@cntr
 14527  09B0  082E               	movf	__tdiv_to_l_@cntr,w
 14528  09B1  1D03               	btfss	3,2
 14529  09B2  29BC               	goto	l1279
 14530  09B3  3000               	movlw	0
 14531  09B4  00A3               	movwf	?__tdiv_to_l_+3
 14532  09B5  3000               	movlw	0
 14533  09B6  00A2               	movwf	?__tdiv_to_l_+2
 14534  09B7  3000               	movlw	0
 14535  09B8  00A1               	movwf	?__tdiv_to_l_+1
 14536  09B9  3000               	movlw	0
 14537  09BA  00A0               	movwf	?__tdiv_to_l_
 14538  09BB  0008               	return
 14539  09BC                     l1279:	
 14540  09BC  17A1               	bsf	__tdiv_to_l_@f1+1,7
 14541  09BD  30FF               	movlw	255
 14542  09BE  05A0               	andwf	__tdiv_to_l_@f1,f
 14543  09BF  30FF               	movlw	255
 14544  09C0  05A1               	andwf	__tdiv_to_l_@f1+1,f
 14545  09C1  3000               	movlw	0
 14546  09C2  05A2               	andwf	__tdiv_to_l_@f1+2,f
 14547  09C3  17A4               	bsf	__tdiv_to_l_@f2+1,7
 14548  09C4  30FF               	movlw	255
 14549  09C5  05A3               	andwf	__tdiv_to_l_@f2,f
 14550  09C6  30FF               	movlw	255
 14551  09C7  05A4               	andwf	__tdiv_to_l_@f2+1,f
 14552  09C8  3000               	movlw	0
 14553  09C9  05A5               	andwf	__tdiv_to_l_@f2+2,f
 14554  09CA  3000               	movlw	0
 14555  09CB  00AD               	movwf	__tdiv_to_l_@quot+3
 14556  09CC  3000               	movlw	0
 14557  09CD  00AC               	movwf	__tdiv_to_l_@quot+2
 14558  09CE  3000               	movlw	0
 14559  09CF  00AB               	movwf	__tdiv_to_l_@quot+1
 14560  09D0  3000               	movlw	0
 14561  09D1  00AA               	movwf	__tdiv_to_l_@quot
 14562  09D2  307F               	movlw	127
 14563  09D3  02AF               	subwf	__tdiv_to_l_@exp1,f
 14564  09D4  3098               	movlw	152
 14565  09D5  072E               	addwf	__tdiv_to_l_@cntr,w
 14566  09D6  00A6               	movwf	??__tdiv_to_l_
 14567  09D7  0826               	movf	??__tdiv_to_l_,w
 14568  09D8  02AF               	subwf	__tdiv_to_l_@exp1,f
 14569  09D9  3018               	movlw	24
 14570  09DA  00A6               	movwf	??__tdiv_to_l_
 14571  09DB  0826               	movf	??__tdiv_to_l_,w
 14572  09DC  00AE               	movwf	__tdiv_to_l_@cntr
 14573  09DD                     l5411:	
 14574  09DD  3001               	movlw	1
 14575  09DE                     u6035:	
 14576  09DE  35AA               	lslf	__tdiv_to_l_@quot,f
 14577  09DF  0DAB               	rlf	__tdiv_to_l_@quot+1,f
 14578  09E0  0DAC               	rlf	__tdiv_to_l_@quot+2,f
 14579  09E1  0DAD               	rlf	__tdiv_to_l_@quot+3,f
 14580  09E2  0B89               	decfsz	9,f
 14581  09E3  29DE               	goto	u6035
 14582  09E4  0825               	movf	__tdiv_to_l_@f2+2,w
 14583  09E5  0222               	subwf	__tdiv_to_l_@f1+2,w
 14584  09E6  1D03               	skipz
 14585  09E7  29EE               	goto	u6045
 14586  09E8  0824               	movf	__tdiv_to_l_@f2+1,w
 14587  09E9  0221               	subwf	__tdiv_to_l_@f1+1,w
 14588  09EA  1D03               	skipz
 14589  09EB  29EE               	goto	u6045
 14590  09EC  0823               	movf	__tdiv_to_l_@f2,w
 14591  09ED  0220               	subwf	__tdiv_to_l_@f1,w
 14592  09EE                     u6045:	
 14593  09EE  1C03               	skipc
 14594  09EF  29F7               	goto	l5419
 14595  09F0  0823               	movf	__tdiv_to_l_@f2,w
 14596  09F1  02A0               	subwf	__tdiv_to_l_@f1,f
 14597  09F2  0824               	movf	__tdiv_to_l_@f2+1,w
 14598  09F3  3BA1               	subwfb	__tdiv_to_l_@f1+1,f
 14599  09F4  0825               	movf	__tdiv_to_l_@f2+2,w
 14600  09F5  3BA2               	subwfb	__tdiv_to_l_@f1+2,f
 14601  09F6  142A               	bsf	__tdiv_to_l_@quot,0
 14602  09F7                     l5419:	
 14603  09F7  3001               	movlw	1
 14604  09F8                     u6055:	
 14605  09F8  35A0               	lslf	__tdiv_to_l_@f1,f
 14606  09F9  0DA1               	rlf	__tdiv_to_l_@f1+1,f
 14607  09FA  0DA2               	rlf	__tdiv_to_l_@f1+2,f
 14608  09FB  0B89               	decfsz	9,f
 14609  09FC  29F8               	goto	u6055
 14610  09FD  3001               	movlw	1
 14611  09FE  02AE               	subwf	__tdiv_to_l_@cntr,f
 14612  09FF  1D03               	btfss	3,2
 14613  0A00  29DD               	goto	l5411
 14614  0A01  1FAF               	btfss	__tdiv_to_l_@exp1,7
 14615  0A02  2A1F               	goto	l5431
 14616  0A03  082F               	movf	__tdiv_to_l_@exp1,w
 14617  0A04  3A80               	xorlw	128
 14618  0A05  3E97               	addlw	151
 14619  0A06  1803               	skipnc
 14620  0A07  2A11               	goto	l5429
 14621  0A08  3000               	movlw	0
 14622  0A09  00A3               	movwf	?__tdiv_to_l_+3
 14623  0A0A  3000               	movlw	0
 14624  0A0B  00A2               	movwf	?__tdiv_to_l_+2
 14625  0A0C  3000               	movlw	0
 14626  0A0D  00A1               	movwf	?__tdiv_to_l_+1
 14627  0A0E  3000               	movlw	0
 14628  0A0F  00A0               	movwf	?__tdiv_to_l_
 14629  0A10  0008               	return
 14630  0A11                     l5429:	
 14631  0A11  3001               	movlw	1
 14632  0A12                     u6095:	
 14633  0A12  36AD               	lsrf	__tdiv_to_l_@quot+3,f
 14634  0A13  0CAC               	rrf	__tdiv_to_l_@quot+2,f
 14635  0A14  0CAB               	rrf	__tdiv_to_l_@quot+1,f
 14636  0A15  0CAA               	rrf	__tdiv_to_l_@quot,f
 14637  0A16  0B89               	decfsz	9,f
 14638  0A17  2A12               	goto	u6095
 14639  0A18  3001               	movlw	1
 14640  0A19  00A6               	movwf	??__tdiv_to_l_
 14641  0A1A  0826               	movf	??__tdiv_to_l_,w
 14642  0A1B  07AF               	addwf	__tdiv_to_l_@exp1,f
 14643  0A1C  1903               	btfsc	3,2
 14644  0A1D  2A38               	goto	l5439
 14645  0A1E  2A11               	goto	l5429
 14646  0A1F                     l5431:	
 14647  0A1F  3018               	movlw	24
 14648  0A20  022F               	subwf	__tdiv_to_l_@exp1,w
 14649  0A21  1C03               	skipc
 14650  0A22  2A35               	goto	l1289
 14651  0A23  3000               	movlw	0
 14652  0A24  00A3               	movwf	?__tdiv_to_l_+3
 14653  0A25  3000               	movlw	0
 14654  0A26  00A2               	movwf	?__tdiv_to_l_+2
 14655  0A27  3000               	movlw	0
 14656  0A28  00A1               	movwf	?__tdiv_to_l_+1
 14657  0A29  3000               	movlw	0
 14658  0A2A  00A0               	movwf	?__tdiv_to_l_
 14659  0A2B  0008               	return
 14660  0A2C                     l5437:	
 14661  0A2C  3001               	movlw	1
 14662  0A2D                     u6125:	
 14663  0A2D  35AA               	lslf	__tdiv_to_l_@quot,f
 14664  0A2E  0DAB               	rlf	__tdiv_to_l_@quot+1,f
 14665  0A2F  0DAC               	rlf	__tdiv_to_l_@quot+2,f
 14666  0A30  0DAD               	rlf	__tdiv_to_l_@quot+3,f
 14667  0A31  0B89               	decfsz	9,f
 14668  0A32  2A2D               	goto	u6125
 14669  0A33  3001               	movlw	1
 14670  0A34  02AF               	subwf	__tdiv_to_l_@exp1,f
 14671  0A35                     l1289:	
 14672  0A35  082F               	movf	__tdiv_to_l_@exp1,w
 14673  0A36  1D03               	btfss	3,2
 14674  0A37  2A2C               	goto	l5437
 14675  0A38                     l5439:	
 14676  0A38  082D               	movf	__tdiv_to_l_@quot+3,w
 14677  0A39  00A3               	movwf	?__tdiv_to_l_+3
 14678  0A3A  082C               	movf	__tdiv_to_l_@quot+2,w
 14679  0A3B  00A2               	movwf	?__tdiv_to_l_+2
 14680  0A3C  082B               	movf	__tdiv_to_l_@quot+1,w
 14681  0A3D  00A1               	movwf	?__tdiv_to_l_+1
 14682  0A3E  082A               	movf	__tdiv_to_l_@quot,w
 14683  0A3F  00A0               	movwf	?__tdiv_to_l_
 14684  0A40  0008               	return
 14685  0A41                     __end_of__tdiv_to_l_:	
 14686                           
 14687                           	psect	text50
 14688  0B37                     __ptext50:	
 14689 ;; *************** function __div_to_l_ *****************
 14690 ;; Defined at:
 14691 ;;		line 60 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
 14692 ;; Parameters:    Size  Location     Type
 14693 ;;  f1              3    0[BANK0 ] unsigned long 
 14694 ;;  f2              3    3[BANK0 ] unsigned long 
 14695 ;; Auto vars:     Size  Location     Type
 14696 ;;  quot            4   14[BANK0 ] unsigned long 
 14697 ;;  exp1            1   19[BANK0 ] unsigned char 
 14698 ;;  cntr            1   18[BANK0 ] unsigned char 
 14699 ;; Return value:  Size  Location     Type
 14700 ;;                  4    0[BANK0 ] unsigned long 
 14701 ;; Registers used:
 14702 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14703 ;; Tracked objects:
 14704 ;;		On entry : 0/0
 14705 ;;		On exit  : 0/0
 14706 ;;		Unchanged: 0/0
 14707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14708 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14709 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14710 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14711 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14712 ;;Total ram usage:       20 bytes
 14713 ;; Hardware stack levels used:    1
 14714 ;; Hardware stack levels required when called:    3
 14715 ;; This function calls:
 14716 ;;		Nothing
 14717 ;; This function is called by:
 14718 ;;		_sprintf
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           
 14723                           ;psect for function __div_to_l_
 14724  0B37                     __div_to_l_:	
 14725                           
 14726                           ;incstack = 0
 14727                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
 14728  0B37  3020               	movlw	low (__div_to_l_@f1| 0)
 14729  0B38  0086               	movwf	6
 14730  0B39  0187               	clrf	7
 14731  0B3A  3F40               	moviw [0]fsr1
 14732  0B3B  0140               	movlb	0	; select bank0
 14733  0B3C  00A6               	movwf	??__div_to_l_
 14734  0B3D  3F41               	moviw [1]fsr1
 14735  0B3E  00A7               	movwf	??__div_to_l_+1
 14736  0B3F  3F42               	moviw [2]fsr1
 14737  0B40  00A8               	movwf	??__div_to_l_+2
 14738  0B41  3F43               	moviw [3]fsr1
 14739  0B42  00A9               	movwf	??__div_to_l_+3
 14740  0B43  1003               	clrc
 14741  0B44  0D28               	rlf	??__div_to_l_+2,w
 14742  0B45  0D29               	rlf	??__div_to_l_+3,w
 14743  0B46  00AA               	movwf	??__div_to_l_+4
 14744  0B47  082A               	movf	??__div_to_l_+4,w
 14745  0B48  00B3               	movwf	__div_to_l_@exp1
 14746  0B49  0833               	movf	__div_to_l_@exp1,w
 14747  0B4A  1D03               	btfss	3,2
 14748  0B4B  2B55               	goto	l5449
 14749  0B4C  3000               	movlw	0
 14750  0B4D  00A3               	movwf	?__div_to_l_+3
 14751  0B4E  3000               	movlw	0
 14752  0B4F  00A2               	movwf	?__div_to_l_+2
 14753  0B50  3000               	movlw	0
 14754  0B51  00A1               	movwf	?__div_to_l_+1
 14755  0B52  3000               	movlw	0
 14756  0B53  00A0               	movwf	?__div_to_l_
 14757  0B54  0008               	return
 14758  0B55                     l5449:	
 14759  0B55  3023               	movlw	low (__div_to_l_@f2| 0)
 14760  0B56  0086               	movwf	6
 14761  0B57  0187               	clrf	7
 14762  0B58  3F40               	moviw [0]fsr1
 14763  0B59  00A6               	movwf	??__div_to_l_
 14764  0B5A  3F41               	moviw [1]fsr1
 14765  0B5B  00A7               	movwf	??__div_to_l_+1
 14766  0B5C  3F42               	moviw [2]fsr1
 14767  0B5D  00A8               	movwf	??__div_to_l_+2
 14768  0B5E  3F43               	moviw [3]fsr1
 14769  0B5F  00A9               	movwf	??__div_to_l_+3
 14770  0B60  1003               	clrc
 14771  0B61  0D28               	rlf	??__div_to_l_+2,w
 14772  0B62  0D29               	rlf	??__div_to_l_+3,w
 14773  0B63  00AA               	movwf	??__div_to_l_+4
 14774  0B64  082A               	movf	??__div_to_l_+4,w
 14775  0B65  00B2               	movwf	__div_to_l_@cntr
 14776  0B66  0832               	movf	__div_to_l_@cntr,w
 14777  0B67  1D03               	btfss	3,2
 14778  0B68  2B72               	goto	l5455
 14779  0B69  3000               	movlw	0
 14780  0B6A  00A3               	movwf	?__div_to_l_+3
 14781  0B6B  3000               	movlw	0
 14782  0B6C  00A2               	movwf	?__div_to_l_+2
 14783  0B6D  3000               	movlw	0
 14784  0B6E  00A1               	movwf	?__div_to_l_+1
 14785  0B6F  3000               	movlw	0
 14786  0B70  00A0               	movwf	?__div_to_l_
 14787  0B71  0008               	return
 14788  0B72                     l5455:	
 14789  0B72  3020               	movlw	low (__div_to_l_@f1| 0)
 14790  0B73  0086               	movwf	6
 14791  0B74  0187               	clrf	7
 14792  0B75  3000               	movlw	0
 14793  0B76  0481               	iorwf	1,f
 14794  0B77  3141               	addfsr 1,1
 14795  0B78  3000               	movlw	0
 14796  0B79  0481               	iorwf	1,f
 14797  0B7A  3141               	addfsr 1,1
 14798  0B7B  3080               	movlw	128
 14799  0B7C  0481               	iorwf	1,f
 14800  0B7D  3141               	addfsr 1,1
 14801  0B7E  3000               	movlw	0
 14802  0B7F  0481               	iorwf	1,f
 14803  0B80  3020               	movlw	low (__div_to_l_@f1| 0)
 14804  0B81  0086               	movwf	6
 14805  0B82  0187               	clrf	7
 14806  0B83  30FF               	movlw	255
 14807  0B84  0581               	andwf	1,f
 14808  0B85  3141               	addfsr 1,1
 14809  0B86  30FF               	movlw	255
 14810  0B87  0581               	andwf	1,f
 14811  0B88  3141               	addfsr 1,1
 14812  0B89  30FF               	movlw	255
 14813  0B8A  0581               	andwf	1,f
 14814  0B8B  3141               	addfsr 1,1
 14815  0B8C  3000               	movlw	0
 14816  0B8D  0581               	andwf	1,f
 14817  0B8E  3023               	movlw	low (__div_to_l_@f2| 0)
 14818  0B8F  0086               	movwf	6
 14819  0B90  0187               	clrf	7
 14820  0B91  3000               	movlw	0
 14821  0B92  0481               	iorwf	1,f
 14822  0B93  3141               	addfsr 1,1
 14823  0B94  3000               	movlw	0
 14824  0B95  0481               	iorwf	1,f
 14825  0B96  3141               	addfsr 1,1
 14826  0B97  3080               	movlw	128
 14827  0B98  0481               	iorwf	1,f
 14828  0B99  3141               	addfsr 1,1
 14829  0B9A  3000               	movlw	0
 14830  0B9B  0481               	iorwf	1,f
 14831  0B9C  3023               	movlw	low (__div_to_l_@f2| 0)
 14832  0B9D  0086               	movwf	6
 14833  0B9E  0187               	clrf	7
 14834  0B9F  30FF               	movlw	255
 14835  0BA0  0581               	andwf	1,f
 14836  0BA1  3141               	addfsr 1,1
 14837  0BA2  30FF               	movlw	255
 14838  0BA3  0581               	andwf	1,f
 14839  0BA4  3141               	addfsr 1,1
 14840  0BA5  30FF               	movlw	255
 14841  0BA6  0581               	andwf	1,f
 14842  0BA7  3141               	addfsr 1,1
 14843  0BA8  3000               	movlw	0
 14844  0BA9  0581               	andwf	1,f
 14845  0BAA  3000               	movlw	0
 14846  0BAB  00B1               	movwf	__div_to_l_@quot+3
 14847  0BAC  3000               	movlw	0
 14848  0BAD  00B0               	movwf	__div_to_l_@quot+2
 14849  0BAE  3000               	movlw	0
 14850  0BAF  00AF               	movwf	__div_to_l_@quot+1
 14851  0BB0  3000               	movlw	0
 14852  0BB1  00AE               	movwf	__div_to_l_@quot
 14853  0BB2  307F               	movlw	127
 14854  0BB3  02B3               	subwf	__div_to_l_@exp1,f
 14855  0BB4  30A0               	movlw	160
 14856  0BB5  0732               	addwf	__div_to_l_@cntr,w
 14857  0BB6  00A6               	movwf	??__div_to_l_
 14858  0BB7  0826               	movf	??__div_to_l_,w
 14859  0BB8  02B3               	subwf	__div_to_l_@exp1,f
 14860  0BB9  3020               	movlw	32
 14861  0BBA  00A6               	movwf	??__div_to_l_
 14862  0BBB  0826               	movf	??__div_to_l_,w
 14863  0BBC  00B2               	movwf	__div_to_l_@cntr
 14864  0BBD                     l5465:	
 14865  0BBD  3001               	movlw	1
 14866  0BBE                     u6165:	
 14867  0BBE  35AE               	lslf	__div_to_l_@quot,f
 14868  0BBF  0DAF               	rlf	__div_to_l_@quot+1,f
 14869  0BC0  0DB0               	rlf	__div_to_l_@quot+2,f
 14870  0BC1  0DB1               	rlf	__div_to_l_@quot+3,f
 14871  0BC2  0B89               	decfsz	9,f
 14872  0BC3  2BBE               	goto	u6165
 14873  0BC4  3023               	movlw	low (__div_to_l_@f2| 0)
 14874  0BC5  0086               	movwf	6
 14875  0BC6  0187               	clrf	7
 14876  0BC7  3F40               	moviw [0]fsr1
 14877  0BC8  00A6               	movwf	??__div_to_l_
 14878  0BC9  3F41               	moviw [1]fsr1
 14879  0BCA  00A7               	movwf	??__div_to_l_+1
 14880  0BCB  3F42               	moviw [2]fsr1
 14881  0BCC  00A8               	movwf	??__div_to_l_+2
 14882  0BCD  3F43               	moviw [3]fsr1
 14883  0BCE  00A9               	movwf	??__div_to_l_+3
 14884  0BCF  3020               	movlw	low (__div_to_l_@f1| 0)
 14885  0BD0  0086               	movwf	6
 14886  0BD1  0187               	clrf	7
 14887  0BD2  3F40               	moviw [0]fsr1
 14888  0BD3  00AA               	movwf	??__div_to_l_+4
 14889  0BD4  3F41               	moviw [1]fsr1
 14890  0BD5  00AB               	movwf	??__div_to_l_+5
 14891  0BD6  3F42               	moviw [2]fsr1
 14892  0BD7  00AC               	movwf	??__div_to_l_+6
 14893  0BD8  3F43               	moviw [3]fsr1
 14894  0BD9  00AD               	movwf	??__div_to_l_+7
 14895  0BDA  0829               	movf	??__div_to_l_+3,w
 14896  0BDB  022D               	subwf	??__div_to_l_+7,w
 14897  0BDC  1D03               	skipz
 14898  0BDD  2BE8               	goto	u6175
 14899  0BDE  0828               	movf	??__div_to_l_+2,w
 14900  0BDF  022C               	subwf	??__div_to_l_+6,w
 14901  0BE0  1D03               	skipz
 14902  0BE1  2BE8               	goto	u6175
 14903  0BE2  0827               	movf	??__div_to_l_+1,w
 14904  0BE3  022B               	subwf	??__div_to_l_+5,w
 14905  0BE4  1D03               	skipz
 14906  0BE5  2BE8               	goto	u6175
 14907  0BE6  0826               	movf	??__div_to_l_,w
 14908  0BE7  022A               	subwf	??__div_to_l_+4,w
 14909  0BE8                     u6175:	
 14910  0BE8  1C03               	skipc
 14911  0BE9  2C05               	goto	l5473
 14912  0BEA  3023               	movlw	low (__div_to_l_@f2| 0)
 14913  0BEB  0086               	movwf	6
 14914  0BEC  0187               	clrf	7
 14915  0BED  3F40               	moviw [0]fsr1
 14916  0BEE  00A6               	movwf	??__div_to_l_
 14917  0BEF  3F41               	moviw [1]fsr1
 14918  0BF0  00A7               	movwf	??__div_to_l_+1
 14919  0BF1  3F42               	moviw [2]fsr1
 14920  0BF2  00A8               	movwf	??__div_to_l_+2
 14921  0BF3  3F43               	moviw [3]fsr1
 14922  0BF4  00A9               	movwf	??__div_to_l_+3
 14923  0BF5  3020               	movlw	low (__div_to_l_@f1| 0)
 14924  0BF6  0086               	movwf	6
 14925  0BF7  0187               	clrf	7
 14926  0BF8  0826               	movf	??__div_to_l_,w
 14927  0BF9  0281               	subwf	1,f
 14928  0BFA  3141               	addfsr 1,1
 14929  0BFB  0827               	movf	??__div_to_l_+1,w
 14930  0BFC  3B81               	subwfb	1,f
 14931  0BFD  3141               	addfsr 1,1
 14932  0BFE  0828               	movf	??__div_to_l_+2,w
 14933  0BFF  3B81               	subwfb	1,f
 14934  0C00  3141               	addfsr 1,1
 14935  0C01  0829               	movf	??__div_to_l_+3,w
 14936  0C02  3B81               	subwfb	1,f
 14937  0C03  317D               	addfsr 1,-3
 14938  0C04  142E               	bsf	__div_to_l_@quot,0
 14939  0C05                     l5473:	
 14940  0C05  3020               	movlw	low (__div_to_l_@f1| 0)
 14941  0C06  0086               	movwf	6
 14942  0C07  0187               	clrf	7
 14943  0C08  3581               	lslf	1,f
 14944  0C09  3141               	addfsr 1,1
 14945  0C0A  0D81               	rlf	1,f
 14946  0C0B  3141               	addfsr 1,1
 14947  0C0C  0D81               	rlf	1,f
 14948  0C0D  3141               	addfsr 1,1
 14949  0C0E  0D81               	rlf	1,f
 14950  0C0F  317D               	addfsr 1,-3
 14951  0C10  3001               	movlw	1
 14952  0C11  02B2               	subwf	__div_to_l_@cntr,f
 14953  0C12  1D03               	btfss	3,2
 14954  0C13  2BBD               	goto	l5465
 14955  0C14  1FB3               	btfss	__div_to_l_@exp1,7
 14956  0C15  2C32               	goto	l5485
 14957  0C16  0833               	movf	__div_to_l_@exp1,w
 14958  0C17  3A80               	xorlw	128
 14959  0C18  3E9F               	addlw	159
 14960  0C19  1803               	skipnc
 14961  0C1A  2C24               	goto	l5483
 14962  0C1B  3000               	movlw	0
 14963  0C1C  00A3               	movwf	?__div_to_l_+3
 14964  0C1D  3000               	movlw	0
 14965  0C1E  00A2               	movwf	?__div_to_l_+2
 14966  0C1F  3000               	movlw	0
 14967  0C20  00A1               	movwf	?__div_to_l_+1
 14968  0C21  3000               	movlw	0
 14969  0C22  00A0               	movwf	?__div_to_l_
 14970  0C23  0008               	return
 14971  0C24                     l5483:	
 14972  0C24  3001               	movlw	1
 14973  0C25                     u6215:	
 14974  0C25  36B1               	lsrf	__div_to_l_@quot+3,f
 14975  0C26  0CB0               	rrf	__div_to_l_@quot+2,f
 14976  0C27  0CAF               	rrf	__div_to_l_@quot+1,f
 14977  0C28  0CAE               	rrf	__div_to_l_@quot,f
 14978  0C29  0B89               	decfsz	9,f
 14979  0C2A  2C25               	goto	u6215
 14980  0C2B  3001               	movlw	1
 14981  0C2C  00A6               	movwf	??__div_to_l_
 14982  0C2D  0826               	movf	??__div_to_l_,w
 14983  0C2E  07B3               	addwf	__div_to_l_@exp1,f
 14984  0C2F  1903               	btfsc	3,2
 14985  0C30  2C4B               	goto	l5493
 14986  0C31  2C24               	goto	l5483
 14987  0C32                     l5485:	
 14988  0C32  3020               	movlw	32
 14989  0C33  0233               	subwf	__div_to_l_@exp1,w
 14990  0C34  1C03               	skipc
 14991  0C35  2C48               	goto	l1210
 14992  0C36  3000               	movlw	0
 14993  0C37  00A3               	movwf	?__div_to_l_+3
 14994  0C38  3000               	movlw	0
 14995  0C39  00A2               	movwf	?__div_to_l_+2
 14996  0C3A  3000               	movlw	0
 14997  0C3B  00A1               	movwf	?__div_to_l_+1
 14998  0C3C  3000               	movlw	0
 14999  0C3D  00A0               	movwf	?__div_to_l_
 15000  0C3E  0008               	return
 15001  0C3F                     l5491:	
 15002  0C3F  3001               	movlw	1
 15003  0C40                     u6245:	
 15004  0C40  35AE               	lslf	__div_to_l_@quot,f
 15005  0C41  0DAF               	rlf	__div_to_l_@quot+1,f
 15006  0C42  0DB0               	rlf	__div_to_l_@quot+2,f
 15007  0C43  0DB1               	rlf	__div_to_l_@quot+3,f
 15008  0C44  0B89               	decfsz	9,f
 15009  0C45  2C40               	goto	u6245
 15010  0C46  3001               	movlw	1
 15011  0C47  02B3               	subwf	__div_to_l_@exp1,f
 15012  0C48                     l1210:	
 15013  0C48  0833               	movf	__div_to_l_@exp1,w
 15014  0C49  1D03               	btfss	3,2
 15015  0C4A  2C3F               	goto	l5491
 15016  0C4B                     l5493:	
 15017  0C4B  0831               	movf	__div_to_l_@quot+3,w
 15018  0C4C  00A3               	movwf	?__div_to_l_+3
 15019  0C4D  0830               	movf	__div_to_l_@quot+2,w
 15020  0C4E  00A2               	movwf	?__div_to_l_+2
 15021  0C4F  082F               	movf	__div_to_l_@quot+1,w
 15022  0C50  00A1               	movwf	?__div_to_l_+1
 15023  0C51  082E               	movf	__div_to_l_@quot,w
 15024  0C52  00A0               	movwf	?__div_to_l_
 15025  0C53  0008               	return
 15026  0C54                     __end_of__div_to_l_:	
 15027                           
 15028                           	psect	text51
 15029  0803                     __ptext51:	
 15030 ;; *************** function ___lltoft *****************
 15031 ;; Defined at:
 15032 ;;		line 35 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 15033 ;; Parameters:    Size  Location     Type
 15034 ;;  c               4    5[BANK0 ] unsigned long 
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  exp             1   10[BANK0 ] unsigned char 
 15037 ;; Return value:  Size  Location     Type
 15038 ;;                  3    5[BANK0 ] float 
 15039 ;; Registers used:
 15040 ;;		wreg, status,2, status,0, pclath, cstack
 15041 ;; Tracked objects:
 15042 ;;		On entry : 0/0
 15043 ;;		On exit  : 0/0
 15044 ;;		Unchanged: 0/0
 15045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15050 ;;Total ram usage:        6 bytes
 15051 ;; Hardware stack levels used:    1
 15052 ;; Hardware stack levels required when called:    4
 15053 ;; This function calls:
 15054 ;;		___ftpack
 15055 ;; This function is called by:
 15056 ;;		_sprintf
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           
 15061                           ;psect for function ___lltoft
 15062  0803                     ___lltoft:	
 15063                           
 15064                           ;incstack = 0
 15065                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 15066  0803  308E               	movlw	142
 15067  0804  0140               	movlb	0	; select bank0
 15068  0805  00A9               	movwf	??___lltoft
 15069  0806  0829               	movf	??___lltoft,w
 15070  0807  00AA               	movwf	___lltoft@exp
 15071  0808                     l5623:	
 15072  0808  30FF               	movlw	255
 15073  0809  0528               	andwf	___lltoft@c+3,w
 15074  080A  1903               	btfsc	3,2
 15075  080B  2818               	goto	l5625
 15076  080C  3001               	movlw	1
 15077  080D                     u6545:	
 15078  080D  36A8               	lsrf	___lltoft@c+3,f
 15079  080E  0CA7               	rrf	___lltoft@c+2,f
 15080  080F  0CA6               	rrf	___lltoft@c+1,f
 15081  0810  0CA5               	rrf	___lltoft@c,f
 15082  0811  0B89               	decfsz	9,f
 15083  0812  280D               	goto	u6545
 15084  0813  3001               	movlw	1
 15085  0814  00A9               	movwf	??___lltoft
 15086  0815  0829               	movf	??___lltoft,w
 15087  0816  07AA               	addwf	___lltoft@exp,f
 15088  0817  2808               	goto	l5623
 15089  0818                     l5625:	
 15090  0818  0825               	movf	___lltoft@c,w
 15091  0819  00A0               	movwf	___ftpack@arg
 15092  081A  0826               	movf	___lltoft@c+1,w
 15093  081B  00A1               	movwf	___ftpack@arg+1
 15094  081C  0827               	movf	___lltoft@c+2,w
 15095  081D  00A2               	movwf	___ftpack@arg+2
 15096  081E  082A               	movf	___lltoft@exp,w
 15097  081F  00A9               	movwf	??___lltoft
 15098  0820  0829               	movf	??___lltoft,w
 15099  0821  00A3               	movwf	___ftpack@exp
 15100  0822  01A4               	clrf	___ftpack@sign
 15101  0823  3195  2538         	fcall	___ftpack
 15102  0825  0140               	movlb	0	; select bank0
 15103  0826  0820               	movf	?___ftpack,w
 15104  0827  00A5               	movwf	?___lltoft
 15105  0828  0821               	movf	?___ftpack+1,w
 15106  0829  00A6               	movwf	?___lltoft+1
 15107  082A  0822               	movf	?___ftpack+2,w
 15108  082B  00A7               	movwf	?___lltoft+2
 15109  082C  0008               	return
 15110  082D                     __end_of___lltoft:	
 15111                           
 15112                           	psect	text52
 15113  1369                     __ptext52:	
 15114 ;; *************** function ___llmod *****************
 15115 ;; Defined at:
 15116 ;;		line 6 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;  divisor         4   13[BANK0 ] unsigned long 
 15119 ;;  dividend        4   17[BANK0 ] unsigned long 
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;  counter         1    6[COMMON] unsigned char 
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  4   13[BANK0 ] unsigned long 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2, status,0
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15131 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15134 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15135 ;;Total ram usage:       10 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:    3
 15138 ;; This function calls:
 15139 ;;		Nothing
 15140 ;; This function is called by:
 15141 ;;		_sprintf
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           
 15146                           ;psect for function ___llmod
 15147  1369                     ___llmod:	
 15148                           
 15149                           ;incstack = 0
 15150                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 15151  1369  0140               	movlb	0	; select bank0
 15152  136A  0830               	movf	___llmod@divisor+3,w
 15153  136B  042F               	iorwf	___llmod@divisor+2,w
 15154  136C  042E               	iorwf	___llmod@divisor+1,w
 15155  136D  042D               	iorwf	___llmod@divisor,w
 15156  136E  1903               	skipnz
 15157  136F  2BA3               	goto	l5615
 15158  1370  01F6               	clrf	___llmod@counter
 15159  1371  0AF6               	incf	___llmod@counter,f
 15160  1372                     l5605:	
 15161  1372  1BB0               	btfsc	___llmod@divisor+3,7
 15162  1373  2B80               	goto	l5607
 15163  1374  3001               	movlw	1
 15164  1375                     u6495:	
 15165  1375  35AD               	lslf	___llmod@divisor,f
 15166  1376  0DAE               	rlf	___llmod@divisor+1,f
 15167  1377  0DAF               	rlf	___llmod@divisor+2,f
 15168  1378  0DB0               	rlf	___llmod@divisor+3,f
 15169  1379  0B89               	decfsz	9,f
 15170  137A  2B75               	goto	u6495
 15171  137B  3001               	movlw	1
 15172  137C  00F5               	movwf	??___llmod
 15173  137D  0875               	movf	??___llmod,w
 15174  137E  07F6               	addwf	___llmod@counter,f
 15175  137F  2B72               	goto	l5605
 15176  1380                     l5607:	
 15177  1380  0830               	movf	___llmod@divisor+3,w
 15178  1381  0234               	subwf	___llmod@dividend+3,w
 15179  1382  1D03               	skipz
 15180  1383  2B8E               	goto	u6515
 15181  1384  082F               	movf	___llmod@divisor+2,w
 15182  1385  0233               	subwf	___llmod@dividend+2,w
 15183  1386  1D03               	skipz
 15184  1387  2B8E               	goto	u6515
 15185  1388  082E               	movf	___llmod@divisor+1,w
 15186  1389  0232               	subwf	___llmod@dividend+1,w
 15187  138A  1D03               	skipz
 15188  138B  2B8E               	goto	u6515
 15189  138C  082D               	movf	___llmod@divisor,w
 15190  138D  0231               	subwf	___llmod@dividend,w
 15191  138E                     u6515:	
 15192  138E  1C03               	skipc
 15193  138F  2B98               	goto	l5611
 15194  1390  082D               	movf	___llmod@divisor,w
 15195  1391  02B1               	subwf	___llmod@dividend,f
 15196  1392  082E               	movf	___llmod@divisor+1,w
 15197  1393  3BB2               	subwfb	___llmod@dividend+1,f
 15198  1394  082F               	movf	___llmod@divisor+2,w
 15199  1395  3BB3               	subwfb	___llmod@dividend+2,f
 15200  1396  0830               	movf	___llmod@divisor+3,w
 15201  1397  3BB4               	subwfb	___llmod@dividend+3,f
 15202  1398                     l5611:	
 15203  1398  3001               	movlw	1
 15204  1399                     u6525:	
 15205  1399  36B0               	lsrf	___llmod@divisor+3,f
 15206  139A  0CAF               	rrf	___llmod@divisor+2,f
 15207  139B  0CAE               	rrf	___llmod@divisor+1,f
 15208  139C  0CAD               	rrf	___llmod@divisor,f
 15209  139D  0B89               	decfsz	9,f
 15210  139E  2B99               	goto	u6525
 15211  139F  3001               	movlw	1
 15212  13A0  02F6               	subwf	___llmod@counter,f
 15213  13A1  1D03               	btfss	3,2
 15214  13A2  2B80               	goto	l5607
 15215  13A3                     l5615:	
 15216  13A3  0834               	movf	___llmod@dividend+3,w
 15217  13A4  00B0               	movwf	?___llmod+3
 15218  13A5  0833               	movf	___llmod@dividend+2,w
 15219  13A6  00AF               	movwf	?___llmod+2
 15220  13A7  0832               	movf	___llmod@dividend+1,w
 15221  13A8  00AE               	movwf	?___llmod+1
 15222  13A9  0831               	movf	___llmod@dividend,w
 15223  13AA  00AD               	movwf	?___llmod
 15224  13AB  0008               	return
 15225  13AC                     __end_of___llmod:	
 15226                           
 15227                           	psect	text53
 15228  1492                     __ptext53:	
 15229 ;; *************** function ___lldiv *****************
 15230 ;; Defined at:
 15231 ;;		line 6 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 15232 ;; Parameters:    Size  Location     Type
 15233 ;;  divisor         4    0[BANK0 ] unsigned long 
 15234 ;;  dividend        4    4[BANK0 ] unsigned long 
 15235 ;; Auto vars:     Size  Location     Type
 15236 ;;  quotient        4    8[BANK0 ] unsigned long 
 15237 ;;  counter         1   12[BANK0 ] unsigned char 
 15238 ;; Return value:  Size  Location     Type
 15239 ;;                  4    0[BANK0 ] unsigned long 
 15240 ;; Registers used:
 15241 ;;		wreg, status,2, status,0
 15242 ;; Tracked objects:
 15243 ;;		On entry : 0/0
 15244 ;;		On exit  : 0/0
 15245 ;;		Unchanged: 0/0
 15246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15247 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15248 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15250 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15251 ;;Total ram usage:       14 bytes
 15252 ;; Hardware stack levels used:    1
 15253 ;; Hardware stack levels required when called:    3
 15254 ;; This function calls:
 15255 ;;		Nothing
 15256 ;; This function is called by:
 15257 ;;		_sprintf
 15258 ;; This function uses a non-reentrant model
 15259 ;;
 15260                           
 15261                           
 15262                           ;psect for function ___lldiv
 15263  1492                     ___lldiv:	
 15264                           
 15265                           ;incstack = 0
 15266                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 15267  1492  3000               	movlw	0
 15268  1493  0140               	movlb	0	; select bank0
 15269  1494  00AB               	movwf	___lldiv@quotient+3
 15270  1495  3000               	movlw	0
 15271  1496  00AA               	movwf	___lldiv@quotient+2
 15272  1497  3000               	movlw	0
 15273  1498  00A9               	movwf	___lldiv@quotient+1
 15274  1499  3000               	movlw	0
 15275  149A  00A8               	movwf	___lldiv@quotient
 15276  149B  0823               	movf	___lldiv@divisor+3,w
 15277  149C  0422               	iorwf	___lldiv@divisor+2,w
 15278  149D  0421               	iorwf	___lldiv@divisor+1,w
 15279  149E  0420               	iorwf	___lldiv@divisor,w
 15280  149F  1903               	skipnz
 15281  14A0  2CDC               	goto	l5595
 15282  14A1  01AC               	clrf	___lldiv@counter
 15283  14A2  0AAC               	incf	___lldiv@counter,f
 15284  14A3                     l5581:	
 15285  14A3  1BA3               	btfsc	___lldiv@divisor+3,7
 15286  14A4  2CB1               	goto	l5583
 15287  14A5  3001               	movlw	1
 15288  14A6                     u6425:	
 15289  14A6  35A0               	lslf	___lldiv@divisor,f
 15290  14A7  0DA1               	rlf	___lldiv@divisor+1,f
 15291  14A8  0DA2               	rlf	___lldiv@divisor+2,f
 15292  14A9  0DA3               	rlf	___lldiv@divisor+3,f
 15293  14AA  0B89               	decfsz	9,f
 15294  14AB  2CA6               	goto	u6425
 15295  14AC  3001               	movlw	1
 15296  14AD  00F4               	movwf	??___lldiv
 15297  14AE  0874               	movf	??___lldiv,w
 15298  14AF  07AC               	addwf	___lldiv@counter,f
 15299  14B0  2CA3               	goto	l5581
 15300  14B1                     l5583:	
 15301  14B1  3001               	movlw	1
 15302  14B2                     u6445:	
 15303  14B2  35A8               	lslf	___lldiv@quotient,f
 15304  14B3  0DA9               	rlf	___lldiv@quotient+1,f
 15305  14B4  0DAA               	rlf	___lldiv@quotient+2,f
 15306  14B5  0DAB               	rlf	___lldiv@quotient+3,f
 15307  14B6  0B89               	decfsz	9,f
 15308  14B7  2CB2               	goto	u6445
 15309  14B8  0823               	movf	___lldiv@divisor+3,w
 15310  14B9  0227               	subwf	___lldiv@dividend+3,w
 15311  14BA  1D03               	skipz
 15312  14BB  2CC6               	goto	u6455
 15313  14BC  0822               	movf	___lldiv@divisor+2,w
 15314  14BD  0226               	subwf	___lldiv@dividend+2,w
 15315  14BE  1D03               	skipz
 15316  14BF  2CC6               	goto	u6455
 15317  14C0  0821               	movf	___lldiv@divisor+1,w
 15318  14C1  0225               	subwf	___lldiv@dividend+1,w
 15319  14C2  1D03               	skipz
 15320  14C3  2CC6               	goto	u6455
 15321  14C4  0820               	movf	___lldiv@divisor,w
 15322  14C5  0224               	subwf	___lldiv@dividend,w
 15323  14C6                     u6455:	
 15324  14C6  1C03               	skipc
 15325  14C7  2CD1               	goto	l5591
 15326  14C8  0820               	movf	___lldiv@divisor,w
 15327  14C9  02A4               	subwf	___lldiv@dividend,f
 15328  14CA  0821               	movf	___lldiv@divisor+1,w
 15329  14CB  3BA5               	subwfb	___lldiv@dividend+1,f
 15330  14CC  0822               	movf	___lldiv@divisor+2,w
 15331  14CD  3BA6               	subwfb	___lldiv@dividend+2,f
 15332  14CE  0823               	movf	___lldiv@divisor+3,w
 15333  14CF  3BA7               	subwfb	___lldiv@dividend+3,f
 15334  14D0  1428               	bsf	___lldiv@quotient,0
 15335  14D1                     l5591:	
 15336  14D1  3001               	movlw	1
 15337  14D2                     u6465:	
 15338  14D2  36A3               	lsrf	___lldiv@divisor+3,f
 15339  14D3  0CA2               	rrf	___lldiv@divisor+2,f
 15340  14D4  0CA1               	rrf	___lldiv@divisor+1,f
 15341  14D5  0CA0               	rrf	___lldiv@divisor,f
 15342  14D6  0B89               	decfsz	9,f
 15343  14D7  2CD2               	goto	u6465
 15344  14D8  3001               	movlw	1
 15345  14D9  02AC               	subwf	___lldiv@counter,f
 15346  14DA  1D03               	btfss	3,2
 15347  14DB  2CB1               	goto	l5583
 15348  14DC                     l5595:	
 15349  14DC  082B               	movf	___lldiv@quotient+3,w
 15350  14DD  00A3               	movwf	?___lldiv+3
 15351  14DE  082A               	movf	___lldiv@quotient+2,w
 15352  14DF  00A2               	movwf	?___lldiv+2
 15353  14E0  0829               	movf	___lldiv@quotient+1,w
 15354  14E1  00A1               	movwf	?___lldiv+1
 15355  14E2  0828               	movf	___lldiv@quotient,w
 15356  14E3  00A0               	movwf	?___lldiv
 15357  14E4  0008               	return
 15358  14E5                     __end_of___lldiv:	
 15359                           
 15360                           	psect	text54
 15361  159D                     __ptext54:	
 15362 ;; *************** function ___fttol *****************
 15363 ;; Defined at:
 15364 ;;		line 44 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;  f1              3   62[BANK0 ] float 
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;  lval            4   71[BANK0 ] unsigned long 
 15369 ;;  exp1            1   75[BANK0 ] unsigned char 
 15370 ;;  sign1           1   70[BANK0 ] unsigned char 
 15371 ;; Return value:  Size  Location     Type
 15372 ;;                  4   62[BANK0 ] long 
 15373 ;; Registers used:
 15374 ;;		wreg, status,2, status,0
 15375 ;; Tracked objects:
 15376 ;;		On entry : 0/0
 15377 ;;		On exit  : 0/0
 15378 ;;		Unchanged: 0/0
 15379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15381 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15383 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15384 ;;Total ram usage:       14 bytes
 15385 ;; Hardware stack levels used:    1
 15386 ;; Hardware stack levels required when called:    3
 15387 ;; This function calls:
 15388 ;;		Nothing
 15389 ;; This function is called by:
 15390 ;;		_measureInput
 15391 ;;		_measureTemp
 15392 ;;		_printCapa
 15393 ;;		_sprintf
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397                           
 15398                           ;psect for function ___fttol
 15399  159D                     ___fttol:	
 15400                           
 15401                           ;incstack = 0
 15402                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 15403  159D  0140               	movlb	0	; select bank0
 15404  159E  085E               	movf	___fttol@f1,w
 15405  159F  00E2               	movwf	??___fttol
 15406  15A0  085F               	movf	___fttol@f1+1,w
 15407  15A1  00E3               	movwf	??___fttol+1
 15408  15A2  0860               	movf	___fttol@f1+2,w
 15409  15A3  00E4               	movwf	??___fttol+2
 15410  15A4  1003               	clrc
 15411  15A5  0D63               	rlf	??___fttol+1,w
 15412  15A6  0D64               	rlf	??___fttol+2,w
 15413  15A7  00E5               	movwf	??___fttol+3
 15414  15A8  0865               	movf	??___fttol+3,w
 15415  15A9  00EB               	movwf	___fttol@exp1
 15416  15AA  086B               	movf	___fttol@exp1,w
 15417  15AB  1D03               	btfss	3,2
 15418  15AC  2DB6               	goto	l5539
 15419  15AD  3000               	movlw	0
 15420  15AE  00E1               	movwf	?___fttol+3
 15421  15AF  3000               	movlw	0
 15422  15B0  00E0               	movwf	?___fttol+2
 15423  15B1  3000               	movlw	0
 15424  15B2  00DF               	movwf	?___fttol+1
 15425  15B3  3000               	movlw	0
 15426  15B4  00DE               	movwf	?___fttol
 15427  15B5  0008               	return
 15428  15B6                     l5539:	
 15429  15B6  085E               	movf	___fttol@f1,w
 15430  15B7  00E2               	movwf	??___fttol
 15431  15B8  085F               	movf	___fttol@f1+1,w
 15432  15B9  00E3               	movwf	??___fttol+1
 15433  15BA  0860               	movf	___fttol@f1+2,w
 15434  15BB  00E4               	movwf	??___fttol+2
 15435  15BC  3017               	movlw	23
 15436  15BD                     u6325:	
 15437  15BD  36E4               	lsrf	??___fttol+2,f
 15438  15BE  0CE3               	rrf	??___fttol+1,f
 15439  15BF  0CE2               	rrf	??___fttol,f
 15440  15C0  0B89               	decfsz	9,f
 15441  15C1  2DBD               	goto	u6325
 15442  15C2  0862               	movf	??___fttol,w
 15443  15C3  00E5               	movwf	??___fttol+3
 15444  15C4  0865               	movf	??___fttol+3,w
 15445  15C5  00E6               	movwf	___fttol@sign1
 15446  15C6  17DF               	bsf	___fttol@f1+1,7
 15447  15C7  30FF               	movlw	255
 15448  15C8  05DE               	andwf	___fttol@f1,f
 15449  15C9  30FF               	movlw	255
 15450  15CA  05DF               	andwf	___fttol@f1+1,f
 15451  15CB  3000               	movlw	0
 15452  15CC  05E0               	andwf	___fttol@f1+2,f
 15453  15CD  085E               	movf	___fttol@f1,w
 15454  15CE  00E7               	movwf	___fttol@lval
 15455  15CF  085F               	movf	___fttol@f1+1,w
 15456  15D0  00E8               	movwf	___fttol@lval+1
 15457  15D1  0860               	movf	___fttol@f1+2,w
 15458  15D2  00E9               	movwf	___fttol@lval+2
 15459  15D3  01EA               	clrf	___fttol@lval+3
 15460  15D4  308E               	movlw	142
 15461  15D5  02EB               	subwf	___fttol@exp1,f
 15462  15D6  1FEB               	btfss	___fttol@exp1,7
 15463  15D7  2DF4               	goto	l5559
 15464  15D8  086B               	movf	___fttol@exp1,w
 15465  15D9  3A80               	xorlw	128
 15466  15DA  3E8F               	addlw	143
 15467  15DB  1803               	skipnc
 15468  15DC  2DE6               	goto	l5557
 15469  15DD  3000               	movlw	0
 15470  15DE  00E1               	movwf	?___fttol+3
 15471  15DF  3000               	movlw	0
 15472  15E0  00E0               	movwf	?___fttol+2
 15473  15E1  3000               	movlw	0
 15474  15E2  00DF               	movwf	?___fttol+1
 15475  15E3  3000               	movlw	0
 15476  15E4  00DE               	movwf	?___fttol
 15477  15E5  0008               	return
 15478  15E6                     l5557:	
 15479  15E6  3001               	movlw	1
 15480  15E7                     u6355:	
 15481  15E7  36EA               	lsrf	___fttol@lval+3,f
 15482  15E8  0CE9               	rrf	___fttol@lval+2,f
 15483  15E9  0CE8               	rrf	___fttol@lval+1,f
 15484  15EA  0CE7               	rrf	___fttol@lval,f
 15485  15EB  0B89               	decfsz	9,f
 15486  15EC  2DE7               	goto	u6355
 15487  15ED  3001               	movlw	1
 15488  15EE  00E2               	movwf	??___fttol
 15489  15EF  0862               	movf	??___fttol,w
 15490  15F0  07EB               	addwf	___fttol@exp1,f
 15491  15F1  1903               	btfsc	3,2
 15492  15F2  2E0D               	goto	l5567
 15493  15F3  2DE6               	goto	l5557
 15494  15F4                     l5559:	
 15495  15F4  3018               	movlw	24
 15496  15F5  026B               	subwf	___fttol@exp1,w
 15497  15F6  1C03               	skipc
 15498  15F7  2E0A               	goto	l1330
 15499  15F8  3000               	movlw	0
 15500  15F9  00E1               	movwf	?___fttol+3
 15501  15FA  3000               	movlw	0
 15502  15FB  00E0               	movwf	?___fttol+2
 15503  15FC  3000               	movlw	0
 15504  15FD  00DF               	movwf	?___fttol+1
 15505  15FE  3000               	movlw	0
 15506  15FF  00DE               	movwf	?___fttol
 15507  1600  0008               	return
 15508  1601                     l5565:	
 15509  1601  3001               	movlw	1
 15510  1602                     u6385:	
 15511  1602  35E7               	lslf	___fttol@lval,f
 15512  1603  0DE8               	rlf	___fttol@lval+1,f
 15513  1604  0DE9               	rlf	___fttol@lval+2,f
 15514  1605  0DEA               	rlf	___fttol@lval+3,f
 15515  1606  0B89               	decfsz	9,f
 15516  1607  2E02               	goto	u6385
 15517  1608  3001               	movlw	1
 15518  1609  02EB               	subwf	___fttol@exp1,f
 15519  160A                     l1330:	
 15520  160A  086B               	movf	___fttol@exp1,w
 15521  160B  1D03               	btfss	3,2
 15522  160C  2E01               	goto	l5565
 15523  160D                     l5567:	
 15524  160D  0866               	movf	___fttol@sign1,w
 15525  160E  1903               	btfsc	3,2
 15526  160F  2E1B               	goto	l5571
 15527  1610  09E7               	comf	___fttol@lval,f
 15528  1611  09E8               	comf	___fttol@lval+1,f
 15529  1612  09E9               	comf	___fttol@lval+2,f
 15530  1613  09EA               	comf	___fttol@lval+3,f
 15531  1614  0AE7               	incf	___fttol@lval,f
 15532  1615  1903               	skipnz
 15533  1616  0AE8               	incf	___fttol@lval+1,f
 15534  1617  1903               	skipnz
 15535  1618  0AE9               	incf	___fttol@lval+2,f
 15536  1619  1903               	skipnz
 15537  161A  0AEA               	incf	___fttol@lval+3,f
 15538  161B                     l5571:	
 15539  161B  086A               	movf	___fttol@lval+3,w
 15540  161C  00E1               	movwf	?___fttol+3
 15541  161D  0869               	movf	___fttol@lval+2,w
 15542  161E  00E0               	movwf	?___fttol+2
 15543  161F  0868               	movf	___fttol@lval+1,w
 15544  1620  00DF               	movwf	?___fttol+1
 15545  1621  0867               	movf	___fttol@lval,w
 15546  1622  00DE               	movwf	?___fttol
 15547  1623  0008               	return
 15548  1624                     __end_of___fttol:	
 15549                           
 15550                           	psect	text55
 15551  1FE2                     __ptext55:	
 15552 ;; *************** function ___ftsub *****************
 15553 ;; Defined at:
 15554 ;;		line 18 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 15555 ;; Parameters:    Size  Location     Type
 15556 ;;  f2              3   62[BANK0 ] float 
 15557 ;;  f1              3   65[BANK0 ] float 
 15558 ;; Auto vars:     Size  Location     Type
 15559 ;;		None
 15560 ;; Return value:  Size  Location     Type
 15561 ;;                  3   62[BANK0 ] float 
 15562 ;; Registers used:
 15563 ;;		wreg, status,2, status,0, pclath, cstack
 15564 ;; Tracked objects:
 15565 ;;		On entry : 0/0
 15566 ;;		On exit  : 0/0
 15567 ;;		Unchanged: 0/0
 15568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15569 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15572 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15573 ;;Total ram usage:        6 bytes
 15574 ;; Hardware stack levels used:    1
 15575 ;; Hardware stack levels required when called:    5
 15576 ;; This function calls:
 15577 ;;		___ftadd
 15578 ;; This function is called by:
 15579 ;;		_sprintf
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           
 15584                           ;psect for function ___ftsub
 15585  1FE2                     ___ftsub:	
 15586                           
 15587                           ;incstack = 0
 15588                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 15589  1FE2  0140               	movlb	0	; select bank0
 15590  1FE3  0860               	movf	___ftsub@f2+2,w
 15591  1FE4  045F               	iorwf	___ftsub@f2+1,w
 15592  1FE5  045E               	iorwf	___ftsub@f2,w
 15593  1FE6  1903               	skipnz
 15594  1FE7  2FEA               	goto	l5529
 15595  1FE8  3080               	movlw	128
 15596  1FE9  06E0               	xorwf	___ftsub@f2+2,f
 15597  1FEA                     l5529:	
 15598  1FEA  0861               	movf	___ftsub@f1,w
 15599  1FEB  00D1               	movwf	___ftadd@f1
 15600  1FEC  0862               	movf	___ftsub@f1+1,w
 15601  1FED  00D2               	movwf	___ftadd@f1+1
 15602  1FEE  0863               	movf	___ftsub@f1+2,w
 15603  1FEF  00D3               	movwf	___ftadd@f1+2
 15604  1FF0  085E               	movf	___ftsub@f2,w
 15605  1FF1  00D4               	movwf	___ftadd@f2
 15606  1FF2  085F               	movf	___ftsub@f2+1,w
 15607  1FF3  00D5               	movwf	___ftadd@f2+1
 15608  1FF4  0860               	movf	___ftsub@f2+2,w
 15609  1FF5  00D6               	movwf	___ftadd@f2+2
 15610  1FF6  318A  2241         	fcall	___ftadd
 15611  1FF8  0140               	movlb	0	; select bank0
 15612  1FF9  0851               	movf	?___ftadd,w
 15613  1FFA  00DE               	movwf	?___ftsub
 15614  1FFB  0852               	movf	?___ftadd+1,w
 15615  1FFC  00DF               	movwf	?___ftsub+1
 15616  1FFD  0853               	movf	?___ftadd+2,w
 15617  1FFE  00E0               	movwf	?___ftsub+2
 15618  1FFF  0008               	return
 15619  2000                     __end_of___ftsub:	
 15620                           
 15621                           	psect	text56
 15622  0A41                     __ptext56:	
 15623 ;; *************** function ___ftadd *****************
 15624 ;; Defined at:
 15625 ;;		line 86 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 15626 ;; Parameters:    Size  Location     Type
 15627 ;;  f1              3   49[BANK0 ] float 
 15628 ;;  f2              3   52[BANK0 ] float 
 15629 ;; Auto vars:     Size  Location     Type
 15630 ;;  exp1            1   61[BANK0 ] unsigned char 
 15631 ;;  exp2            1   60[BANK0 ] unsigned char 
 15632 ;;  sign            1   59[BANK0 ] unsigned char 
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  3   49[BANK0 ] float 
 15635 ;; Registers used:
 15636 ;;		wreg, status,2, status,0, pclath, cstack
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15642 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15643 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15644 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15645 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15646 ;;Total ram usage:       13 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    4
 15649 ;; This function calls:
 15650 ;;		___ftpack
 15651 ;; This function is called by:
 15652 ;;		_measureTemp
 15653 ;;		_sprintf
 15654 ;;		___ftsub
 15655 ;; This function uses a non-reentrant model
 15656 ;;
 15657                           
 15658                           
 15659                           ;psect for function ___ftadd
 15660  0A41                     ___ftadd:	
 15661                           
 15662                           ;incstack = 0
 15663                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 15664  0A41  0140               	movlb	0	; select bank0
 15665  0A42  0851               	movf	___ftadd@f1,w
 15666  0A43  00D7               	movwf	??___ftadd
 15667  0A44  0852               	movf	___ftadd@f1+1,w
 15668  0A45  00D8               	movwf	??___ftadd+1
 15669  0A46  0853               	movf	___ftadd@f1+2,w
 15670  0A47  00D9               	movwf	??___ftadd+2
 15671  0A48  1003               	clrc
 15672  0A49  0D58               	rlf	??___ftadd+1,w
 15673  0A4A  0D59               	rlf	??___ftadd+2,w
 15674  0A4B  00DA               	movwf	??___ftadd+3
 15675  0A4C  085A               	movf	??___ftadd+3,w
 15676  0A4D  00DD               	movwf	___ftadd@exp1
 15677  0A4E  0854               	movf	___ftadd@f2,w
 15678  0A4F  00D7               	movwf	??___ftadd
 15679  0A50  0855               	movf	___ftadd@f2+1,w
 15680  0A51  00D8               	movwf	??___ftadd+1
 15681  0A52  0856               	movf	___ftadd@f2+2,w
 15682  0A53  00D9               	movwf	??___ftadd+2
 15683  0A54  1003               	clrc
 15684  0A55  0D58               	rlf	??___ftadd+1,w
 15685  0A56  0D59               	rlf	??___ftadd+2,w
 15686  0A57  00DA               	movwf	??___ftadd+3
 15687  0A58  085A               	movf	??___ftadd+3,w
 15688  0A59  00DC               	movwf	___ftadd@exp2
 15689  0A5A  085D               	movf	___ftadd@exp1,w
 15690  0A5B  1903               	btfsc	3,2
 15691  0A5C  2A69               	goto	l5081
 15692  0A5D  085C               	movf	___ftadd@exp2,w
 15693  0A5E  025D               	subwf	___ftadd@exp1,w
 15694  0A5F  1803               	skipnc
 15695  0A60  2A70               	goto	l5085
 15696  0A61  035D               	decf	___ftadd@exp1,w
 15697  0A62  3AFF               	xorlw	255
 15698  0A63  075C               	addwf	___ftadd@exp2,w
 15699  0A64  00D7               	movwf	??___ftadd
 15700  0A65  3019               	movlw	25
 15701  0A66  0257               	subwf	??___ftadd,w
 15702  0A67  1C03               	skipc
 15703  0A68  2A70               	goto	l5085
 15704  0A69                     l5081:	
 15705  0A69  0854               	movf	___ftadd@f2,w
 15706  0A6A  00D1               	movwf	?___ftadd
 15707  0A6B  0855               	movf	___ftadd@f2+1,w
 15708  0A6C  00D2               	movwf	?___ftadd+1
 15709  0A6D  0856               	movf	___ftadd@f2+2,w
 15710  0A6E  00D3               	movwf	?___ftadd+2
 15711  0A6F  0008               	return
 15712  0A70                     l5085:	
 15713  0A70  085C               	movf	___ftadd@exp2,w
 15714  0A71  1903               	btfsc	3,2
 15715  0A72  0008               	return
 15716  0A73  085D               	movf	___ftadd@exp1,w
 15717  0A74  025C               	subwf	___ftadd@exp2,w
 15718  0A75  1803               	skipnc
 15719  0A76  2A7F               	goto	l5091
 15720  0A77  035C               	decf	___ftadd@exp2,w
 15721  0A78  3AFF               	xorlw	255
 15722  0A79  075D               	addwf	___ftadd@exp1,w
 15723  0A7A  00D7               	movwf	??___ftadd
 15724  0A7B  3019               	movlw	25
 15725  0A7C  0257               	subwf	??___ftadd,w
 15726  0A7D  1803               	btfsc	3,0
 15727  0A7E  0008               	return
 15728  0A7F                     l5091:	
 15729  0A7F  3006               	movlw	6
 15730  0A80  00D7               	movwf	??___ftadd
 15731  0A81  0857               	movf	??___ftadd,w
 15732  0A82  00DB               	movwf	___ftadd@sign
 15733  0A83  1BD3               	btfsc	___ftadd@f1+2,7
 15734  0A84  17DB               	bsf	___ftadd@sign,7
 15735  0A85  1BD6               	btfsc	___ftadd@f2+2,7
 15736  0A86  175B               	bsf	___ftadd@sign,6
 15737  0A87  17D2               	bsf	___ftadd@f1+1,7
 15738  0A88  30FF               	movlw	255
 15739  0A89  05D1               	andwf	___ftadd@f1,f
 15740  0A8A  30FF               	movlw	255
 15741  0A8B  05D2               	andwf	___ftadd@f1+1,f
 15742  0A8C  3000               	movlw	0
 15743  0A8D  05D3               	andwf	___ftadd@f1+2,f
 15744  0A8E  17D5               	bsf	___ftadd@f2+1,7
 15745  0A8F  30FF               	movlw	255
 15746  0A90  05D4               	andwf	___ftadd@f2,f
 15747  0A91  30FF               	movlw	255
 15748  0A92  05D5               	andwf	___ftadd@f2+1,f
 15749  0A93  3000               	movlw	0
 15750  0A94  05D6               	andwf	___ftadd@f2+2,f
 15751  0A95  085C               	movf	___ftadd@exp2,w
 15752  0A96  025D               	subwf	___ftadd@exp1,w
 15753  0A97  1803               	skipnc
 15754  0A98  2ABB               	goto	l5113
 15755  0A99                     l5103:	
 15756  0A99  3001               	movlw	1
 15757  0A9A                     u5635:	
 15758  0A9A  35D4               	lslf	___ftadd@f2,f
 15759  0A9B  0DD5               	rlf	___ftadd@f2+1,f
 15760  0A9C  0DD6               	rlf	___ftadd@f2+2,f
 15761  0A9D  0B89               	decfsz	9,f
 15762  0A9E  2A9A               	goto	u5635
 15763  0A9F  3001               	movlw	1
 15764  0AA0  02DC               	subwf	___ftadd@exp2,f
 15765  0AA1  085C               	movf	___ftadd@exp2,w
 15766  0AA2  065D               	xorwf	___ftadd@exp1,w
 15767  0AA3  1903               	skipnz
 15768  0AA4  2AB6               	goto	l5111
 15769  0AA5  3001               	movlw	1
 15770  0AA6  02DB               	subwf	___ftadd@sign,f
 15771  0AA7  085B               	movf	___ftadd@sign,w
 15772  0AA8  3907               	andlw	7
 15773  0AA9  1903               	btfsc	3,2
 15774  0AAA  2AB6               	goto	l5111
 15775  0AAB  2A99               	goto	l5103
 15776  0AAC                     l5109:	
 15777  0AAC  3001               	movlw	1
 15778  0AAD                     u5665:	
 15779  0AAD  36D3               	lsrf	___ftadd@f1+2,f
 15780  0AAE  0CD2               	rrf	___ftadd@f1+1,f
 15781  0AAF  0CD1               	rrf	___ftadd@f1,f
 15782  0AB0  0B89               	decfsz	9,f
 15783  0AB1  2AAD               	goto	u5665
 15784  0AB2  3001               	movlw	1
 15785  0AB3  00D7               	movwf	??___ftadd
 15786  0AB4  0857               	movf	??___ftadd,w
 15787  0AB5  07DD               	addwf	___ftadd@exp1,f
 15788  0AB6                     l5111:	
 15789  0AB6  085D               	movf	___ftadd@exp1,w
 15790  0AB7  065C               	xorwf	___ftadd@exp2,w
 15791  0AB8  1903               	btfsc	3,2
 15792  0AB9  2AE0               	goto	l1253
 15793  0ABA  2AAC               	goto	l5109
 15794  0ABB                     l5113:	
 15795  0ABB  085D               	movf	___ftadd@exp1,w
 15796  0ABC  025C               	subwf	___ftadd@exp2,w
 15797  0ABD  1803               	skipnc
 15798  0ABE  2AE0               	goto	l1253
 15799  0ABF                     l5115:	
 15800  0ABF  3001               	movlw	1
 15801  0AC0                     u5695:	
 15802  0AC0  35D1               	lslf	___ftadd@f1,f
 15803  0AC1  0DD2               	rlf	___ftadd@f1+1,f
 15804  0AC2  0DD3               	rlf	___ftadd@f1+2,f
 15805  0AC3  0B89               	decfsz	9,f
 15806  0AC4  2AC0               	goto	u5695
 15807  0AC5  3001               	movlw	1
 15808  0AC6  02DD               	subwf	___ftadd@exp1,f
 15809  0AC7  085C               	movf	___ftadd@exp2,w
 15810  0AC8  065D               	xorwf	___ftadd@exp1,w
 15811  0AC9  1903               	skipnz
 15812  0ACA  2ADC               	goto	l5123
 15813  0ACB  3001               	movlw	1
 15814  0ACC  02DB               	subwf	___ftadd@sign,f
 15815  0ACD  085B               	movf	___ftadd@sign,w
 15816  0ACE  3907               	andlw	7
 15817  0ACF  1903               	btfsc	3,2
 15818  0AD0  2ADC               	goto	l5123
 15819  0AD1  2ABF               	goto	l5115
 15820  0AD2                     l5121:	
 15821  0AD2  3001               	movlw	1
 15822  0AD3                     u5725:	
 15823  0AD3  36D6               	lsrf	___ftadd@f2+2,f
 15824  0AD4  0CD5               	rrf	___ftadd@f2+1,f
 15825  0AD5  0CD4               	rrf	___ftadd@f2,f
 15826  0AD6  0B89               	decfsz	9,f
 15827  0AD7  2AD3               	goto	u5725
 15828  0AD8  3001               	movlw	1
 15829  0AD9  00D7               	movwf	??___ftadd
 15830  0ADA  0857               	movf	??___ftadd,w
 15831  0ADB  07DC               	addwf	___ftadd@exp2,f
 15832  0ADC                     l5123:	
 15833  0ADC  085D               	movf	___ftadd@exp1,w
 15834  0ADD  065C               	xorwf	___ftadd@exp2,w
 15835  0ADE  1D03               	skipz
 15836  0ADF  2AD2               	goto	l5121
 15837  0AE0                     l1253:	
 15838  0AE0  1FDB               	btfss	___ftadd@sign,7
 15839  0AE1  2AF2               	goto	l5127
 15840  0AE2  30FF               	movlw	255
 15841  0AE3  06D1               	xorwf	___ftadd@f1,f
 15842  0AE4  30FF               	movlw	255
 15843  0AE5  06D2               	xorwf	___ftadd@f1+1,f
 15844  0AE6  30FF               	movlw	255
 15845  0AE7  06D3               	xorwf	___ftadd@f1+2,f
 15846  0AE8  3001               	movlw	1
 15847  0AE9  07D1               	addwf	___ftadd@f1,f
 15848  0AEA  3000               	movlw	0
 15849  0AEB  1803               	skipnc
 15850  0AEC  3001               	movlw	1
 15851  0AED  07D2               	addwf	___ftadd@f1+1,f
 15852  0AEE  3000               	movlw	0
 15853  0AEF  1803               	skipnc
 15854  0AF0  3001               	movlw	1
 15855  0AF1  07D3               	addwf	___ftadd@f1+2,f
 15856  0AF2                     l5127:	
 15857  0AF2  1F5B               	btfss	___ftadd@sign,6
 15858  0AF3  2B04               	goto	l5131
 15859  0AF4  30FF               	movlw	255
 15860  0AF5  06D4               	xorwf	___ftadd@f2,f
 15861  0AF6  30FF               	movlw	255
 15862  0AF7  06D5               	xorwf	___ftadd@f2+1,f
 15863  0AF8  30FF               	movlw	255
 15864  0AF9  06D6               	xorwf	___ftadd@f2+2,f
 15865  0AFA  3001               	movlw	1
 15866  0AFB  07D4               	addwf	___ftadd@f2,f
 15867  0AFC  3000               	movlw	0
 15868  0AFD  1803               	skipnc
 15869  0AFE  3001               	movlw	1
 15870  0AFF  07D5               	addwf	___ftadd@f2+1,f
 15871  0B00  3000               	movlw	0
 15872  0B01  1803               	skipnc
 15873  0B02  3001               	movlw	1
 15874  0B03  07D6               	addwf	___ftadd@f2+2,f
 15875  0B04                     l5131:	
 15876  0B04  01DB               	clrf	___ftadd@sign
 15877  0B05  0851               	movf	___ftadd@f1,w
 15878  0B06  07D4               	addwf	___ftadd@f2,f
 15879  0B07  0852               	movf	___ftadd@f1+1,w
 15880  0B08  3DD5               	addwfc	___ftadd@f2+1,f
 15881  0B09  0853               	movf	___ftadd@f1+2,w
 15882  0B0A  3DD6               	addwfc	___ftadd@f2+2,f
 15883  0B0B  1FD6               	btfss	___ftadd@f2+2,7
 15884  0B0C  2B1F               	goto	l5141
 15885  0B0D  30FF               	movlw	255
 15886  0B0E  06D4               	xorwf	___ftadd@f2,f
 15887  0B0F  30FF               	movlw	255
 15888  0B10  06D5               	xorwf	___ftadd@f2+1,f
 15889  0B11  30FF               	movlw	255
 15890  0B12  06D6               	xorwf	___ftadd@f2+2,f
 15891  0B13  3001               	movlw	1
 15892  0B14  07D4               	addwf	___ftadd@f2,f
 15893  0B15  3000               	movlw	0
 15894  0B16  1803               	skipnc
 15895  0B17  3001               	movlw	1
 15896  0B18  07D5               	addwf	___ftadd@f2+1,f
 15897  0B19  3000               	movlw	0
 15898  0B1A  1803               	skipnc
 15899  0B1B  3001               	movlw	1
 15900  0B1C  07D6               	addwf	___ftadd@f2+2,f
 15901  0B1D  01DB               	clrf	___ftadd@sign
 15902  0B1E  0ADB               	incf	___ftadd@sign,f
 15903  0B1F                     l5141:	
 15904  0B1F  0854               	movf	___ftadd@f2,w
 15905  0B20  00A0               	movwf	___ftpack@arg
 15906  0B21  0855               	movf	___ftadd@f2+1,w
 15907  0B22  00A1               	movwf	___ftpack@arg+1
 15908  0B23  0856               	movf	___ftadd@f2+2,w
 15909  0B24  00A2               	movwf	___ftpack@arg+2
 15910  0B25  085D               	movf	___ftadd@exp1,w
 15911  0B26  00D7               	movwf	??___ftadd
 15912  0B27  0857               	movf	??___ftadd,w
 15913  0B28  00A3               	movwf	___ftpack@exp
 15914  0B29  085B               	movf	___ftadd@sign,w
 15915  0B2A  00D8               	movwf	??___ftadd+1
 15916  0B2B  0858               	movf	??___ftadd+1,w
 15917  0B2C  00A4               	movwf	___ftpack@sign
 15918  0B2D  3195  2538         	fcall	___ftpack
 15919  0B2F  0140               	movlb	0	; select bank0
 15920  0B30  0820               	movf	?___ftpack,w
 15921  0B31  00D1               	movwf	?___ftadd
 15922  0B32  0821               	movf	?___ftpack+1,w
 15923  0B33  00D2               	movwf	?___ftadd+1
 15924  0B34  0822               	movf	?___ftpack+2,w
 15925  0B35  00D3               	movwf	?___ftadd+2
 15926  0B36  0008               	return
 15927  0B37                     __end_of___ftadd:	
 15928                           
 15929                           	psect	text57
 15930  1538                     __ptext57:	
 15931 ;; *************** function ___ftpack *****************
 15932 ;; Defined at:
 15933 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 15934 ;; Parameters:    Size  Location     Type
 15935 ;;  arg             3    0[BANK0 ] unsigned um
 15936 ;;  exp             1    3[BANK0 ] unsigned char 
 15937 ;;  sign            1    4[BANK0 ] unsigned char 
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;		None
 15940 ;; Return value:  Size  Location     Type
 15941 ;;                  3    0[BANK0 ] float 
 15942 ;; Registers used:
 15943 ;;		wreg, status,2, status,0
 15944 ;; Tracked objects:
 15945 ;;		On entry : 0/0
 15946 ;;		On exit  : 0/0
 15947 ;;		Unchanged: 0/0
 15948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15949 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15951 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15952 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15953 ;;Total ram usage:        8 bytes
 15954 ;; Hardware stack levels used:    1
 15955 ;; Hardware stack levels required when called:    3
 15956 ;; This function calls:
 15957 ;;		Nothing
 15958 ;; This function is called by:
 15959 ;;		___awtoft
 15960 ;;		___ftadd
 15961 ;;		___ftdiv
 15962 ;;		___ftmul
 15963 ;;		___lltoft
 15964 ;;		___lwtoft
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968                           
 15969                           ;psect for function ___ftpack
 15970  1538                     ___ftpack:	
 15971                           
 15972                           ;incstack = 0
 15973                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15974  1538  0140               	movlb	0	; select bank0
 15975  1539  0823               	movf	___ftpack@exp,w
 15976  153A  1903               	btfsc	3,2
 15977  153B  2D41               	goto	l4951
 15978  153C  0822               	movf	___ftpack@arg+2,w
 15979  153D  0421               	iorwf	___ftpack@arg+1,w
 15980  153E  0420               	iorwf	___ftpack@arg,w
 15981  153F  1D03               	skipz
 15982  1540  2D52               	goto	l4957
 15983  1541                     l4951:	
 15984  1541  3000               	movlw	0
 15985  1542  00A0               	movwf	?___ftpack
 15986  1543  3000               	movlw	0
 15987  1544  00A1               	movwf	?___ftpack+1
 15988  1545  3000               	movlw	0
 15989  1546  00A2               	movwf	?___ftpack+2
 15990  1547  0008               	return
 15991  1548                     l4955:	
 15992  1548  3001               	movlw	1
 15993  1549  00F4               	movwf	??___ftpack
 15994  154A  0874               	movf	??___ftpack,w
 15995  154B  07A3               	addwf	___ftpack@exp,f
 15996  154C  3001               	movlw	1
 15997  154D                     u5215:	
 15998  154D  36A2               	lsrf	___ftpack@arg+2,f
 15999  154E  0CA1               	rrf	___ftpack@arg+1,f
 16000  154F  0CA0               	rrf	___ftpack@arg,f
 16001  1550  0B89               	decfsz	9,f
 16002  1551  2D4D               	goto	u5215
 16003  1552                     l4957:	
 16004  1552  30FE               	movlw	254
 16005  1553  0522               	andwf	___ftpack@arg+2,w
 16006  1554  1903               	btfsc	3,2
 16007  1555  2D6B               	goto	l1222
 16008  1556  2D48               	goto	l4955
 16009  1557                     l4959:	
 16010  1557  3001               	movlw	1
 16011  1558  00F4               	movwf	??___ftpack
 16012  1559  0874               	movf	??___ftpack,w
 16013  155A  07A3               	addwf	___ftpack@exp,f
 16014  155B  3001               	movlw	1
 16015  155C  07A0               	addwf	___ftpack@arg,f
 16016  155D  3000               	movlw	0
 16017  155E  1803               	skipnc
 16018  155F  3001               	movlw	1
 16019  1560  07A1               	addwf	___ftpack@arg+1,f
 16020  1561  3000               	movlw	0
 16021  1562  1803               	skipnc
 16022  1563  3001               	movlw	1
 16023  1564  07A2               	addwf	___ftpack@arg+2,f
 16024  1565  3001               	movlw	1
 16025  1566                     u5235:	
 16026  1566  36A2               	lsrf	___ftpack@arg+2,f
 16027  1567  0CA1               	rrf	___ftpack@arg+1,f
 16028  1568  0CA0               	rrf	___ftpack@arg,f
 16029  1569  0B89               	decfsz	9,f
 16030  156A  2D66               	goto	u5235
 16031  156B                     l1222:	
 16032  156B  30FF               	movlw	255
 16033  156C  0522               	andwf	___ftpack@arg+2,w
 16034  156D  1903               	btfsc	3,2
 16035  156E  2D78               	goto	l4967
 16036  156F  2D57               	goto	l4959
 16037  1570                     l4965:	
 16038  1570  3001               	movlw	1
 16039  1571  02A3               	subwf	___ftpack@exp,f
 16040  1572  3001               	movlw	1
 16041  1573                     u5255:	
 16042  1573  35A0               	lslf	___ftpack@arg,f
 16043  1574  0DA1               	rlf	___ftpack@arg+1,f
 16044  1575  0DA2               	rlf	___ftpack@arg+2,f
 16045  1576  0B89               	decfsz	9,f
 16046  1577  2D73               	goto	u5255
 16047  1578                     l4967:	
 16048  1578  1BA1               	btfsc	___ftpack@arg+1,7
 16049  1579  2D7E               	goto	l1229
 16050  157A  3002               	movlw	2
 16051  157B  0223               	subwf	___ftpack@exp,w
 16052  157C  1803               	skipnc
 16053  157D  2D70               	goto	l4965
 16054  157E                     l1229:	
 16055  157E  1823               	btfsc	___ftpack@exp,0
 16056  157F  2D86               	goto	l1230
 16057  1580  30FF               	movlw	255
 16058  1581  05A0               	andwf	___ftpack@arg,f
 16059  1582  307F               	movlw	127
 16060  1583  05A1               	andwf	___ftpack@arg+1,f
 16061  1584  30FF               	movlw	255
 16062  1585  05A2               	andwf	___ftpack@arg+2,f
 16063  1586                     l1230:	
 16064  1586  1003               	clrc
 16065  1587  0CA3               	rrf	___ftpack@exp,f
 16066  1588  0823               	movf	___ftpack@exp,w
 16067  1589  00F4               	movwf	??___ftpack
 16068  158A  01F5               	clrf	??___ftpack+1
 16069  158B  01F6               	clrf	??___ftpack+2
 16070  158C  3010               	movlw	16
 16071  158D                     u5295:	
 16072  158D  35F4               	lslf	??___ftpack,f
 16073  158E  0DF5               	rlf	??___ftpack+1,f
 16074  158F  0DF6               	rlf	??___ftpack+2,f
 16075  1590  0B89               	decfsz	9,f
 16076  1591  2D8D               	goto	u5295
 16077  1592  0874               	movf	??___ftpack,w
 16078  1593  04A0               	iorwf	___ftpack@arg,f
 16079  1594  0875               	movf	??___ftpack+1,w
 16080  1595  04A1               	iorwf	___ftpack@arg+1,f
 16081  1596  0876               	movf	??___ftpack+2,w
 16082  1597  04A2               	iorwf	___ftpack@arg+2,f
 16083  1598  0824               	movf	___ftpack@sign,w
 16084  1599  1903               	btfsc	3,2
 16085  159A  0008               	return
 16086  159B  17A2               	bsf	___ftpack@arg+2,7
 16087  159C  0008               	return
 16088  159D                     __end_of___ftpack:	
 16089                           
 16090                           	psect	text58
 16091  1DCF                     __ptext58:	
 16092 ;; *************** function ___ftneg *****************
 16093 ;; Defined at:
 16094 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 16095 ;; Parameters:    Size  Location     Type
 16096 ;;  f1              3    4[COMMON] float 
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;		None
 16099 ;; Return value:  Size  Location     Type
 16100 ;;                  3    4[COMMON] float 
 16101 ;; Registers used:
 16102 ;;		wreg
 16103 ;; Tracked objects:
 16104 ;;		On entry : 0/0
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16108 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16111 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16112 ;;Total ram usage:        3 bytes
 16113 ;; Hardware stack levels used:    1
 16114 ;; Hardware stack levels required when called:    3
 16115 ;; This function calls:
 16116 ;;		Nothing
 16117 ;; This function is called by:
 16118 ;;		_sprintf
 16119 ;; This function uses a non-reentrant model
 16120 ;;
 16121                           
 16122                           
 16123                           ;psect for function ___ftneg
 16124  1DCF                     ___ftneg:	
 16125                           
 16126                           ;incstack = 0
 16127                           ; Regs used in ___ftneg: [wreg]
 16128  1DCF  0876               	movf	___ftneg@f1+2,w
 16129  1DD0  0475               	iorwf	___ftneg@f1+1,w
 16130  1DD1  0474               	iorwf	___ftneg@f1,w
 16131  1DD2  1903               	skipnz
 16132  1DD3  0008               	return
 16133  1DD4  3080               	movlw	128
 16134  1DD5  06F6               	xorwf	___ftneg@f1+2,f
 16135  1DD6  0008               	return
 16136  1DD7                     __end_of___ftneg:	
 16137                           
 16138                           	psect	text59
 16139  12EB                     __ptext59:	
 16140 ;; *************** function ___ftge *****************
 16141 ;; Defined at:
 16142 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;  ff1             3    0[BANK0 ] float 
 16145 ;;  ff2             3    3[BANK0 ] float 
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;		None
 16148 ;; Return value:  Size  Location     Type
 16149 ;;		None               void
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16157 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16159 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16160 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16161 ;;Total ram usage:        9 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:    3
 16164 ;; This function calls:
 16165 ;;		Nothing
 16166 ;; This function is called by:
 16167 ;;		_sprintf
 16168 ;; This function uses a non-reentrant model
 16169 ;;
 16170                           
 16171                           
 16172                           ;psect for function ___ftge
 16173  12EB                     ___ftge:	
 16174                           
 16175                           ;incstack = 0
 16176                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 16177  12EB  0140               	movlb	0	; select bank0
 16178  12EC  1FA2               	btfss	___ftge@ff1+2,7
 16179  12ED  2B02               	goto	l5501
 16180  12EE  0920               	comf	___ftge@ff1,w
 16181  12EF  00F4               	movwf	??___ftge
 16182  12F0  0921               	comf	___ftge@ff1+1,w
 16183  12F1  00F5               	movwf	??___ftge+1
 16184  12F2  0922               	comf	___ftge@ff1+2,w
 16185  12F3  00F6               	movwf	??___ftge+2
 16186  12F4  0AF4               	incf	??___ftge,f
 16187  12F5  1903               	skipnz
 16188  12F6  0AF5               	incf	??___ftge+1,f
 16189  12F7  1903               	skipnz
 16190  12F8  0AF6               	incf	??___ftge+2,f
 16191  12F9  3000               	movlw	0
 16192  12FA  0774               	addwf	??___ftge,w
 16193  12FB  00A0               	movwf	___ftge@ff1
 16194  12FC  3000               	movlw	0
 16195  12FD  3D75               	addwfc	??___ftge+1,w
 16196  12FE  00A1               	movwf	___ftge@ff1+1
 16197  12FF  3080               	movlw	128
 16198  1300  3D76               	addwfc	??___ftge+2,w
 16199  1301  00A2               	movwf	___ftge@ff1+2
 16200  1302                     l5501:	
 16201  1302  1FA5               	btfss	___ftge@ff2+2,7
 16202  1303  2B18               	goto	l5505
 16203  1304  0923               	comf	___ftge@ff2,w
 16204  1305  00F4               	movwf	??___ftge
 16205  1306  0924               	comf	___ftge@ff2+1,w
 16206  1307  00F5               	movwf	??___ftge+1
 16207  1308  0925               	comf	___ftge@ff2+2,w
 16208  1309  00F6               	movwf	??___ftge+2
 16209  130A  0AF4               	incf	??___ftge,f
 16210  130B  1903               	skipnz
 16211  130C  0AF5               	incf	??___ftge+1,f
 16212  130D  1903               	skipnz
 16213  130E  0AF6               	incf	??___ftge+2,f
 16214  130F  3000               	movlw	0
 16215  1310  0774               	addwf	??___ftge,w
 16216  1311  00A3               	movwf	___ftge@ff2
 16217  1312  3000               	movlw	0
 16218  1313  3D75               	addwfc	??___ftge+1,w
 16219  1314  00A4               	movwf	___ftge@ff2+1
 16220  1315  3080               	movlw	128
 16221  1316  3D76               	addwfc	??___ftge+2,w
 16222  1317  00A5               	movwf	___ftge@ff2+2
 16223  1318                     l5505:	
 16224  1318  3080               	movlw	128
 16225  1319  06A2               	xorwf	___ftge@ff1+2,f
 16226  131A  3080               	movlw	128
 16227  131B  06A5               	xorwf	___ftge@ff2+2,f
 16228  131C  0825               	movf	___ftge@ff2+2,w
 16229  131D  0222               	subwf	___ftge@ff1+2,w
 16230  131E  1D03               	skipz
 16231  131F  0008               	return
 16232  1320  0824               	movf	___ftge@ff2+1,w
 16233  1321  0221               	subwf	___ftge@ff1+1,w
 16234  1322  1D03               	skipz
 16235  1323  0008               	return
 16236  1324  0823               	movf	___ftge@ff2,w
 16237  1325  0220               	subwf	___ftge@ff1,w
 16238  1326  0008               	return
 16239  1327                     __end_of___ftge:	
 16240                           
 16241                           	psect	text60
 16242  1224                     __ptext60:	
 16243 ;; *************** function _capameter_state *****************
 16244 ;; Defined at:
 16245 ;;		line 120 in file "states.c"
 16246 ;; Parameters:    Size  Location     Type
 16247 ;;		None
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;		None
 16250 ;; Return value:  Size  Location     Type
 16251 ;;                  1    wreg      void 
 16252 ;; Registers used:
 16253 ;;		wreg, status,2, status,0, pclath, cstack
 16254 ;; Tracked objects:
 16255 ;;		On entry : 0/0
 16256 ;;		On exit  : 0/0
 16257 ;;		Unchanged: 0/0
 16258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16260 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16262 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16263 ;;Total ram usage:        8 bytes
 16264 ;; Hardware stack levels used:    1
 16265 ;; Hardware stack levels required when called:    5
 16266 ;; This function calls:
 16267 ;;		_setCMP1Interrupt
 16268 ;;		_startTimeMeasurement
 16269 ;; This function is called by:
 16270 ;;		_main
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           
 16275                           ;psect for function _capameter_state
 16276  1224                     _capameter_state:	
 16277                           
 16278                           ;states.c: 122: LATEbits.LATE2=(1) ? 0:1;;
 16279                           
 16280                           ;incstack = 0
 16281                           ; Regs used in _capameter_state: [wreg+status,2+status,0+pclath+cstack]
 16282  1224  0140               	movlb	0	; select bank0
 16283  1225  111A               	bcf	26,2	;volatile
 16284                           
 16285                           ;states.c: 124: LATB = (((0) ? ((1<<1)):0) | (LATB&(~((1<<1)))));
 16286  1226  0812               	movf	18,w	;volatile
 16287  1227  39E1               	andlw	225
 16288  1228  380C               	iorlw	12
 16289  1229  0092               	movwf	18	;volatile
 16290  122A  01A2               	clrf	_capameter_state$1519
 16291  122B  01A3               	clrf	_capameter_state$1519+1
 16292                           
 16293                           ;states.c: 125: LATB = (((0) ? ((1<<4)):0) | (LATB&(~((1<<4)))));
 16294  122C  0817               	movf	23,w	;volatile
 16295  122D  39FD               	andlw	253
 16296  122E  0422               	iorwf	_capameter_state$1519,w
 16297  122F  0097               	movwf	23	;volatile
 16298  1230  01A4               	clrf	_capameter_state$1520
 16299  1231  01A5               	clrf	_capameter_state$1520+1
 16300  1232  0817               	movf	23,w	;volatile
 16301  1233  39EF               	andlw	239
 16302  1234  0424               	iorwf	_capameter_state$1520,w
 16303  1235  0097               	movwf	23	;volatile
 16304                           
 16305                           ;states.c: 126: _delay((unsigned long)((5)*(25000000LL/4000.0)));
 16306  1236  3029               	movlw	41
 16307  1237  00A1               	movwf	??_capameter_state+1
 16308  1238  3094               	movlw	148
 16309  1239  00A0               	movwf	??_capameter_state
 16310  123A                     u7647:	
 16311  123A  0BA0               	decfsz	??_capameter_state,f
 16312  123B  2A3A               	goto	u7647
 16313  123C  0BA1               	decfsz	??_capameter_state+1,f
 16314  123D  2A3A               	goto	u7647
 16315  123E  0000               	nop
 16316                           
 16317                           ;states.c: 127: TRISB = (((~((1<<4))))&0x1E) | (TRISB&0xE1);
 16318  123F  0140               	movlb	0	; select bank0
 16319  1240  0812               	movf	18,w	;volatile
 16320  1241  39E1               	andlw	225
 16321  1242  380E               	iorlw	14
 16322  1243  0092               	movwf	18	;volatile
 16323                           
 16324                           ;states.c: 130: setCMP1Interrupt(1);
 16325  1244  3001               	movlw	1
 16326  1245  319D  25E9  3192   	fcall	_setCMP1Interrupt
 16327                           
 16328                           ;states.c: 131: startTimeMeasurement();
 16329  1248  319E  26F2         	fcall	_startTimeMeasurement
 16330                           
 16331                           ;states.c: 132: LATB = (((1) ? ((1<<4)):0) | (LATB&(~((1<<4)))));
 16332  124A  3010               	movlw	16
 16333  124B  0140               	movlb	0	; select bank0
 16334  124C  00A6               	movwf	_capameter_state$1522
 16335  124D  3000               	movlw	0
 16336  124E  00A7               	movwf	_capameter_state$1522+1
 16337  124F  0817               	movf	23,w	;volatile
 16338  1250  39EF               	andlw	239
 16339  1251  0426               	iorwf	_capameter_state$1522,w
 16340  1252  0097               	movwf	23	;volatile
 16341  1253  0008               	return
 16342  1254                     __end_of_capameter_state:	
 16343                           
 16344                           	psect	text61
 16345  1EF2                     __ptext61:	
 16346 ;; *************** function _startTimeMeasurement *****************
 16347 ;; Defined at:
 16348 ;;		line 56 in file "TMR.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;		None
 16351 ;; Auto vars:     Size  Location     Type
 16352 ;;		None
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  1    wreg      void 
 16355 ;; Registers used:
 16356 ;;		wreg, status,2, status,0, pclath, cstack
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16365 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16366 ;;Total ram usage:        1 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:    4
 16369 ;; This function calls:
 16370 ;;		_setTMR3Interrupt
 16371 ;; This function is called by:
 16372 ;;		_capameter_state
 16373 ;; This function uses a non-reentrant model
 16374 ;;
 16375                           
 16376                           
 16377                           ;psect for function _startTimeMeasurement
 16378  1EF2                     _startTimeMeasurement:	
 16379                           
 16380                           ;TMR.c: 59: T3CONbits.TMR3ON = 0;
 16381                           
 16382                           ;incstack = 0
 16383                           ; Regs used in _startTimeMeasurement: [wreg+status,2+status,0+pclath+cstack]
 16384  1EF2  0144               	movlb	4	; select bank4
 16385  1EF3  1014               	bcf	20,0	;volatile
 16386                           
 16387                           ;TMR.c: 60: T5CONbits.TMR5ON = 0;
 16388  1EF4  101A               	bcf	26,0	;volatile
 16389                           
 16390                           ;TMR.c: 63: T3CON = 0x02;
 16391  1EF5  3002               	movlw	2
 16392  1EF6  0094               	movwf	20	;volatile
 16393                           
 16394                           ;TMR.c: 64: isTMR3fast = 1;
 16395  1EF7  3001               	movlw	1
 16396  1EF8  00F5               	movwf	??_startTimeMeasurement
 16397  1EF9  0875               	movf	??_startTimeMeasurement,w
 16398  1EFA  00F8               	movwf	_isTMR3fast	;volatile
 16399                           
 16400                           ;TMR.c: 67: TMR3H = 0x00;
 16401  1EFB  0193               	clrf	19	;volatile
 16402                           
 16403                           ;TMR.c: 68: TMR3L = 0x00;
 16404  1EFC  0192               	clrf	18	;volatile
 16405                           
 16406                           ;TMR.c: 71: PIR4bits.TMR3IF = 0;
 16407  1EFD  014E               	movlb	14	; select bank14
 16408  1EFE  1110               	bcf	16,2	;volatile
 16409                           
 16410                           ;TMR.c: 72: PIR5bits.TMR3GIF = 0;
 16411  1EFF  1091               	bcf	17,1	;volatile
 16412                           
 16413                           ;TMR.c: 75: T3CONbits.TMR3ON = 1;
 16414  1F00  0144               	movlb	4	; select bank4
 16415  1F01  1414               	bsf	20,0	;volatile
 16416                           
 16417                           ;TMR.c: 76: setTMR3Interrupt(1);
 16418  1F02  3001               	movlw	1
 16419  1F03  319D  25F2         	fcall	_setTMR3Interrupt
 16420  1F05  0008               	return
 16421  1F06                     __end_of_startTimeMeasurement:	
 16422                           
 16423                           	psect	text62
 16424  1DF2                     __ptext62:	
 16425 ;; *************** function _setTMR3Interrupt *****************
 16426 ;; Defined at:
 16427 ;;		line 218 in file "TMR.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;  useInt          1    wreg     unsigned char 
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;  useInt          1    4[COMMON] unsigned char 
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,0
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16445 ;;Total ram usage:        1 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:    3
 16448 ;; This function calls:
 16449 ;;		Nothing
 16450 ;; This function is called by:
 16451 ;;		_startGatedCount
 16452 ;;		_startTimeMeasurement
 16453 ;; This function uses a non-reentrant model
 16454 ;;
 16455                           
 16456                           
 16457                           ;psect for function _setTMR3Interrupt
 16458  1DF2                     _setTMR3Interrupt:	
 16459                           
 16460                           ;incstack = 0
 16461                           ; Regs used in _setTMR3Interrupt: [wreg+status,0]
 16462                           ;setTMR3Interrupt@useInt stored from wreg
 16463  1DF2  00F4               	movwf	setTMR3Interrupt@useInt
 16464                           
 16465                           ;TMR.c: 220: PIR4bits.TMR3IF = 0;
 16466  1DF3  014E               	movlb	14	; select bank14
 16467  1DF4  1110               	bcf	16,2	;volatile
 16468                           
 16469                           ;TMR.c: 221: PIE4bits.TMR3IE = useInt;
 16470  1DF5  0C74               	rrf	setTMR3Interrupt@useInt,w
 16471  1DF6  1C03               	skipc
 16472  1DF7  111A               	bcf	26,2	;volatile
 16473  1DF8  1803               	skipnc
 16474  1DF9  151A               	bsf	26,2	;volatile
 16475  1DFA  0008               	return
 16476  1DFB                     __end_of_setTMR3Interrupt:	
 16477                           
 16478                           	psect	text63
 16479  1DE9                     __ptext63:	
 16480 ;; *************** function _setCMP1Interrupt *****************
 16481 ;; Defined at:
 16482 ;;		line 51 in file "CMP_DAC.c"
 16483 ;; Parameters:    Size  Location     Type
 16484 ;;  useInt          1    wreg     unsigned char 
 16485 ;; Auto vars:     Size  Location     Type
 16486 ;;  useInt          1    4[COMMON] unsigned char 
 16487 ;; Return value:  Size  Location     Type
 16488 ;;                  1    wreg      void 
 16489 ;; Registers used:
 16490 ;;		wreg, status,0
 16491 ;; Tracked objects:
 16492 ;;		On entry : 0/0
 16493 ;;		On exit  : 0/0
 16494 ;;		Unchanged: 0/0
 16495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16500 ;;Total ram usage:        1 bytes
 16501 ;; Hardware stack levels used:    1
 16502 ;; Hardware stack levels required when called:    3
 16503 ;; This function calls:
 16504 ;;		Nothing
 16505 ;; This function is called by:
 16506 ;;		_capameter_state
 16507 ;; This function uses a non-reentrant model
 16508 ;;
 16509                           
 16510                           
 16511                           ;psect for function _setCMP1Interrupt
 16512  1DE9                     _setCMP1Interrupt:	
 16513                           
 16514                           ;incstack = 0
 16515                           ; Regs used in _setCMP1Interrupt: [wreg+status,0]
 16516                           ;setCMP1Interrupt@useInt stored from wreg
 16517  1DE9  00F4               	movwf	setCMP1Interrupt@useInt
 16518                           
 16519                           ;CMP_DAC.c: 53: PIR2bits.C1IF = 0;
 16520  1DEA  014E               	movlb	14	; select bank14
 16521  1DEB  100E               	bcf	14,0	;volatile
 16522                           
 16523                           ;CMP_DAC.c: 54: PIE2bits.C1IE = useInt;
 16524  1DEC  0C74               	rrf	setCMP1Interrupt@useInt,w
 16525  1DED  1C03               	skipc
 16526  1DEE  1018               	bcf	24,0	;volatile
 16527  1DEF  1803               	skipnc
 16528  1DF0  1418               	bsf	24,0	;volatile
 16529  1DF1  0008               	return
 16530  1DF2                     __end_of_setCMP1Interrupt:	
 16531                           
 16532                           	psect	intentry
 16533  0004                     __pintentry:	
 16534 ;; *************** function _INTERRUPT_InterruptManager *****************
 16535 ;; Defined at:
 16536 ;;		line 5 in file "interrupts_handler.c"
 16537 ;; Parameters:    Size  Location     Type
 16538 ;;		None
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;		None
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  1    wreg      void 
 16543 ;; Registers used:
 16544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16554 ;;Total ram usage:        1 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:    2
 16557 ;; This function calls:
 16558 ;;		_CMP1_ISR
 16559 ;;		_TMR1_ISR
 16560 ;;		_TMR3_ISR
 16561 ;; This function is called by:
 16562 ;;		Interrupt level 1
 16563 ;; This function uses a non-reentrant model
 16564 ;;
 16565                           
 16566  0004                     _INTERRUPT_InterruptManager:	
 16567                           
 16568                           ;incstack = 0
 16569  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16570                           
 16571                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16572  0005  3180               	pagesel	$
 16573  0006  0140               	movlb	0	; select bank0
 16574  0007  087F               	movf	127,w
 16575  0008  00F3               	movwf	??_INTERRUPT_InterruptManager
 16576                           
 16577                           ;interrupts_handler.c: 8: if(INTCONbits.PEIE == 1 && PIE2bits.C1IE == 1 && PIR2bits.C1IF
      +                           == 1)
 16578  0009  1F0B               	btfss	11,6	;volatile
 16579  000A  2813               	goto	i1l227
 16580  000B  014E               	movlb	14	; select bank14
 16581  000C  1818               	btfsc	24,0	;volatile
 16582  000D  1C0E               	btfss	14,0	;volatile
 16583  000E  2813               	goto	i1l227
 16584                           
 16585                           ;interrupts_handler.c: 9: {
 16586                           ;interrupts_handler.c: 10: CMP1_ISR();
 16587  000F  319E  26CC  3180   	fcall	_CMP1_ISR
 16588                           
 16589                           ;interrupts_handler.c: 11: }
 16590  0012  282E               	goto	i1l235
 16591  0013                     i1l227:	
 16592                           
 16593                           ;interrupts_handler.c: 12: else if(INTCONbits.PEIE == 1 && PIE5bits.TMR5GIE == 1 && PIR5
      +                          bits.TMR5GIF == 1)
 16594  0013  1F0B               	btfss	11,6	;volatile
 16595  0014  281C               	goto	i1l229
 16596  0015  014E               	movlb	14	; select bank14
 16597  0016  191B               	btfsc	27,2	;volatile
 16598  0017  1D11               	btfss	17,2	;volatile
 16599  0018  281C               	goto	i1l229
 16600                           
 16601                           ;interrupts_handler.c: 13: {
 16602                           ;interrupts_handler.c: 14: PIR5bits.TMR5GIF=0; PIE5bits.TMR5GIE =0;
 16603  0019  1111               	bcf	17,2	;volatile
 16604  001A  111B               	bcf	27,2	;volatile
 16605                           
 16606                           ;interrupts_handler.c: 15: }
 16607  001B  282E               	goto	i1l235
 16608  001C                     i1l229:	
 16609                           
 16610                           ;interrupts_handler.c: 16: else if(INTCONbits.PEIE == 1 && PIE4bits.TMR1IE == 1 && PIR4b
      +                          its.TMR1IF == 1)
 16611  001C  1F0B               	btfss	11,6	;volatile
 16612  001D  2826               	goto	i1l231
 16613  001E  014E               	movlb	14	; select bank14
 16614  001F  181A               	btfsc	26,0	;volatile
 16615  0020  1C10               	btfss	16,0	;volatile
 16616  0021  2826               	goto	i1l231
 16617                           
 16618                           ;interrupts_handler.c: 17: {
 16619                           ;interrupts_handler.c: 18: TMR1_ISR();
 16620  0022  319E  26BA  3180   	fcall	_TMR1_ISR
 16621                           
 16622                           ;interrupts_handler.c: 19: }
 16623  0025  282E               	goto	i1l235
 16624  0026                     i1l231:	
 16625                           
 16626                           ;interrupts_handler.c: 20: else if(INTCONbits.PEIE == 1 && PIE4bits.TMR3IE == 1 && PIR4b
      +                          its.TMR3IF == 1)
 16627  0026  1F0B               	btfss	11,6	;volatile
 16628  0027  282E               	goto	i1l235
 16629  0028  014E               	movlb	14	; select bank14
 16630  0029  191A               	btfsc	26,2	;volatile
 16631  002A  1D10               	btfss	16,2	;volatile
 16632  002B  282E               	goto	i1l235
 16633                           
 16634                           ;interrupts_handler.c: 21: {
 16635                           ;interrupts_handler.c: 22: TMR3_ISR();
 16636  002C  3192  22B8         	fcall	_TMR3_ISR
 16637  002E                     i1l235:	
 16638                           ;interrupts_handler.c: 24: else
 16639                           ;interrupts_handler.c: 25: {
 16640                           
 16641                           ;interrupts_handler.c: 23: }
 16642                           
 16643  002E  0873               	movf	??_INTERRUPT_InterruptManager,w
 16644  002F  0140               	movlb	0	; select bank0
 16645  0030  00FF               	movwf	127
 16646  0031  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16647  0032  0009               	retfie
 16648  0033                     __end_of_INTERRUPT_InterruptManager:	
 16649                           
 16650                           	psect	text65
 16651  12B8                     __ptext65:	
 16652 ;; *************** function _TMR3_ISR *****************
 16653 ;; Defined at:
 16654 ;;		line 176 in file "TMR.c"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;		None
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;		None
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  1    wreg      void 
 16661 ;; Registers used:
 16662 ;;		wreg, status,2, status,0, pclath, cstack
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16672 ;;Total ram usage:        1 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    1
 16675 ;; This function calls:
 16676 ;;		Absolute function
 16677 ;;		_computeCapa
 16678 ;;		_computeFreq
 16679 ;;		_setTMR3
 16680 ;;		i1_setTMR3Interrupt
 16681 ;; This function is called by:
 16682 ;;		_INTERRUPT_InterruptManager
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           
 16687                           ;psect for function _TMR3_ISR
 16688  12B8                     _TMR3_ISR:	
 16689                           
 16690                           ;TMR.c: 178: static byte count=0;
 16691                           ;TMR.c: 180: T3CONbits.TMR3ON = 0;
 16692                           
 16693                           ;incstack = 0
 16694                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 16695  12B8  0144               	movlb	4	; select bank4
 16696  12B9  1014               	bcf	20,0	;volatile
 16697                           
 16698                           ;TMR.c: 182: PIR4bits.TMR3IF = 0;
 16699  12BA  014E               	movlb	14	; select bank14
 16700  12BB  1110               	bcf	16,2	;volatile
 16701                           
 16702                           ;TMR.c: 183: PIR5bits.TMR3GIF = 0;
 16703  12BC  1091               	bcf	17,1	;volatile
 16704                           
 16705                           ;TMR.c: 184: PIR4bits.TMR5IF = 0;
 16706  12BD  1210               	bcf	16,4	;volatile
 16707                           
 16708                           ;TMR.c: 185: PIR5bits.TMR5GIF = 0;
 16709  12BE  1111               	bcf	17,2	;volatile
 16710                           
 16711                           ;TMR.c: 187: if(!isTMR3fast){
 16712  12BF  0878               	movf	_isTMR3fast,w	;volatile
 16713  12C0  1D03               	btfss	3,2
 16714  12C1  2AD3               	goto	i1l636
 16715                           
 16716                           ;TMR.c: 188: TMR3L = (unsigned char) (0x6769);
 16717  12C2  3069               	movlw	105
 16718  12C3  0144               	movlb	4	; select bank4
 16719  12C4  0092               	movwf	18	;volatile
 16720                           
 16721                           ;TMR.c: 189: TMR3H = 0x6769>>8;
 16722  12C5  3067               	movlw	103
 16723  12C6  0093               	movwf	19	;volatile
 16724                           
 16725                           ;TMR.c: 191: count++;
 16726  12C7  3001               	movlw	1
 16727  12C8  00F2               	movwf	??_TMR3_ISR
 16728  12C9  0872               	movf	??_TMR3_ISR,w
 16729  12CA  07F7               	addwf	TMR3_ISR@count,f
 16730                           
 16731                           ;TMR.c: 192: if(count >= 20){
 16732  12CB  3014               	movlw	20
 16733  12CC  0277               	subwf	TMR3_ISR@count,w
 16734  12CD  1C03               	skipc
 16735  12CE  2AD1               	goto	i1l637
 16736                           
 16737                           ;TMR.c: 193: count = 0;
 16738  12CF  01F7               	clrf	TMR3_ISR@count
 16739                           
 16740                           ;TMR.c: 194: }
 16741  12D0  2AD3               	goto	i1l636
 16742  12D1                     i1l637:	
 16743                           
 16744                           ;TMR.c: 195: else{
 16745                           ;TMR.c: 196: T3CONbits.TMR3ON = 1;
 16746  12D1  1414               	bsf	20,0	;volatile
 16747                           
 16748                           ;TMR.c: 197: return;
 16749  12D2  0008               	return
 16750  12D3                     i1l636:	
 16751                           
 16752                           ;TMR.c: 198: }
 16753                           ;TMR.c: 199: }
 16754                           ;TMR.c: 202: T5CONbits.TMR5ON = 0;
 16755  12D3  0144               	movlb	4	; select bank4
 16756  12D4  101A               	bcf	26,0	;volatile
 16757                           
 16758                           ;TMR.c: 203: setTMR3Interrupt(0);
 16759  12D5  3000               	movlw	0
 16760  12D6  319D  25E0  3192   	fcall	i1_setTMR3Interrupt
 16761                           
 16762                           ;TMR.c: 205: setTMR3(0xFFFF);
 16763  12D9  30FF               	movlw	255
 16764  12DA  00F0               	movwf	setTMR3@timerVal
 16765  12DB  30FF               	movlw	255
 16766  12DC  00F1               	movwf	setTMR3@timerVal+1
 16767  12DD  319D  25B1  3192   	fcall	_setTMR3
 16768                           
 16769                           ;TMR.c: 207: if(TMR3_InterruptHandler)
 16770  12E0  0141               	movlb	1	; select bank1
 16771  12E1  0862               	movf	_TMR3_InterruptHandler^(0+128),w
 16772  12E2  0463               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 16773  12E3  1903               	btfsc	3,2
 16774  12E4  0008               	return
 16775                           
 16776                           ;TMR.c: 208: {
 16777                           ;TMR.c: 209: TMR3_InterruptHandler();
 16778  12E5  0863               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 16779  12E6  008A               	movwf	10
 16780  12E7  0862               	movf	_TMR3_InterruptHandler^(0+128),w
 16781  12E8  000A               	callw
 16782  12E9  3192               	pagesel	$
 16783  12EA  0008               	return
 16784  12EB                     __end_of_TMR3_ISR:	
 16785                           
 16786                           	psect	text66
 16787  1DE0                     __ptext66:	
 16788 ;; *************** function i1_setTMR3Interrupt *****************
 16789 ;; Defined at:
 16790 ;;		line 218 in file "TMR.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;  useInt          1    wreg     unsigned char 
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;  useInt          1    0[COMMON] unsigned char 
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, status,0
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16808 ;;Total ram usage:        1 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; This function calls:
 16811 ;;		Nothing
 16812 ;; This function is called by:
 16813 ;;		_TMR3_ISR
 16814 ;; This function uses a non-reentrant model
 16815 ;;
 16816                           
 16817                           
 16818                           ;psect for function i1_setTMR3Interrupt
 16819  1DE0                     i1_setTMR3Interrupt:	
 16820                           
 16821                           ;incstack = 0
 16822                           ; Regs used in i1_setTMR3Interrupt: [wreg+status,0]
 16823                           ;i1setTMR3Interrupt@useInt stored from wreg
 16824  1DE0  00F0               	movwf	i1setTMR3Interrupt@useInt
 16825                           
 16826                           ;TMR.c: 220: PIR4bits.TMR3IF = 0;
 16827  1DE1  014E               	movlb	14	; select bank14
 16828  1DE2  1110               	bcf	16,2	;volatile
 16829                           
 16830                           ;TMR.c: 221: PIE4bits.TMR3IE = useInt;
 16831  1DE3  0C70               	rrf	i1setTMR3Interrupt@useInt,w
 16832  1DE4  1C03               	skipc
 16833  1DE5  111A               	bcf	26,2	;volatile
 16834  1DE6  1803               	skipnc
 16835  1DE7  151A               	bsf	26,2	;volatile
 16836  1DE8  0008               	return
 16837  1DE9                     __end_ofi1_setTMR3Interrupt:	
 16838                           
 16839                           	psect	text67
 16840  1DB1                     __ptext67:	
 16841 ;; *************** function _setTMR3 *****************
 16842 ;; Defined at:
 16843 ;;		line 159 in file "TMR.c"
 16844 ;; Parameters:    Size  Location     Type
 16845 ;;  timerVal        2    0[COMMON] unsigned int 
 16846 ;; Auto vars:     Size  Location     Type
 16847 ;;		None
 16848 ;; Return value:  Size  Location     Type
 16849 ;;                  1    wreg      void 
 16850 ;; Registers used:
 16851 ;;		wreg, status,2
 16852 ;; Tracked objects:
 16853 ;;		On entry : 0/0
 16854 ;;		On exit  : 0/0
 16855 ;;		Unchanged: 0/0
 16856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16861 ;;Total ram usage:        2 bytes
 16862 ;; Hardware stack levels used:    1
 16863 ;; This function calls:
 16864 ;;		Nothing
 16865 ;; This function is called by:
 16866 ;;		_TMR3_ISR
 16867 ;; This function uses a non-reentrant model
 16868 ;;
 16869                           
 16870                           
 16871                           ;psect for function _setTMR3
 16872  1DB1                     _setTMR3:	
 16873                           
 16874                           ;TMR.c: 161: TMR3H = (timerVal >> 8);
 16875                           
 16876                           ;incstack = 0
 16877                           ; Regs used in _setTMR3: [wreg+status,2]
 16878  1DB1  0871               	movf	setTMR3@timerVal+1,w
 16879  1DB2  0144               	movlb	4	; select bank4
 16880  1DB3  0093               	movwf	19	;volatile
 16881                           
 16882                           ;TMR.c: 162: TMR3L = (unsigned char) timerVal;
 16883  1DB4  0870               	movf	setTMR3@timerVal,w
 16884  1DB5  0092               	movwf	18	;volatile
 16885  1DB6  0008               	return
 16886  1DB7                     __end_of_setTMR3:	
 16887                           
 16888                           	psect	text68
 16889  1F30                     __ptext68:	
 16890 ;; *************** function _computeCapa *****************
 16891 ;; Defined at:
 16892 ;;		line 160 in file "main.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;		None
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;		None
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  1    wreg      void 
 16899 ;; Registers used:
 16900 ;;		wreg, status,2, status,0
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16910 ;;Total ram usage:        1 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; This function calls:
 16913 ;;		Nothing
 16914 ;; This function is called by:
 16915 ;;		_main
 16916 ;;		_CMP1_ISR
 16917 ;;		_TMR3_ISR
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           
 16922                           ;psect for function _computeCapa
 16923  1F30                     _computeCapa:	
 16924                           
 16925                           ;main.c: 162: LATEbits.LATE2=(0) ? 0:1;;
 16926                           
 16927                           ;incstack = 0
 16928                           ; Regs used in _computeCapa: [wreg+status,2+status,0]
 16929  1F30  0140               	movlb	0	; select bank0
 16930  1F31  151A               	bsf	26,2	;volatile
 16931                           
 16932                           ;main.c: 163: LATAbits.LATA5 ^= 1;
 16933  1F32  0E16               	swapf	22,w	;volatile
 16934  1F33  00F0               	movwf	??_computeCapa
 16935  1F34  0C70               	rrf	??_computeCapa,w
 16936  1F35  3901               	andlw	1
 16937  1F36  00F0               	movwf	??_computeCapa
 16938  1F37  3001               	movlw	1
 16939  1F38  06F0               	xorwf	??_computeCapa,f
 16940  1F39  0EF0               	swapf	??_computeCapa,f
 16941  1F3A  0DF0               	rlf	??_computeCapa,f
 16942  1F3B  0816               	movf	22,w	;volatile
 16943  1F3C  0670               	xorwf	??_computeCapa,w
 16944  1F3D  39DF               	andlw	-33
 16945  1F3E  0670               	xorwf	??_computeCapa,w
 16946  1F3F  0096               	movwf	22	;volatile
 16947                           
 16948                           ;main.c: 164: freshNews = 1;
 16949  1F40  3001               	movlw	1
 16950  1F41  00F0               	movwf	??_computeCapa
 16951  1F42  0870               	movf	??_computeCapa,w
 16952  1F43  0141               	movlb	1	; select bank1
 16953  1F44  00EB               	movwf	_freshNews^(0+128)	;volatile
 16954  1F45  0008               	return
 16955  1F46                     __end_of_computeCapa:	
 16956                           
 16957                           	psect	text69
 16958  1F06                     __ptext69:	
 16959 ;; *************** function _computeFreq *****************
 16960 ;; Defined at:
 16961 ;;		line 154 in file "main.c"
 16962 ;; Parameters:    Size  Location     Type
 16963 ;;		None
 16964 ;; Auto vars:     Size  Location     Type
 16965 ;;		None
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  1    wreg      void 
 16968 ;; Registers used:
 16969 ;;		wreg, status,2, status,0
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16979 ;;Total ram usage:        1 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; This function calls:
 16982 ;;		Nothing
 16983 ;; This function is called by:
 16984 ;;		_main
 16985 ;;		_TMR3_ISR
 16986 ;; This function uses a non-reentrant model
 16987 ;;
 16988                           
 16989                           
 16990                           ;psect for function _computeFreq
 16991  1F06                     _computeFreq:	
 16992                           
 16993                           ;main.c: 156: LATAbits.LATA5 ^= 1;
 16994                           
 16995                           ;incstack = 0
 16996                           ; Regs used in _computeFreq: [wreg+status,2+status,0]
 16997  1F06  0140               	movlb	0	; select bank0
 16998  1F07  0E16               	swapf	22,w	;volatile
 16999  1F08  00F0               	movwf	??_computeFreq
 17000  1F09  0C70               	rrf	??_computeFreq,w
 17001  1F0A  3901               	andlw	1
 17002  1F0B  00F0               	movwf	??_computeFreq
 17003  1F0C  3001               	movlw	1
 17004  1F0D  06F0               	xorwf	??_computeFreq,f
 17005  1F0E  0EF0               	swapf	??_computeFreq,f
 17006  1F0F  0DF0               	rlf	??_computeFreq,f
 17007  1F10  0816               	movf	22,w	;volatile
 17008  1F11  0670               	xorwf	??_computeFreq,w
 17009  1F12  39DF               	andlw	-33
 17010  1F13  0670               	xorwf	??_computeFreq,w
 17011  1F14  0096               	movwf	22	;volatile
 17012                           
 17013                           ;main.c: 157: freshNews = 1;
 17014  1F15  3001               	movlw	1
 17015  1F16  00F0               	movwf	??_computeFreq
 17016  1F17  0870               	movf	??_computeFreq,w
 17017  1F18  0141               	movlb	1	; select bank1
 17018  1F19  00EB               	movwf	_freshNews^(0+128)	;volatile
 17019  1F1A  0008               	return
 17020  1F1B                     __end_of_computeFreq:	
 17021                           
 17022                           	psect	text70
 17023  1EBA                     __ptext70:	
 17024 ;; *************** function _TMR1_ISR *****************
 17025 ;; Defined at:
 17026 ;;		line 108 in file "TMR.c"
 17027 ;; Parameters:    Size  Location     Type
 17028 ;;		None
 17029 ;; Auto vars:     Size  Location     Type
 17030 ;;		None
 17031 ;; Return value:  Size  Location     Type
 17032 ;;                  1    wreg      void 
 17033 ;; Registers used:
 17034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17035 ;; Tracked objects:
 17036 ;;		On entry : 0/0
 17037 ;;		On exit  : 0/0
 17038 ;;		Unchanged: 0/0
 17039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17044 ;;Total ram usage:        0 bytes
 17045 ;; Hardware stack levels used:    1
 17046 ;; Hardware stack levels required when called:    1
 17047 ;; This function calls:
 17048 ;;		Absolute function
 17049 ;;		_refreshDisplay
 17050 ;; This function is called by:
 17051 ;;		_INTERRUPT_InterruptManager
 17052 ;; This function uses a non-reentrant model
 17053 ;;
 17054                           
 17055                           
 17056                           ;psect for function _TMR1_ISR
 17057  1EBA                     _TMR1_ISR:	
 17058                           
 17059                           ;TMR.c: 111: PIR4bits.TMR1IF = 0;
 17060                           
 17061                           ;incstack = 0
 17062                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17063  1EBA  014E               	movlb	14	; select bank14
 17064  1EBB  1010               	bcf	16,0	;volatile
 17065                           
 17066                           ;TMR.c: 113: TMR1H = 0xE7;
 17067  1EBC  30E7               	movlw	231
 17068  1EBD  0144               	movlb	4	; select bank4
 17069  1EBE  008D               	movwf	13	;volatile
 17070                           
 17071                           ;TMR.c: 114: TMR1L = 0x96;
 17072  1EBF  3096               	movlw	150
 17073  1EC0  008C               	movwf	12	;volatile
 17074                           
 17075                           ;TMR.c: 116: if(TMR1_InterruptHandler)
 17076  1EC1  0142               	movlb	2	; select bank2
 17077  1EC2  082C               	movf	_TMR1_InterruptHandler^(0+256),w
 17078  1EC3  042D               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 17079  1EC4  1903               	btfsc	3,2
 17080  1EC5  0008               	return
 17081                           
 17082                           ;TMR.c: 117: {
 17083                           ;TMR.c: 118: TMR1_InterruptHandler();
 17084  1EC6  082D               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 17085  1EC7  008A               	movwf	10
 17086  1EC8  082C               	movf	_TMR1_InterruptHandler^(0+256),w
 17087  1EC9  000A               	callw
 17088  1ECA  319E               	pagesel	$
 17089  1ECB  0008               	return
 17090  1ECC                     __end_of_TMR1_ISR:	
 17091                           
 17092                           	psect	text71
 17093  1F77                     __ptext71:	
 17094 ;; *************** function _refreshDisplay *****************
 17095 ;; Defined at:
 17096 ;;		line 143 in file "main.c"
 17097 ;; Parameters:    Size  Location     Type
 17098 ;;		None
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;		None
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      void 
 17103 ;; Registers used:
 17104 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17114 ;;Total ram usage:        1 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		_main
 17120 ;;		_TMR1_ISR
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           
 17125                           ;psect for function _refreshDisplay
 17126  1F77                     _refreshDisplay:	
 17127                           
 17128                           ;main.c: 145: static byte d=0;
 17129                           ;main.c: 147: LATC = (0);
 17130                           
 17131                           ;incstack = 0
 17132                           ; Regs used in _refreshDisplay: [wreg+fsr1l+fsr1h+status,2+status,0]
 17133  1F77  0140               	movlb	0	; select bank0
 17134  1F78  0198               	clrf	24	;volatile
 17135                           
 17136                           ;main.c: 148: LATD = ~(1<<(d));
 17137  1F79  3001               	movlw	1
 17138  1F7A  00F0               	movwf	??_refreshDisplay
 17139  1F7B  0A79               	incf	refreshDisplay@d,w
 17140  1F7C  2F7E               	goto	u407_24
 17141  1F7D                     u407_25:	
 17142  1F7D  35F0               	lslf	??_refreshDisplay,f
 17143  1F7E                     u407_24:	
 17144  1F7E  0B89               	decfsz	9,f
 17145  1F7F  2F7D               	goto	u407_25
 17146  1F80  0870               	movf	??_refreshDisplay,w
 17147  1F81  3AFF               	xorlw	255
 17148  1F82  0099               	movwf	25	;volatile
 17149                           
 17150                           ;main.c: 149: LATC = (display[d]);
 17151  1F83  0879               	movf	refreshDisplay@d,w
 17152  1F84  3E20               	addlw	(low (_display| (0+256)))& (0+255)
 17153  1F85  0086               	movwf	6
 17154  1F86  3001               	movlw	1	; select bank2/3
 17155  1F87  0087               	movwf	7
 17156  1F88  0801               	movf	1,w
 17157  1F89  0098               	movwf	24	;volatile
 17158                           
 17159                           ;main.c: 151: d = (d+1)%8;
 17160  1F8A  0879               	movf	refreshDisplay@d,w
 17161  1F8B  3E01               	addlw	1
 17162  1F8C  3907               	andlw	7
 17163  1F8D  00F0               	movwf	??_refreshDisplay
 17164  1F8E  0870               	movf	??_refreshDisplay,w
 17165  1F8F  00F9               	movwf	refreshDisplay@d
 17166  1F90  0008               	return
 17167  1F91                     __end_of_refreshDisplay:	
 17168                           
 17169                           	psect	text72
 17170  1ECC                     __ptext72:	
 17171 ;; *************** function _CMP1_ISR *****************
 17172 ;; Defined at:
 17173 ;;		line 33 in file "CMP_DAC.c"
 17174 ;; Parameters:    Size  Location     Type
 17175 ;;		None
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;		None
 17178 ;; Return value:  Size  Location     Type
 17179 ;;                  1    wreg      void 
 17180 ;; Registers used:
 17181 ;;		wreg, status,2, status,0, pclath, cstack
 17182 ;; Tracked objects:
 17183 ;;		On entry : 0/0
 17184 ;;		On exit  : 0/0
 17185 ;;		Unchanged: 0/0
 17186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17191 ;;Total ram usage:        0 bytes
 17192 ;; Hardware stack levels used:    1
 17193 ;; Hardware stack levels required when called:    1
 17194 ;; This function calls:
 17195 ;;		Absolute function
 17196 ;;		_computeCapa
 17197 ;;		i1_setCMP1Interrupt
 17198 ;; This function is called by:
 17199 ;;		_INTERRUPT_InterruptManager
 17200 ;; This function uses a non-reentrant model
 17201 ;;
 17202                           
 17203                           
 17204                           ;psect for function _CMP1_ISR
 17205  1ECC                     _CMP1_ISR:	
 17206                           
 17207                           ;CMP_DAC.c: 36: T3CONbits.TMR3ON = 0;
 17208                           
 17209                           ;incstack = 0
 17210                           ; Regs used in _CMP1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17211  1ECC  0144               	movlb	4	; select bank4
 17212  1ECD  1014               	bcf	20,0	;volatile
 17213                           
 17214                           ;CMP_DAC.c: 37: PIR2bits.C1IF = 0;
 17215  1ECE  014E               	movlb	14	; select bank14
 17216  1ECF  100E               	bcf	14,0	;volatile
 17217                           
 17218                           ;CMP_DAC.c: 38: setCMP1Interrupt(0);
 17219  1ED0  3000               	movlw	0
 17220  1ED1  319D  25D7  319E   	fcall	i1_setCMP1Interrupt
 17221                           
 17222                           ;CMP_DAC.c: 40: if(CMP1_InterruptHandler)
 17223  1ED4  0141               	movlb	1	; select bank1
 17224  1ED5  086D               	movf	_CMP1_InterruptHandler^(0+128),w
 17225  1ED6  046E               	iorwf	(_CMP1_InterruptHandler+1)^(0+128),w
 17226  1ED7  1903               	btfsc	3,2
 17227  1ED8  0008               	return
 17228                           
 17229                           ;CMP_DAC.c: 41: {
 17230                           ;CMP_DAC.c: 42: CMP1_InterruptHandler();
 17231  1ED9  086E               	movf	(_CMP1_InterruptHandler+1)^(0+128),w
 17232  1EDA  008A               	movwf	10
 17233  1EDB  086D               	movf	_CMP1_InterruptHandler^(0+128),w
 17234  1EDC  000A               	callw
 17235  1EDD  319E               	pagesel	$
 17236  1EDE  0008               	return
 17237  1EDF                     __end_of_CMP1_ISR:	
 17238                           
 17239                           	psect	text73
 17240  1DD7                     __ptext73:	
 17241 ;; *************** function i1_setCMP1Interrupt *****************
 17242 ;; Defined at:
 17243 ;;		line 51 in file "CMP_DAC.c"
 17244 ;; Parameters:    Size  Location     Type
 17245 ;;  useInt          1    wreg     unsigned char 
 17246 ;; Auto vars:     Size  Location     Type
 17247 ;;  useInt          1    0[COMMON] unsigned char 
 17248 ;; Return value:  Size  Location     Type
 17249 ;;                  1    wreg      void 
 17250 ;; Registers used:
 17251 ;;		wreg, status,0
 17252 ;; Tracked objects:
 17253 ;;		On entry : 0/0
 17254 ;;		On exit  : 0/0
 17255 ;;		Unchanged: 0/0
 17256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17261 ;;Total ram usage:        1 bytes
 17262 ;; Hardware stack levels used:    1
 17263 ;; This function calls:
 17264 ;;		Nothing
 17265 ;; This function is called by:
 17266 ;;		_CMP1_ISR
 17267 ;; This function uses a non-reentrant model
 17268 ;;
 17269                           
 17270                           
 17271                           ;psect for function i1_setCMP1Interrupt
 17272  1DD7                     i1_setCMP1Interrupt:	
 17273                           
 17274                           ;incstack = 0
 17275                           ; Regs used in i1_setCMP1Interrupt: [wreg+status,0]
 17276                           ;i1setCMP1Interrupt@useInt stored from wreg
 17277  1DD7  00F0               	movwf	i1setCMP1Interrupt@useInt
 17278                           
 17279                           ;CMP_DAC.c: 53: PIR2bits.C1IF = 0;
 17280  1DD8  014E               	movlb	14	; select bank14
 17281  1DD9  100E               	bcf	14,0	;volatile
 17282                           
 17283                           ;CMP_DAC.c: 54: PIE2bits.C1IE = useInt;
 17284  1DDA  0C70               	rrf	i1setCMP1Interrupt@useInt,w
 17285  1DDB  1C03               	skipc
 17286  1DDC  1018               	bcf	24,0	;volatile
 17287  1DDD  1803               	skipnc
 17288  1DDE  1418               	bsf	24,0	;volatile
 17289  1DDF  0008               	return
 17290  1DE0                     __end_ofi1_setCMP1Interrupt:	
 17291  007E                     btemp	set	126	;btemp
 17292  007E                     int$flags	set	126
 17293  007E                     wtemp	set	126
 17294  007E                     wtemp0	set	126
 17295  0080                     wtemp1	set	128
 17296  0082                     wtemp2	set	130
 17297  0084                     wtemp3	set	132
 17298  0086                     wtemp4	set	134
 17299  0088                     wtemp5	set	136
 17300  007F                     wtemp6	set	127
 17301  007E                     ttemp	set	126
 17302  007E                     ttemp0	set	126
 17303  0081                     ttemp1	set	129
 17304  0084                     ttemp2	set	132
 17305  0087                     ttemp3	set	135
 17306  007F                     ttemp4	set	127
 17307  007E                     ltemp	set	126
 17308  007E                     ltemp0	set	126
 17309  0082                     ltemp1	set	130
 17310  0086                     ltemp2	set	134
 17311  0080                     ltemp3	set	128


Data Sizes:
    Strings     105
    Constant    246
    Data        1
    BSS         22
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     80      80
    BANK1            80     66      80
    BANK2            80      4      14
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    TMR5_InterruptHandler	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[11]), STR_6(CODE[12]), STR_5(CODE[7]), STR_4(CODE[8]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> printCapa@buf(BANK1[17]), tempmeter_state@buf(BANK1[17]), counter_state@buf(BANK1[17]), printFreq@buf(BANK1[17]), 
		 -> voltmeter_state@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    getPrintableSize@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[11]), STR_9(CODE[10]), STR_8(CODE[15]), printCapa@buf(BANK1[17]), 
		 -> tempmeter_state@buf(BANK1[17]), counter_state@buf(BANK1[17]), printFreq@buf(BANK1[17]), voltmeter_state@buf(BANK1[17]), 
		 -> STR_1(CODE[9]), 

    writeo@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[11]), STR_9(CODE[10]), STR_8(CODE[15]), printCapa@buf(BANK1[17]), 
		 -> tempmeter_state@buf(BANK1[17]), counter_state@buf(BANK1[17]), printFreq@buf(BANK1[17]), voltmeter_state@buf(BANK1[17]), 
		 -> STR_1(CODE[9]), 

    setTMR3InterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> computeFreq(), computeCapa(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), computeFreq(), computeCapa(), 

    setTMR1InterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> refreshDisplay(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), refreshDisplay(), 

    setCMP1InterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> computeCapa(), 

    CMP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), computeCapa(), 


Critical Paths under _main in COMMON

    _measureInput->_ADC_GetSingleConversion
    _measureTemp->_ADC_GetSingleConversion
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftdiv->___ftpack
    _freqmeter_state->_startGatedCount
    _startGatedCount->_setTMR3Interrupt
    _writeo->_getPrintableSize
    _sprintf->___ftge
    _sprintf->___ftneg
    _sprintf->___llmod
    _scale->___awmod
    _fround->___awmod
    ___wmul->___awmod
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftadd->___ftpack
    _capameter_state->_startTimeMeasurement
    _startTimeMeasurement->_setTMR3Interrupt

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_TMR3_ISR
    _TMR3_ISR->_setTMR3
    _TMR1_ISR->_refreshDisplay
    _CMP1_ISR->_computeCapa
    _CMP1_ISR->i1_setCMP1Interrupt

Critical Paths under _main in BANK0

    _voltmeter_state->_measureInput
    _measureInput->___fttol
    _tempmeter_state->_measureTemp
    _measureTemp->___fttol
    ___awtoft->___ftpack
    _resmeter_state->_writeo
    _pwm_state->_writeo
    _printCapa->___fttol
    ___lwtoft->___ftpack
    ___ftdiv->___awtoft
    _ibtn_state->_writeo
    _writeo->_getPrintableSize
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_tempmeter_state
    _main->_voltmeter_state
    _voltmeter_state->_sprintf
    _tempmeter_state->_sprintf
    _printFreq->_sprintf
    _printCapa->_sprintf
    _counter_state->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  378574
                                              0 BANK2      4     4      0
                    _capameter_state
                      _counter_state
                    _freqmeter_state
                         _ibtn_state
                          _printCapa
                          _printFreq
                          _pwm_state
                     _resmeter_state
            _setCMP1InterruptHandler
                   _setTMR1Interrupt
            _setTMR1InterruptHandler
            _setTMR3InterruptHandler
                              _start
                    _tempmeter_state
                    _voltmeter_state
                             _writeo
 ---------------------------------------------------------------------------------
 (1) _voltmeter_state                                     22    22      0   78488
                                             44 BANK1     22    22      0
                           ___awtoft
                            ___ftdiv
                       _measureInput
                            _sprintf
                             _writeo
 ---------------------------------------------------------------------------------
 (2) _measureInput                                         4     2      2    9588
                                             76 BANK0      4     2      2
            _ADC_GetSingleConversion
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _tempmeter_state                                     22    22      0   82762
                                             44 BANK1     22    22      0
                           ___awtoft
                            ___ftdiv
                        _measureTemp
                            _sprintf
                             _writeo
 ---------------------------------------------------------------------------------
 (2) _measureTemp                                          4     2      2   13859
                                             76 BANK0      4     2      2
            _ADC_GetSingleConversion
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) _ADC_GetSingleConversion                              4     1      3      31
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2871
                                              5 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _start                                                0     0      0       0
                           _init_ADC
                          _init_CLCs
                       _init_CMP_DAC
                           _init_PPS
                          _init_TMRs
                        _init_global
                     _init_interrupt
                           _init_osc
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_global                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_TMRs                                            0     0      0       0
                          _init_TMR1
                          _init_TMR3
                          _init_TMR5
 ---------------------------------------------------------------------------------
 (3) _init_TMR5                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_TMR3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_PPS                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CMP_DAC                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_CLCs                                            0     0      0       0
                          _init_CLC1
                          _init_CLC2
                          _init_CLC3
                          _init_CLC4
 ---------------------------------------------------------------------------------
 (3) _init_CLC4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_CLC3                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_CLC2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _init_CLC1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setTMR3InterruptHandler                              2     0      2     185
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setTMR1InterruptHandler                              2     0      2     108
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setTMR1Interrupt                                     1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setCMP1InterruptHandler                              2     0      2     108
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _resmeter_state                                       0     0      0    2317
                             _writeo
 ---------------------------------------------------------------------------------
 (1) _pwm_state                                            0     0      0    2317
                             _writeo
 ---------------------------------------------------------------------------------
 (1) _printFreq                                           19    19      0   69128
                                             44 BANK1     19    19      0
                            ___ftdiv
                           ___lwtoft
                            _getTMR5
                            _sprintf
                             _writeo
 ---------------------------------------------------------------------------------
 (2) _getTMR5                                              7     5      2      37
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _printCapa                                           21    21      0   75691
                                             76 BANK0      2     2      0
                                             44 BANK1     19    19      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _getTMR3
                            _sprintf
                             _writeo
 ---------------------------------------------------------------------------------
 (2) _getTMR3                                              7     5      2      37
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    3000
                                              5 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3620
                                             11 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _ibtn_state                                           0     0      0    2317
                             _writeo
 ---------------------------------------------------------------------------------
 (1) _freqmeter_state                                      2     2      0      93
                                              0 BANK0      2     2      0
                    _startGatedCount
 ---------------------------------------------------------------------------------
 (2) _startGatedCount                                      2     2      0      93
                                              5 COMMON     2     2      0
                   _setTMR3Interrupt
 ---------------------------------------------------------------------------------
 (1) _counter_state                                       19    19      0   62471
                                             76 BANK0      1     1      0
                                             44 BANK1     18    18      0
                            _sprintf
                             _writeo
 ---------------------------------------------------------------------------------
 (1) _writeo                                              15    12      3    2317
                                              5 BANK0     15    12      3
                   _getPrintableSize
 ---------------------------------------------------------------------------------
 (2) _getPrintableSize                                     7     5      2     179
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             49    44      5   59867
                                              0 BANK1     44    39      5
                            ___awdiv
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                           ___lwtoft (ARG)
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               12     9      3   13561
                                             35 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    14      3   13282
                                             35 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3370
                                             13 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    5690
                                             19 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1819
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1985
                                              4 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         16    10      6     608
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          20    14      6     827
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2763
                                              5 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     848
                                              5 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     703
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     833
                                             62 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4521
                                             62 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4271
                                             49 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2584
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                              4 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     814
                                              4 COMMON     3     3      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _capameter_state                                      8     8      0     173
                                              0 BANK0      8     8      0
                   _setCMP1Interrupt
               _startTimeMeasurement
 ---------------------------------------------------------------------------------
 (2) _startTimeMeasurement                                 1     1      0      31
                                              5 COMMON     1     1      0
                   _setTMR3Interrupt
 ---------------------------------------------------------------------------------
 (3) _setTMR3Interrupt                                     1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setCMP1Interrupt                                     1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0     152
                                              3 COMMON     1     1      0
                           _CMP1_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             1     1      0     130
                                              2 COMMON     1     1      0
                   Absolute function *
                        _computeCapa *
                        _computeFreq *
                            _setTMR3
                 i1_setTMR3Interrupt
 ---------------------------------------------------------------------------------
 (8) i1_setTMR3Interrupt                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _setTMR3                                              2     0      2     108
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _computeFreq                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
                   Absolute function *
                     _refreshDisplay *
 ---------------------------------------------------------------------------------
 (8) _refreshDisplay                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CMP1_ISR                                             0     0      0      22
                   Absolute function *
                        _computeCapa *
                 i1_setCMP1Interrupt
 ---------------------------------------------------------------------------------
 (8) i1_setCMP1Interrupt                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _computeCapa                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _capameter_state
     _setCMP1Interrupt
     _startTimeMeasurement
       _setTMR3Interrupt
   _counter_state
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _writeo
       _getPrintableSize
   _freqmeter_state
     _startGatedCount
       _setTMR3Interrupt
   _ibtn_state
     _writeo
       _getPrintableSize
   _printCapa
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _getTMR3
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _writeo
       _getPrintableSize
   _printFreq
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _getTMR5
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _writeo
       _getPrintableSize
   _pwm_state
     _writeo
       _getPrintableSize
   _resmeter_state
     _writeo
       _getPrintableSize
   _setCMP1InterruptHandler
   _setTMR1Interrupt
   _setTMR1InterruptHandler
   _setTMR3InterruptHandler
   _start
     _init_ADC
     _init_CLCs
       _init_CLC1
       _init_CLC2
       _init_CLC3
       _init_CLC4
     _init_CMP_DAC
     _init_PPS
     _init_TMRs
       _init_TMR1
       _init_TMR3
       _init_TMR5
     _init_global
     _init_interrupt
     _init_osc
   _tempmeter_state
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     _measureTemp
       _ADC_GetSingleConversion
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _writeo
       _getPrintableSize
   _voltmeter_state
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     _measureInput
       _ADC_GetSingleConversion
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lwtoft
         ___ftpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _writeo
       _getPrintableSize
   _writeo
     _getPrintableSize

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
     Absolute function(Fake) *
     _computeCapa *
     i1_setCMP1Interrupt *
   _TMR1_ISR
     Absolute function(Fake) *
     _refreshDisplay *
   _TMR3_ISR
     Absolute function(Fake) *
     _computeCapa *
     _computeFreq *
     _setTMR3 *
     i1_setTMR3Interrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     42      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      4       E       9       17.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      B8      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      B8      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Feb 22 21:49:15 2018

                      getPrintableSize@a 0074                        getPrintableSize@s 0024  
                                      pc 0002                      getPrintableSize@chr 0023  
                            __CFG_CP$OFF 0000                         ??_init_interrupt 0074  
                                     l77 08C7                             ___awdiv@sign 002A  
                    ___wmul@multiplicand 002F                             printFreq@buf 00CC  
        __end_of_setCMP1InterruptHandler 1DBD                             ___ftadd@exp1 005D  
                           ___ftadd@exp2 005C                             ___ftadd@sign 005B  
                                    l320 1E62                                      l714 126B  
                                    l900 0433                                      l840 007F  
                                    l841 0081                                      l745 1640  
                                    l746 1638                                      l843 0095  
                                    l838 007D                                      l951 072E  
                                    l928 0693                                      l864 025B  
                                    l856 0128                                      l784 1738  
                                    l937 06EA                                      l698 11A6  
                                    l948 0722                                      l886 03E1  
                           __CFG_CPD$OFF 0000                  __end_of_capameter_state 1254  
                           ___awmod@sign 0076                             __CFG_BORV$HI 0000  
                           ?_computeCapa 0070                                      wreg 0009  
                           ?_computeFreq 0070                                     S6513 1800  
                           __CFG_LVP$OFF 0000                             __CFG_ZCD$OFF 0000  
                           ___ftdiv@cntr 0035                             ___ftdiv@sign 003A  
                                   l1210 0C48                                     l1044 1168  
                                   l1230 1586                                     l1222 156B  
                                   l1330 160A                                     l1229 157E  
                                   l1253 0AE0                                     l1279 09BC  
                                   l1289 0A35                                     l5001 144B  
                                   l5111 0AB6                                     l5103 0A99  
                                   l5007 1456                                     l5121 0AD2  
                                   l5113 0ABB                                     l5033 148D  
                                   l5025 147C                                     l5017 145E  
                                   l5131 0B04                                     l5123 0ADC  
                                   l5115 0ABF                                     l5019 146A  
                                   l6003 03C5                                     l5141 0B1F  
                                   l5109 0AAC                                     l5029 1485  
                                   l5045 13B7                                     l6101 05EA  
                                   l5127 0AF2                                     l5071 13ED  
                                   l5063 13DC                                     l5151 08EE  
                                   l6031 03EE                                     l6015 03DB  
                                   l6007 03D3                                     l5311 117D  
                                   l5081 0A69                                     l5057 13C4  
                                   l5049 13BE                                     l6201 0728  
                                   l6033 040A                                     l5313 1198  
                                   l5091 0A7F                                     l5411 09DD  
                                   l5059 13D0                                     l5067 13E5  
                                   l6131 0637                                     l6107 05F9  
                                   l5501 1302                                     l5085 0A70  
                                   l5181 095B                                     l5173 0947  
                                   l5157 0904                                     l6141 067B  
                                   l6125 0631                                     l6045 042D  
                                   l6109 05FE                                     l6221 078B  
                                   l5431 0A1F                                     l5335 0D8D  
                                   l5327 0D15                                     l5351 0E64  
                                   l6119 0623                                     l6071 04C0  
                                   l6063 0440                                     l6039 041A  
                                   l5505 1318                                     l5185 0963  
                                   l5169 093F                                     l5361 0EE0  
                                   l6217 073B                                     l6161 06D9  
                                   l6137 0664                                     l6065 04B0  
                                   l6313 11B5                                     l6241 11C5  
                                   l5611 1398                                     l5419 09F7  
                                   l6171 06E4                                     l6163 06DC  
                                   l6155 06BA                                     l6219 0056  
                                   l6251 176E                                     l6323 142A  
                                   l5605 1372                                     l5437 0A2C  
                                   l5429 0A11                                     l5357 0EC3  
                                   l6181 06F7                                     l6157 06BD  
                                   l6149 06A6                                     l6085 04F6  
                                   l6077 04DA                                     l5607 1380  
                                   l5615 13A3                                     l5623 0808  
                                   l5455 0B72                                     l5439 0A38  
                                   l5375 0FE3                                     l6191 070F  
                                   l6271 17C5                                     l5529 1FEA  
                                   l5625 0818                                     l5473 0C05  
                                   l5465 0BBD                                     l5449 0B55  
                                   l5369 0F84                                     l5641 16CF  
                                   l6329 125A                                     l5801 1210  
                                   l6257 1784                                     l6345 07A2  
                                   l6441 087E                                     l6433 0871  
                                   l5571 161B                                     l5539 15B6  
                                   l5491 0C3F                                     l5483 0C24  
                                   l5387 1E4A                                     l5651 16EE  
                                   l5643 16D4                                     l6347 07B4  
                                   l6443 0882                                     l6427 085F  
                                   l5565 1601                                     l5557 15E6  
                                   l5581 14A3                                     l5493 0C4B  
                                   l5485 0C32                                     l5397 09A4  
                                   l6189 070B                                     l5653 16F3  
                                   l5637 16C7                                     l6461 08A9  
                                   l6445 0886                                     l6429 0863  
                                   l4951 1541                                     l5567 160D  
                                   l5559 15F4                                     l5591 14D1  
                                   l5583 14B1                                     l5671 174E  
                                   l5655 16F7                                     l5647 16E5  
                                   l6279 17DE                                     l6471 08BD  
                                   l5921 0155                                     l5913 012A  
                                   l5905 00ED                                     l6393 164E  
                                   l6457 08A1                                     l6449 0894  
                                   l6465 08B1                                     l4955 1548  
                                   l5595 14DC                                     l5931 018D  
                                   l5915 0145                                     l5907 0123  
                                   l5675 1700                                     l6395 1650  
                                   l6459 08A5                                     l6467 08AC  
                                   l4965 1570                                     l4957 1552  
                                   l4981 1162                                     l5669 1741  
                                   l4967 1578                                     l4959 1557  
                                   l5961 028E                                     l5881 009B  
                                   l5873 0082                                     l5955 023F  
                                   l5947 01ED                                     l5867 0078  
                                   l5973 02DA                                     l5885 00A8  
                                   l5893 00DD                                     l5877 0086  
                                   l5983 0320                                     l5993 037B  
                                   l5969 02C1                                     l5987 0375  
                                   l5999 03A8                                     STR_1 1147  
                                   STR_2 1127                                     STR_3 1132  
                                   STR_4 1150                                     STR_5 1158  
                                   STR_6 1105                                     STR_7 111C  
                                   STR_8 10F6                                     STR_9 113D  
                                   _LATA 0016                                     _LATB 0017  
                                   _LATC 0018                                     _LATD 0019  
                                   _LATE 001A                                     u5215 154D  
                                   u5235 1566                                     u6035 09DE  
                                   u6125 0A2D                                     u6045 09EE  
                                   u5405 146B                                     u5325 1169  
                                   u7005 04C9                                     u5255 1573  
                                   u6215 0C25                                     u6055 09F8  
                                   u5415 1475                                     u5335 116E  
                                   u7015 04D5                                     u5425 147D  
                                   u5505 13D6                                     u5515 13DD  
                                   u7115 0673                                     u6325 15BD  
                                   u6245 0C40                                     u6165 0BBE  
                                   u7125 068B                                     u5295 158D  
                                   u6175 0BE8                                     u6095 0A12  
                                   u6425 14A6                                     u5385 1461  
                                   u5635 0A9A                                     u6355 15E7  
                                   u6515 138E                                     u7420 11AF  
                                   u5725 0AD3                                     u6445 14B2  
                                   u6525 1399                                     u5485 13C7  
                                   u5805 0920                                     u7165 06B2  
                                   u7430 11B0                                     u6455 14C6  
                                   u7175 06CC                                     u7095 065A  
                                   u5665 0AAD                                     u6385 1602  
                                   u6465 14D2                                     u6545 080D  
                                   u5825 0948                                     u7345 1796  
                                   u5835 094E                                     u7355 17A6  
                                   u7515 1647                                     u6805 0298  
                                   u7365 17C6                                     u5695 0AC0  
                                   u6495 1375                                     u7375 17D5  
                                   u7607 1530                                     u5865 0964  
                                   u6585 16DD                                     u7385 17DF  
                                   u7617 07F4                                     u5875 096A  
                                   u5795 0910                                     u6835 02BF  
                                   u6755 01A1                                     u7627 1633  
                                   u7637 11A1                                     u7647 123A  
                                   u6945 03F7                                     u6865 039E  
                                   u6955 0424                                     u6795 0265  
                                   u7587 0857                                     u7597 08C2  
                                   _WPUA 1F39                                     _WPUB 1F44  
                                   _WPUC 1F4F                                     _WPUD 1F5A  
                                   _WPUE 1F65                             __CFG_WRT$OFF 0000  
                          __CFG_FCMEN$ON 0000                                     _fast 00EA  
                                   _main 082D                             ___ftpack@arg 0020  
                           ___ftpack@exp 0023                                     fsr0h 0005  
                                   fsr1h 0007                                     fsr0l 0004  
                                   indf0 0000                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                          __CFG_BOREN$ON 0000                                     ltemp 007E  
                                   start 0033               __end_ofi1_setTMR3Interrupt 1DE9  
                                   ttemp 007E                                     wtemp 007E  
                           _sprintf$2150 00AB                         __end_of_CMP1_ISR 1EDF  
                           _sprintf$1610 00AE                             _sprintf$1611 00B0  
                           _sprintf$1612 00B2                             _sprintf$1613 00B4  
                          __CFG_CSWEN$ON 0000                            __CFG_MCLRE$ON 0000  
                         printFreq@count 00DD                             ___ftmul@cntr 0041  
                           ___ftmul@sign 0042                             ?_measureTemp 006C  
                 __size_of_counter_state 0032                              _writeo$1550 002F  
                            _writeo$1548 002B                              _writeo$1549 002D  
                       ?_freqmeter_state 0070                             ___fttol@exp1 006B  
                           ___fttol@lval 0067                   setCMP1Interrupt@useInt 0074  
                      ??_voltmeter_state 00CC                                    _ADACQ 009D  
                                  _ADCAP 009B                                    _ADACT 0099  
                                  ?_main 0070                                    _ADCLK 0098  
                                  _ADCNT 010C                                    _ADPCH 009E  
                                  _ADREF 009A                          __end_of___awdiv 1492  
                                  _ADPRE 009C                          __end_of___ftadd 0B37  
                                  STR_10 1111                            __CFG_WDTE$OFF 0000  
                        __end_of___awmod 13F2                                    _ADRPT 010D  
                        __end_of___ftdiv 1800                          __end_of___ftneg 1DD7  
                        __end_of___lldiv 14E5                          __end_of___ftmul 098B  
                                  _T1CLK 0211                          ___awdiv@divisor 0024  
                                  _T1CON 020E                          __end_of___llmod 13AC  
                        __end_of___ftsub 2000                          __end_of___fttol 1624  
                                  _T3CLK 0217                                    _T3CON 0214  
                                  _T5CLK 021D                                    _T5CON 021A  
                                  i1l231 0026                                    i1l235 002E  
                                  i1l227 0013                                    i1l229 001C  
                                  i1l636 12D3                                    i1l637 12D1  
                        ___awdiv@counter 0029                             ?_init_global 0070  
                                  _OSCEN 0891                                    _TMR1H 020D  
                                  _TMR3H 0213                                    _TMR1L 020C  
                                  _TMR5H 0219                                    _TMR3L 0212  
                                  _TMR5L 0218                                    _TRISA 0011  
                                  _TRISB 0012                                    _TRISC 0013  
                                  _TRISD 0014                                    _TRISE 0015  
              ??_ADC_GetSingleConversion 0077                          __end_of_getTMR3 1FAC  
                        __end_of_getTMR5 1FC7                          __end_of_charset 1080  
                           ___lltoft@exp 002A                         __end_of_TMR1_ISR 1ECC  
                       __end_of_TMR3_ISR 12EB                            ___awtoft@sign 002A  
                        __end_of_dpowers 10A8                                    _scale 0DBA  
                        __end_of_isdigit 1E4C                          __end_of_setTMR3 1DB7  
                          ___ftpack@sign 0024                                    _start 1F46  
                                  pclath 000A                                    ltemp0 007E  
                                  ltemp1 0082                                    ltemp2 0086  
                                  ltemp3 0080                            ?_init_CMP_DAC 0070  
                      ??_tempmeter_state 00CC                                    ttemp0 007E  
                                  ttemp1 0081                                    ttemp2 0084  
                                  ttemp3 0087                                    ttemp4 007F  
                                  status 0003                                    wtemp0 007E  
                                  wtemp1 0080                                    wtemp2 0082  
                                  wtemp3 0084                                    wtemp4 0086  
                                  wtemp5 0088                                    wtemp6 007F  
                        __end_of_sprintf 0790                     _capameter_state$1520 0024  
                   _capameter_state$1522 0026                     _capameter_state$1519 0022  
                        __initialization 0035                           _refreshDisplay 1F77  
                           __end_of_main 08D7                            ?_measureInput 006C  
               ?_setTMR3InterruptHandler 0074              ?_INTERRUPT_InterruptManager 0070  
                     i1_setCMP1Interrupt 1DD7                         _setTMR1Interrupt 1E16  
                                 ??_main 0128                            ___fttol@sign1 0066  
                  _TMR3_InterruptHandler 00E2                     __size_of__tdiv_to_l_ 00B6  
                       ?_capameter_state 0070                      ?i1_setCMP1Interrupt 0070  
                       _setTMR3Interrupt 1DF2                          _startGatedCount 11FF  
                                 _ADACCH 0091                                   _ADACCL 0090  
                                 _ADCON0 0093                                   _ADCON1 0094  
                                 _ADCON2 0095                                   _ADCON3 0096  
                          _counter_state 1254                                   _ADERRH 0117  
                                 _ADERRL 0116                         ___llmod@dividend 0031  
                                 _ADLTHH 010F                                   ?_scale 0043  
                                 _ADLTHL 010E                                   _ADRESH 008D  
                                 _ADRESL 008C                        ?_getPrintableSize 0074  
                                 _ADSTAT 0097                                   _ADUTHH 0111  
                       ___awdiv@dividend 0026                                   _ADUTHL 0110  
                       __end_of___awtoft 11DC                                   _ANSELA 1F38  
                                 _ANSELB 1F43                                   _ANSELC 1F4E  
                                 _ANSELD 1F59                                   _ANSELE 1F64  
                       __end_of___ftpack 159D                                   ?_start 0070  
                                 _T1GATE 0210                                   _T1GCON 020F  
                                 _T3GATE 0216                                   _T3GCON 0215  
                                 _T5GATE 021C                                   _T5GCON 021B  
                                 _RB0PPS 1F18                                   _RA3PPS 1F13  
                                 _RA4PPS 1F14                         __end_of___lltoft 082D  
                         ??_init_CMP_DAC 0074                                   _ODCONA 1F3A  
                                 _ODCONB 1F45                                   _ODCONC 1F50  
                                 _ODCOND 1F5B                                   _ODCONE 1F66  
                         __CFG_WDTCCS$SC 0000                                   u407_24 1F7E  
                                 u407_25 1F7D                         __end_of___lwtoft 1F30  
                     ??_getPrintableSize 0020                                   _OSCFRQ 0893  
                         __CFG_PWRTE$OFF 0000                   __end_of_refreshDisplay 1F91  
                   ??i1_setCMP1Interrupt 0070                         __end_of__powers_ 10F6  
               __end_of_setCMP1Interrupt 1DF2                                   ___ftge 12EB  
                         ??_measureInput 0077                                   ___wmul 115F  
                              ??___awdiv 0028                                ??___ftadd 0057  
                         __CFG_STVREN$ON 0000                                ??___awmod 0074  
                              ??___ftdiv 0031                                ??___ftneg 0077  
                              ??___lldiv 0074                                ??___ftmul 0039  
                              ??___llmod 0075                                ??___ftsub 0077  
                              ??___fttol 0062                         __end_of_init_ADC 1FE2  
                       __end_of_init_PPS 1F77                          setTMR3@timerVal 0070  
                                 _fround 0C54                         __end_of_init_osc 1E32  
                       ___awdiv@quotient 002B                                ??_getTMR3 0020  
                              ??_getTMR5 0020                          ___awmod@divisor 0020  
                        ___awmod@counter 0075                                   _writeo 16B5  
                  ___ftmul@f3_as_product 003E                                ??_isdigit 0074  
                              ??_setTMR3 0072                           ?_counter_state 0070  
                              ?_CMP1_ISR 0070                     __size_of_computeCapa 0016  
setTMR3InterruptHandler@InterruptHandler 0074  setTMR1InterruptHandler@InterruptHandler 0074  
setCMP1InterruptHandler@InterruptHandler 0074                                ??_sprintf 00A5  
                   __size_of_computeFreq 0015                  __end_of__initialization 004C  
           __end_of_startTimeMeasurement 1F06                               ___ftadd@f1 0051  
                             ___ftadd@f2 0054                          __CFG_FEXTOSC$HS 0000  
                             ___ftge@ff1 0020                               ___ftge@ff2 0023  
                             ___ftdiv@f1 002E                               ___ftdiv@f2 002B  
                             ___ftdiv@f3 0036                               ___ftneg@f1 0074  
                             ___awtoft@c 0025                          ?_refreshDisplay 0070  
                             ___ftmul@f1 0033                               ___ftmul@f2 0036  
                             ___ftsub@f1 0061                               ___ftsub@f2 005E  
                             ___fttol@f1 005E                           __pcstackCOMMON 0070  
       __size_of_setTMR1InterruptHandler 0006                             __pidataBANK1 07FF  
                              ?_TMR1_ISR 0070                               ___lltoft@c 0025  
                              ?_TMR3_ISR 0070                            __end_of_scale 1000  
                          __end_of_start 1F5E                     __size_of_measureTemp 0042  
                             ___lwtoft@c 0025                  __end_of_startGatedCount 1224  
                             __div_to_l_ 0B37                     __size_of_init_global 0023  
                             ??_CMP1_ISR 0071                          __div_to_l_@exp1 0033  
                        __div_to_l_@cntr 0032                 ?_setCMP1InterruptHandler 0074  
                                ??_scale 0046                          __div_to_l_@quot 002E  
                           sprintf@width 00C1                                  ??_start 0074  
                             __pbssBANK1 00E2                               __pbssBANK2 0120  
                     __size_of_init_CLC1 0010                       __size_of_init_CLC2 0010  
                     __size_of_init_CLC3 0010                       __size_of_init_CLC4 0001  
                     __size_of_init_CLCs 000C                       __size_of_init_TMR1 0011  
                     __size_of_init_TMR3 000E                       __size_of_init_TMR5 0010  
                     __size_of_init_TMRs 0009                            __div_to_l_@f1 0020  
                          __div_to_l_@f2 0023                          _voltmeter_state 14E5  
                             _isTMR3fast 0078                               __pmaintext 082D  
                                ?___ftge 0020                  __size_of_resmeter_state 0009  
                                ?___wmul 002D                               ??_TMR1_ISR 0071  
                        __CFG_PPS1WAY$ON 0000                               ??_TMR3_ISR 0072  
                             __pintentry 0004                                  _CM1CON0 0990  
                                _CM1CON1 0991                                  _ADFLTRH 0115  
                                _ADFLTRL 0114                                  _CLC1CON 1E10  
                                _CLC2CON 1E1A                                  _CLC3CON 1E24  
                                _CM1NSEL 0992                                  _CM1PSEL 0993  
                                _CLC1POL 1E11                                  _CLC2POL 1E1B  
                                ?_fround 0043                                  _CLC3POL 1E25  
                                _ADPREVH 008F                                  _ADPREVL 008E  
                              ?___awtoft 0025                     __end_of_init_CMP_DAC 1EF2  
                              ?___ftpack 0020                                  _ADSTPTH 0113  
                                _ADSTPTL 0112                                ?___lltoft 0025  
                     i1_setTMR3Interrupt 1DE0                                ?___lwtoft 0025  
                                ?_writeo 0025                             measureTemp@r 006E  
                     __size_of_printCapa 0091                          ??_counter_state 006C  
                     __size_of_printFreq 004E                          _tempmeter_state 0790  
                                _OSCCON1 088D                                  _OSCCON3 088F  
                                _OSCSTAT 0890                      ?i1_setTMR3Interrupt 0070  
                                _OSCTUNE 0892                                  _PPSLOCK 1E8F  
                     __size_of_pwm_state 0009                     __end_of_measureInput 12B8  
                              ?_init_ADC 0070                               _ibtn_state 1DFB  
                              ?_init_PPS 0070                 __end_of_setTMR1Interrupt 1E1F  
                              ?_init_osc 0070                             _T5CKIPPSbits 1E96  
                              _CLCIN0PPS 1EBB                                _CLCIN1PPS 1EBC  
                      __end_of__npowers_ 10CF                               _scale$2149 0048  
                   ??i1_setTMR3Interrupt 0070                 __end_of_setTMR3Interrupt 1DFB  
                   __CFG_SCANE$available 0000                          __size_of___ftge 003C  
                                ___awdiv 1440                                  ___ftadd 0A41  
                                ___awmod 13AC                                  ___ftdiv 1757  
                                ___ftneg 1DCF                                  ___lldiv 1492  
                        __size_of___wmul 001C                                  ___ftmul 08D7  
                                ___llmod 1369                                  ___ftsub 1FE2  
                                ___fttol 159D                                  _getTMR3 1F91  
                                _getTMR5 1FAC                               ??___awtoft 0028  
                             ??___ftpack 0074                                  _charset 1000  
                        __size_of_fround 0166                        __end_of_init_CLC1 1E79  
                      __end_of_init_CLC2 1E89                        __end_of_init_CLC3 1E99  
                      __end_of_init_CLC4 0004                               ??___lltoft 0029  
                      __end_of_init_CLCs 1E3E                                  __ptext1 14E5  
                                __ptext2 1286                                  __ptext3 0790  
                                __ptext4 1327                                  __ptext5 1E5A  
                                __ptext6 11BA                                  __ptext7 1F46  
                                __ptext8 1E28                                  __ptext9 07FC  
                      __end_of_init_TMR1 1EBA                        __end_of_init_TMR3 1E5A  
                      __end_of_init_TMR5 1EA9                               ??___lwtoft 0028  
                                _display 0120                        __end_of_init_TMRs 1E28  
                       ?_startGatedCount 0070                                _T1CONbits 020E  
                            ?__div_to_l_ 0020                          __size_of_writeo 00A2  
                   _startTimeMeasurement 1EF2                                  _dpowers 1080  
                                _isdigit 1E3E                 __size_of_freqmeter_state 0020  
                     tempmeter_state@buf 00CF                                _T3CONbits 0214  
                                _setTMR3 1DB1                                _CMOUTbits 098F  
                       ___awmod@dividend 0022                                _T5CONbits 021A  
                __size_of_init_interrupt 0003         __size_of_setTMR3InterruptHandler 0006  
                                _sprintf 0050                                  clrloop0 1DCA  
                __end_of_voltmeter_state 1538                     end_of_initialization 004C  
                             ??_init_ADC 0074                               ??_init_PPS 0074  
                             ??_init_osc 0074                          ___lldiv@divisor 0020  
                       voltmeter_state@m 00E0                        __end_of_printCapa 16B5  
                      __end_of_printFreq 1440                          ___lldiv@counter 002C  
                _setTMR1InterruptHandler 1DBD                __size_of_getPrintableSize 001F  
                      ?_setCMP1Interrupt 0070                        __end_of_pwm_state 1E0D  
                           __pstringtext 1000                           __tdiv_to_l_@f1 0020  
                         __tdiv_to_l_@f2 0023                  __end_of_tempmeter_state 07FC  
                     ??_setCMP1Interrupt 0074                    __CFG_WDTCPS$WDTCPS_31 0000  
                  _CMP1_InterruptHandler 00ED                            ??__tdiv_to_l_ 0026  
               ?_ADC_GetSingleConversion 0074                                  writeo@a 0025  
                                writeo@i 0033                                  writeo@j 0031  
                              _PORTAbits 000C                                _PORTBbits 000D  
                  ?_startTimeMeasurement 0070                    _TMR5_InterruptHandler 00E4  
                              _TRISAbits 0011                        __size_of_CMP1_ISR 0013  
                            ?_ibtn_state 0070                         ??_refreshDisplay 0070  
               __size_of_capameter_state 0030                              ___ftdiv@exp 0039  
                    __size_of__div_to_l_ 011D              __size_ofi1_setCMP1Interrupt 0009  
                            ___ftmul@exp 003D                           _resmeter_state 1E0D  
                  __size_of_init_CMP_DAC 0013                              _CLC1CONbits 1E10  
                            _CLC2CONbits 1E1A                           __end_of___ftge 1327  
                            _CLC3CONbits 1E24                           __end_of___wmul 117B  
                            _CLC4CONbits 1E2E                        __size_of_TMR1_ISR 0012  
                      __size_of_TMR3_ISR 0033                           __end_of_fround 0DBA  
                  __size_of_measureInput 0032                            ??_computeCapa 0070  
                         __end_of_writeo 1757                            ??_computeFreq 0070  
                    start_initialization 0035                      __end_of__tdiv_to_l_ 0A41  
                       ?_voltmeter_state 0070                        ??_freqmeter_state 0020  
                           _init_CMP_DAC 1EDF                          ___llmod@divisor 002D  
              ??_setTMR1InterruptHandler 0076                        __CFG_RSTOSC$EXT1X 0000  
                        ___llmod@counter 0076                   __end_of_resmeter_state 1E16  
                       __CFG_LPBOREN$OFF 0000         __size_of_setCMP1InterruptHandler 0006  
        __end_of_ADC_GetSingleConversion 1E69                            ??_measureTemp 0077  
                               ??___ftge 0074                                 ??___wmul 0077  
                       tempmeter_state@m 00E0                             _measureInput 1286  
                            __pdataBANK1 00EF                         ?_tempmeter_state 0070  
                               ??_fround 0046                   ??_startTimeMeasurement 0075  
                          sprintf@tmpval 00B7                      __size_of_ibtn_state 0009  
                               ??_writeo 0028                            ??_init_global 0074  
                             fround@prec 0050                        __size_of___awtoft 0022  
                      __size_of___ftpack 0065                        __size_of___lltoft 002A  
                            __pbssCOMMON 0077                          refreshDisplay@d 0079  
                              ___latbits 0004                        __size_of___lwtoft 0015  
                          __pcstackBANK0 0020                            __pcstackBANK1 00A0  
                          __pcstackBANK2 0128                           _init_interrupt 07FC  
                _setTMR3InterruptHandler 1DC3                 i1setTMR3Interrupt@useInt 0070  
                           _isdigit$1869 0074                      __end_of_computeCapa 1F46  
                    __end_of_computeFreq 1F1B                              sprintf@flag 00C8  
                            sprintf@fval 00C3                              sprintf@prec 00C6  
                      ?_setTMR1Interrupt 0070                                __pnvBANK1 00ED  
                              __pnvBANK2 012C                        __size_of_init_ADC 001B  
                      __size_of_init_PPS 0019                          ?_resmeter_state 0070  
                      __size_of_init_osc 000A                       ??_setTMR1Interrupt 0074  
                      ??_capameter_state 0020                       counter_state@count 00E6  
                       _getPrintableSize 117B                        ?_setTMR3Interrupt 0070  
                               ?___awdiv 0024                                 ?___ftadd 0051  
                               ?___awmod 0020                                 ?___ftdiv 002B  
                               ?___ftneg 0074                                 ?___lldiv 0020  
                               ?___ftmul 0033                                 ?___llmod 002D  
                               ?___ftsub 005E                                __npowers_ 10A8  
                               ?___fttol 005E                       ??_setTMR3Interrupt 0074  
                               ?_getTMR3 0074                                 ?_getTMR5 0074  
                               _DAC1CON0 090E                                 _DAC1CON1 090F  
           ??_INTERRUPT_InterruptManager 0073                              __tdiv_to_l_ 098B  
                              __pswtext1 1800          __end_of_setTMR1InterruptHandler 1DC3  
                    __end_of_measureTemp 1369                             ??__div_to_l_ 0026  
                 __end_of_init_interrupt 07FF                                 _CLC1GLS0 1E16  
                               _CLC1GLS1 1E17                                 _CLC1GLS2 1E18  
                               _CLC1GLS3 1E19                                 _CLC2GLS0 1E20  
                               _CLC2GLS1 1E21                                 _CLC2GLS2 1E22  
                               _CLC2GLS3 1E23                                 _CLC3GLS0 1E2A  
                               _CLC3GLS1 1E2B                                 _CLC3GLS2 1E2C  
                               _CLC3GLS3 1E2D                                 _CLC1SEL0 1E12  
                               _CLC1SEL1 1E13                                 _CLC1SEL2 1E14  
                               _CLC1SEL3 1E15                                 _CLC2SEL0 1E1C  
                               _CLC2SEL1 1E1D                                 _CLC2SEL2 1E1E  
                               _CLC2SEL3 1E1F                            TMR3_ISR@count 0077  
                               _CLC3SEL0 1E26                                 _CLC3SEL1 1E27  
                               _CLC3SEL2 1E28                                 _CLC3SEL3 1E29  
                               ?_isdigit 0070                                 ?_setTMR3 0070  
                              _freshNews 00EB                                _init_CLC1 1E69  
                              _init_CLC2 1E79                                _init_CLC3 1E89  
                              _init_CLC4 0003                                _init_CLCs 1E32  
                              _init_TMR1 1EA9                                _init_TMR3 1E4C  
                              _init_TMR5 1E99                                _init_TMRs 1E1F  
                  __end_of_counter_state 1286                                 _CMP1_ISR 1ECC  
                               ?_sprintf 00A0                      __end_of_init_global 11FF  
                         __size_of_scale 0246                            measureInput@r 006E  
                         __size_of_start 0018                           ___wmul@product 0031  
                               _LATAbits 0016                                 _LATEbits 001A  
                              clear_ram0 1DC9                                 _PIE2bits 0718  
                               _PIE4bits 071A                                 _PIE5bits 071B  
                    startGatedCount@fast 0076      __size_of_INTERRUPT_InterruptManager 002F  
                     __end_of__div_to_l_ 0C54                                 _PIR2bits 070E  
                               _PIR4bits 0710                                 _PIR5bits 0711  
            __size_ofi1_setTMR3Interrupt 0009                                 _TMR1_ISR 1EBA  
                               _TMR3_ISR 12B8                                _printCapa 1624  
                              _printFreq 13F2           ADC_GetSingleConversion@channel 0020  
                 setTMR1Interrupt@useInt 0074                               _ADCON0bits 0093  
                             _ADCON1bits 0094                               _ADCON2bits 0095  
                             _ADCON3bits 0096                        ___wmul@multiplier 002D  
                              _pwm_state 1E04                ??_setTMR3InterruptHandler 0076  
                        ?_init_interrupt 0070                              writeo@start 0027  
                             ?_init_CLC1 0070                               ?_init_CLC2 0070  
                             ?_init_CLC3 0070                               ?_init_CLC4 0070  
                            _computeCapa 1F30                                main@state 012B  
                             ?_init_CLCs 0070                              _computeFreq 1F06  
                             ?_init_TMR1 0070                               ?_init_TMR3 0070  
                             ?_init_TMR5 0070                               ?_init_TMRs 0070  
              __size_of_setCMP1Interrupt 0009                 __size_of_startGatedCount 0025  
       __size_of_ADC_GetSingleConversion 000F                             ??_ibtn_state 0076  
                             _ADSTATbits 0097                  _setCMP1InterruptHandler 1DB7  
               i1setCMP1Interrupt@useInt 0070                              _measureTemp 1327  
                             ?_printCapa 0070                               ?_printFreq 0070  
                       __size_of___awdiv 0052                         __size_of___ftadd 00F6  
                       __size_of___awmod 0046                         __size_of___ftdiv 00A9  
                       __size_of___ftneg 0008                         __size_of___lldiv 0053  
                       __size_of___ftmul 00B4                         __size_of___llmod 0043  
                       __size_of___ftsub 001E                         __size_of___fttol 0087  
                               ___awtoft 11BA                                 ___ftpack 1538  
                            _fround$2147 004D                              _fround$2148 004A  
                               ___lltoft 0803                         __size_of_getTMR3 001B  
                       __size_of_getTMR5 001B                               ?_pwm_state 0070  
                               ___lwtoft 1F1B                          _freqmeter_state 119A  
                  _TMR1_InterruptHandler 012C                       __end_of_ibtn_state 1E04  
                            _init_global 11DC                               sprintf@exp 00BF  
                             sprintf@val 00BB                         __size_of_isdigit 000E  
                       __size_of_setTMR3 0006                        counter_state@lPin 00EC  
                               __ptext10 11DC                                 __ptext11 1E1F  
                               __ptext20 1E79                                 __ptext12 1E99  
                               __ptext21 1E69                                 __ptext13 1E4C  
                               __ptext30 1FAC                                 __ptext22 1FC7  
                               __ptext14 1EA9                                 __ptext31 1624  
                               __ptext23 1DC3                                 __ptext15 1F5E  
                               __ptext40 117B                                 __ptext32 1F91  
                               __ptext24 1DBD                                 __ptext16 1EDF  
                               __ptext41 0050                                 __ptext33 1F1B  
                               __ptext25 1E16                                 __ptext17 1E32  
                               __ptext50 0B37                                 __ptext42 0DBA  
                               __ptext34 1757                                 __ptext26 1DB7  
                               __ptext18 0003                                 __ptext51 0803  
                               __ptext43 1E3E                                 __ptext35 1DFB  
                               __ptext27 1E0D                                 __ptext19 1E89  
                               __ptext60 1224                                 __ptext52 1369  
                               __ptext44 0C54                                 __ptext36 119A  
                               __ptext28 1E04                                 __ptext61 1EF2  
                               __ptext53 1492                                 __ptext45 115F  
                               __ptext37 11FF                                 __ptext29 13F2  
                               __ptext70 1EBA                                 __ptext62 1DF2  
                               __ptext54 159D                                 __ptext46 08D7  
                               __ptext38 1254                                 __ptext71 1F77  
                               __ptext63 1DE9                                 __ptext55 1FE2  
                               __ptext47 13AC                                 __ptext39 16B5  
                               __ptext72 1ECC                                 __ptext56 0A41  
                               __ptext48 1440                                 __ptext73 1DD7  
                               __ptext65 12B8                                 __ptext57 1538  
                               __ptext49 098B                                 __ptext66 1DE0  
                               __ptext58 1DCF                                 __ptext67 1DB1  
                               __ptext59 12EB                                 __ptext68 1F30  
                               __ptext69 1F06                                 __powers_ 10CF  
                       __size_of_sprintf 0740                       voltmeter_state@buf 00CF  
                         getTMR3@readVal 0023                                 _init_ADC 1FC7  
                               _entering 00EF                                 _init_PPS 1F5E  
                          __size_of_main 00AA                                 _init_osc 1E28  
        __end_of_setTMR3InterruptHandler 1DC9                           getTMR5@readVal 0023  
             __end_ofi1_setCMP1Interrupt 1DE0                     __CFG_WDTCWS$WDTCWS_7 0000  
                               int$flags 007E       __end_of_INTERRUPT_InterruptManager 0033  
             _INTERRUPT_InterruptManager 0004                               _INTCONbits 000B  
                            ??_init_CLC1 0074                              ??_init_CLC2 0074  
                            ??_init_CLC3 0074                              ??_init_CLC4 0074  
                            ??_init_CLCs 0074                               _FVRCONbits 090C  
                            ??_init_TMR1 0074                              ??_init_TMR3 0074  
                            ??_init_TMR5 0074                              ??_init_TMRs 0074  
                               isdigit@c 0075                 __end_of_getPrintableSize 119A  
                               scale@scl 004B                          _capameter_state 1224  
                               intlevel1 0000                         ??_resmeter_state 0076  
                              sprintf@ap 00B6                         __tdiv_to_l_@exp1 002F  
                       __tdiv_to_l_@cntr 002E                                sprintf@sp 00CB  
                       __tdiv_to_l_@quot 002A                   setTMR3Interrupt@useInt 0074  
                       counter_state@buf 00CC                         counter_state@pin 00DD  
              ??_setCMP1InterruptHandler 0076                         ___lldiv@dividend 0024  
                      __CFG_CLKOUTEN$OFF 0000                              _PPSLOCKbits 1E8F  
                      ??_startGatedCount 0075                 __size_of_voltmeter_state 0053  
                              writeo@chr 0032                  __end_of_freqmeter_state 11BA  
                __size_of_refreshDisplay 001A                              ??_printCapa 006C  
                            ??_printFreq 0077                             ?__tdiv_to_l_ 0020  
              __size_of_setTMR1Interrupt 0009                              ??_pwm_state 0076  
                        printCapa@offset 00E8                                 sprintf@c 00CA  
                               sprintf@f 00A0            __size_of_startTimeMeasurement 0014  
                       ___lldiv@quotient 0028                 __size_of_tempmeter_state 006C  
                       _setCMP1Interrupt 1DE9                __size_of_setTMR3Interrupt 0009  
                _ADC_GetSingleConversion 1E5A                 ?_setTMR1InterruptHandler 0074  
                           printCapa@buf 00CC                             printCapa@tmr 00DD  
